                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module trial_webserver
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _makeTcpFinPshAck
                                     12 	.globl _makeTcpAck
                                     13 	.globl _makeTcpSynAck
                                     14 	.globl _makeTcpAck2
                                     15 	.globl _makeTcpAck3
                                     16 	.globl _makeArpReply
                                     17 	.globl _spi_control_write
                                     18 	.globl _eth_spi_read
                                     19 	.globl _spi_buffer_read
                                     20 	.globl _mac_spi_read
                                     21 	.globl _calculateTcpChecksum
                                     22 	.globl _calculateIPChecksum
                                     23 	.globl _transmit_tcp_packet
                                     24 	.globl _printf
                                     25 	.globl ___memcpy
                                     26 	.globl _strlen
                                     27 	.globl _memmove
                                     28 	.globl _TF1
                                     29 	.globl _TR1
                                     30 	.globl _TF0
                                     31 	.globl _TR0
                                     32 	.globl _IE1
                                     33 	.globl _IT1
                                     34 	.globl _IE0
                                     35 	.globl _IT0
                                     36 	.globl _SM0
                                     37 	.globl _SM1
                                     38 	.globl _SM2
                                     39 	.globl _REN
                                     40 	.globl _TB8
                                     41 	.globl _RB8
                                     42 	.globl _TI
                                     43 	.globl _RI
                                     44 	.globl _CY
                                     45 	.globl _AC
                                     46 	.globl _F0
                                     47 	.globl _RS1
                                     48 	.globl _RS0
                                     49 	.globl _OV
                                     50 	.globl _F1
                                     51 	.globl _P
                                     52 	.globl _RD
                                     53 	.globl _WR
                                     54 	.globl _T1
                                     55 	.globl _T0
                                     56 	.globl _INT1
                                     57 	.globl _INT0
                                     58 	.globl _TXD0
                                     59 	.globl _TXD
                                     60 	.globl _RXD0
                                     61 	.globl _RXD
                                     62 	.globl _P3_7
                                     63 	.globl _P3_6
                                     64 	.globl _P3_5
                                     65 	.globl _P3_4
                                     66 	.globl _P3_3
                                     67 	.globl _P3_2
                                     68 	.globl _P3_1
                                     69 	.globl _P3_0
                                     70 	.globl _P2_7
                                     71 	.globl _P2_6
                                     72 	.globl _P2_5
                                     73 	.globl _P2_4
                                     74 	.globl _P2_3
                                     75 	.globl _P2_2
                                     76 	.globl _P2_1
                                     77 	.globl _P2_0
                                     78 	.globl _P1_7
                                     79 	.globl _P1_6
                                     80 	.globl _P1_5
                                     81 	.globl _P1_4
                                     82 	.globl _P1_3
                                     83 	.globl _P1_2
                                     84 	.globl _P1_1
                                     85 	.globl _P1_0
                                     86 	.globl _P0_7
                                     87 	.globl _P0_6
                                     88 	.globl _P0_5
                                     89 	.globl _P0_4
                                     90 	.globl _P0_3
                                     91 	.globl _P0_2
                                     92 	.globl _P0_1
                                     93 	.globl _P0_0
                                     94 	.globl _PS
                                     95 	.globl _PT1
                                     96 	.globl _PX1
                                     97 	.globl _PT0
                                     98 	.globl _PX0
                                     99 	.globl _EA
                                    100 	.globl _ES
                                    101 	.globl _ET1
                                    102 	.globl _EX1
                                    103 	.globl _ET0
                                    104 	.globl _EX0
                                    105 	.globl _BREG_F7
                                    106 	.globl _BREG_F6
                                    107 	.globl _BREG_F5
                                    108 	.globl _BREG_F4
                                    109 	.globl _BREG_F3
                                    110 	.globl _BREG_F2
                                    111 	.globl _BREG_F1
                                    112 	.globl _BREG_F0
                                    113 	.globl _P5_7
                                    114 	.globl _P5_6
                                    115 	.globl _P5_5
                                    116 	.globl _P5_4
                                    117 	.globl _P5_3
                                    118 	.globl _P5_2
                                    119 	.globl _P5_1
                                    120 	.globl _P5_0
                                    121 	.globl _P4_7
                                    122 	.globl _P4_6
                                    123 	.globl _P4_5
                                    124 	.globl _P4_4
                                    125 	.globl _P4_3
                                    126 	.globl _P4_2
                                    127 	.globl _P4_1
                                    128 	.globl _P4_0
                                    129 	.globl _PX0L
                                    130 	.globl _PT0L
                                    131 	.globl _PX1L
                                    132 	.globl _PT1L
                                    133 	.globl _PSL
                                    134 	.globl _PT2L
                                    135 	.globl _PPCL
                                    136 	.globl _EC
                                    137 	.globl _CCF0
                                    138 	.globl _CCF1
                                    139 	.globl _CCF2
                                    140 	.globl _CCF3
                                    141 	.globl _CCF4
                                    142 	.globl _CR
                                    143 	.globl _CF
                                    144 	.globl _TF2
                                    145 	.globl _EXF2
                                    146 	.globl _RCLK
                                    147 	.globl _TCLK
                                    148 	.globl _EXEN2
                                    149 	.globl _TR2
                                    150 	.globl _C_T2
                                    151 	.globl _CP_RL2
                                    152 	.globl _T2CON_7
                                    153 	.globl _T2CON_6
                                    154 	.globl _T2CON_5
                                    155 	.globl _T2CON_4
                                    156 	.globl _T2CON_3
                                    157 	.globl _T2CON_2
                                    158 	.globl _T2CON_1
                                    159 	.globl _T2CON_0
                                    160 	.globl _PT2
                                    161 	.globl _ET2
                                    162 	.globl _TMOD
                                    163 	.globl _TL1
                                    164 	.globl _TL0
                                    165 	.globl _TH1
                                    166 	.globl _TH0
                                    167 	.globl _TCON
                                    168 	.globl _SP
                                    169 	.globl _SCON
                                    170 	.globl _SBUF0
                                    171 	.globl _SBUF
                                    172 	.globl _PSW
                                    173 	.globl _PCON
                                    174 	.globl _P3
                                    175 	.globl _P2
                                    176 	.globl _P1
                                    177 	.globl _P0
                                    178 	.globl _IP
                                    179 	.globl _IE
                                    180 	.globl _DP0L
                                    181 	.globl _DPL
                                    182 	.globl _DP0H
                                    183 	.globl _DPH
                                    184 	.globl _B
                                    185 	.globl _ACC
                                    186 	.globl _EECON
                                    187 	.globl _KBF
                                    188 	.globl _KBE
                                    189 	.globl _KBLS
                                    190 	.globl _BRL
                                    191 	.globl _BDRCON
                                    192 	.globl _T2MOD
                                    193 	.globl _SPDAT
                                    194 	.globl _SPSTA
                                    195 	.globl _SPCON
                                    196 	.globl _SADEN
                                    197 	.globl _SADDR
                                    198 	.globl _WDTPRG
                                    199 	.globl _WDTRST
                                    200 	.globl _P5
                                    201 	.globl _P4
                                    202 	.globl _IPH1
                                    203 	.globl _IPL1
                                    204 	.globl _IPH0
                                    205 	.globl _IPL0
                                    206 	.globl _IEN1
                                    207 	.globl _IEN0
                                    208 	.globl _CMOD
                                    209 	.globl _CL
                                    210 	.globl _CH
                                    211 	.globl _CCON
                                    212 	.globl _CCAPM4
                                    213 	.globl _CCAPM3
                                    214 	.globl _CCAPM2
                                    215 	.globl _CCAPM1
                                    216 	.globl _CCAPM0
                                    217 	.globl _CCAP4L
                                    218 	.globl _CCAP3L
                                    219 	.globl _CCAP2L
                                    220 	.globl _CCAP1L
                                    221 	.globl _CCAP0L
                                    222 	.globl _CCAP4H
                                    223 	.globl _CCAP3H
                                    224 	.globl _CCAP2H
                                    225 	.globl _CCAP1H
                                    226 	.globl _CCAP0H
                                    227 	.globl _CKCON1
                                    228 	.globl _CKCON0
                                    229 	.globl _CKRL
                                    230 	.globl _AUXR1
                                    231 	.globl _AUXR
                                    232 	.globl _TH2
                                    233 	.globl _TL2
                                    234 	.globl _RCAP2H
                                    235 	.globl _RCAP2L
                                    236 	.globl _T2CON
                                    237 	.globl _connectionState
                                    238 	.globl _target_ip
                                    239 	.globl _device_ip
                                    240 	.globl _target_mac
                                    241 	.globl _device_mac
                                    242 	.globl _buffer
                                    243 	.globl _prevAck
                                    244 	.globl _prevSeq
                                    245 	.globl _packetReceive
                                    246 	.globl _packetLoop
                                    247 ;--------------------------------------------------------
                                    248 ; special function registers
                                    249 ;--------------------------------------------------------
                                    250 	.area RSEG    (ABS,DATA)
      000000                        251 	.org 0x0000
                           0000C8   252 _T2CON	=	0x00c8
                           0000CA   253 _RCAP2L	=	0x00ca
                           0000CB   254 _RCAP2H	=	0x00cb
                           0000CC   255 _TL2	=	0x00cc
                           0000CD   256 _TH2	=	0x00cd
                           00008E   257 _AUXR	=	0x008e
                           0000A2   258 _AUXR1	=	0x00a2
                           000097   259 _CKRL	=	0x0097
                           00008F   260 _CKCON0	=	0x008f
                           0000AF   261 _CKCON1	=	0x00af
                           0000FA   262 _CCAP0H	=	0x00fa
                           0000FB   263 _CCAP1H	=	0x00fb
                           0000FC   264 _CCAP2H	=	0x00fc
                           0000FD   265 _CCAP3H	=	0x00fd
                           0000FE   266 _CCAP4H	=	0x00fe
                           0000EA   267 _CCAP0L	=	0x00ea
                           0000EB   268 _CCAP1L	=	0x00eb
                           0000EC   269 _CCAP2L	=	0x00ec
                           0000ED   270 _CCAP3L	=	0x00ed
                           0000EE   271 _CCAP4L	=	0x00ee
                           0000DA   272 _CCAPM0	=	0x00da
                           0000DB   273 _CCAPM1	=	0x00db
                           0000DC   274 _CCAPM2	=	0x00dc
                           0000DD   275 _CCAPM3	=	0x00dd
                           0000DE   276 _CCAPM4	=	0x00de
                           0000D8   277 _CCON	=	0x00d8
                           0000F9   278 _CH	=	0x00f9
                           0000E9   279 _CL	=	0x00e9
                           0000D9   280 _CMOD	=	0x00d9
                           0000A8   281 _IEN0	=	0x00a8
                           0000B1   282 _IEN1	=	0x00b1
                           0000B8   283 _IPL0	=	0x00b8
                           0000B7   284 _IPH0	=	0x00b7
                           0000B2   285 _IPL1	=	0x00b2
                           0000B3   286 _IPH1	=	0x00b3
                           0000C0   287 _P4	=	0x00c0
                           0000E8   288 _P5	=	0x00e8
                           0000A6   289 _WDTRST	=	0x00a6
                           0000A7   290 _WDTPRG	=	0x00a7
                           0000A9   291 _SADDR	=	0x00a9
                           0000B9   292 _SADEN	=	0x00b9
                           0000C3   293 _SPCON	=	0x00c3
                           0000C4   294 _SPSTA	=	0x00c4
                           0000C5   295 _SPDAT	=	0x00c5
                           0000C9   296 _T2MOD	=	0x00c9
                           00009B   297 _BDRCON	=	0x009b
                           00009A   298 _BRL	=	0x009a
                           00009C   299 _KBLS	=	0x009c
                           00009D   300 _KBE	=	0x009d
                           00009E   301 _KBF	=	0x009e
                           0000D2   302 _EECON	=	0x00d2
                           0000E0   303 _ACC	=	0x00e0
                           0000F0   304 _B	=	0x00f0
                           000083   305 _DPH	=	0x0083
                           000083   306 _DP0H	=	0x0083
                           000082   307 _DPL	=	0x0082
                           000082   308 _DP0L	=	0x0082
                           0000A8   309 _IE	=	0x00a8
                           0000B8   310 _IP	=	0x00b8
                           000080   311 _P0	=	0x0080
                           000090   312 _P1	=	0x0090
                           0000A0   313 _P2	=	0x00a0
                           0000B0   314 _P3	=	0x00b0
                           000087   315 _PCON	=	0x0087
                           0000D0   316 _PSW	=	0x00d0
                           000099   317 _SBUF	=	0x0099
                           000099   318 _SBUF0	=	0x0099
                           000098   319 _SCON	=	0x0098
                           000081   320 _SP	=	0x0081
                           000088   321 _TCON	=	0x0088
                           00008C   322 _TH0	=	0x008c
                           00008D   323 _TH1	=	0x008d
                           00008A   324 _TL0	=	0x008a
                           00008B   325 _TL1	=	0x008b
                           000089   326 _TMOD	=	0x0089
                                    327 ;--------------------------------------------------------
                                    328 ; special function bits
                                    329 ;--------------------------------------------------------
                                    330 	.area RSEG    (ABS,DATA)
      000000                        331 	.org 0x0000
                           0000AD   332 _ET2	=	0x00ad
                           0000BD   333 _PT2	=	0x00bd
                           0000C8   334 _T2CON_0	=	0x00c8
                           0000C9   335 _T2CON_1	=	0x00c9
                           0000CA   336 _T2CON_2	=	0x00ca
                           0000CB   337 _T2CON_3	=	0x00cb
                           0000CC   338 _T2CON_4	=	0x00cc
                           0000CD   339 _T2CON_5	=	0x00cd
                           0000CE   340 _T2CON_6	=	0x00ce
                           0000CF   341 _T2CON_7	=	0x00cf
                           0000C8   342 _CP_RL2	=	0x00c8
                           0000C9   343 _C_T2	=	0x00c9
                           0000CA   344 _TR2	=	0x00ca
                           0000CB   345 _EXEN2	=	0x00cb
                           0000CC   346 _TCLK	=	0x00cc
                           0000CD   347 _RCLK	=	0x00cd
                           0000CE   348 _EXF2	=	0x00ce
                           0000CF   349 _TF2	=	0x00cf
                           0000DF   350 _CF	=	0x00df
                           0000DE   351 _CR	=	0x00de
                           0000DC   352 _CCF4	=	0x00dc
                           0000DB   353 _CCF3	=	0x00db
                           0000DA   354 _CCF2	=	0x00da
                           0000D9   355 _CCF1	=	0x00d9
                           0000D8   356 _CCF0	=	0x00d8
                           0000AE   357 _EC	=	0x00ae
                           0000BE   358 _PPCL	=	0x00be
                           0000BD   359 _PT2L	=	0x00bd
                           0000BC   360 _PSL	=	0x00bc
                           0000BB   361 _PT1L	=	0x00bb
                           0000BA   362 _PX1L	=	0x00ba
                           0000B9   363 _PT0L	=	0x00b9
                           0000B8   364 _PX0L	=	0x00b8
                           0000C0   365 _P4_0	=	0x00c0
                           0000C1   366 _P4_1	=	0x00c1
                           0000C2   367 _P4_2	=	0x00c2
                           0000C3   368 _P4_3	=	0x00c3
                           0000C4   369 _P4_4	=	0x00c4
                           0000C5   370 _P4_5	=	0x00c5
                           0000C6   371 _P4_6	=	0x00c6
                           0000C7   372 _P4_7	=	0x00c7
                           0000E8   373 _P5_0	=	0x00e8
                           0000E9   374 _P5_1	=	0x00e9
                           0000EA   375 _P5_2	=	0x00ea
                           0000EB   376 _P5_3	=	0x00eb
                           0000EC   377 _P5_4	=	0x00ec
                           0000ED   378 _P5_5	=	0x00ed
                           0000EE   379 _P5_6	=	0x00ee
                           0000EF   380 _P5_7	=	0x00ef
                           0000F0   381 _BREG_F0	=	0x00f0
                           0000F1   382 _BREG_F1	=	0x00f1
                           0000F2   383 _BREG_F2	=	0x00f2
                           0000F3   384 _BREG_F3	=	0x00f3
                           0000F4   385 _BREG_F4	=	0x00f4
                           0000F5   386 _BREG_F5	=	0x00f5
                           0000F6   387 _BREG_F6	=	0x00f6
                           0000F7   388 _BREG_F7	=	0x00f7
                           0000A8   389 _EX0	=	0x00a8
                           0000A9   390 _ET0	=	0x00a9
                           0000AA   391 _EX1	=	0x00aa
                           0000AB   392 _ET1	=	0x00ab
                           0000AC   393 _ES	=	0x00ac
                           0000AF   394 _EA	=	0x00af
                           0000B8   395 _PX0	=	0x00b8
                           0000B9   396 _PT0	=	0x00b9
                           0000BA   397 _PX1	=	0x00ba
                           0000BB   398 _PT1	=	0x00bb
                           0000BC   399 _PS	=	0x00bc
                           000080   400 _P0_0	=	0x0080
                           000081   401 _P0_1	=	0x0081
                           000082   402 _P0_2	=	0x0082
                           000083   403 _P0_3	=	0x0083
                           000084   404 _P0_4	=	0x0084
                           000085   405 _P0_5	=	0x0085
                           000086   406 _P0_6	=	0x0086
                           000087   407 _P0_7	=	0x0087
                           000090   408 _P1_0	=	0x0090
                           000091   409 _P1_1	=	0x0091
                           000092   410 _P1_2	=	0x0092
                           000093   411 _P1_3	=	0x0093
                           000094   412 _P1_4	=	0x0094
                           000095   413 _P1_5	=	0x0095
                           000096   414 _P1_6	=	0x0096
                           000097   415 _P1_7	=	0x0097
                           0000A0   416 _P2_0	=	0x00a0
                           0000A1   417 _P2_1	=	0x00a1
                           0000A2   418 _P2_2	=	0x00a2
                           0000A3   419 _P2_3	=	0x00a3
                           0000A4   420 _P2_4	=	0x00a4
                           0000A5   421 _P2_5	=	0x00a5
                           0000A6   422 _P2_6	=	0x00a6
                           0000A7   423 _P2_7	=	0x00a7
                           0000B0   424 _P3_0	=	0x00b0
                           0000B1   425 _P3_1	=	0x00b1
                           0000B2   426 _P3_2	=	0x00b2
                           0000B3   427 _P3_3	=	0x00b3
                           0000B4   428 _P3_4	=	0x00b4
                           0000B5   429 _P3_5	=	0x00b5
                           0000B6   430 _P3_6	=	0x00b6
                           0000B7   431 _P3_7	=	0x00b7
                           0000B0   432 _RXD	=	0x00b0
                           0000B0   433 _RXD0	=	0x00b0
                           0000B1   434 _TXD	=	0x00b1
                           0000B1   435 _TXD0	=	0x00b1
                           0000B2   436 _INT0	=	0x00b2
                           0000B3   437 _INT1	=	0x00b3
                           0000B4   438 _T0	=	0x00b4
                           0000B5   439 _T1	=	0x00b5
                           0000B6   440 _WR	=	0x00b6
                           0000B7   441 _RD	=	0x00b7
                           0000D0   442 _P	=	0x00d0
                           0000D1   443 _F1	=	0x00d1
                           0000D2   444 _OV	=	0x00d2
                           0000D3   445 _RS0	=	0x00d3
                           0000D4   446 _RS1	=	0x00d4
                           0000D5   447 _F0	=	0x00d5
                           0000D6   448 _AC	=	0x00d6
                           0000D7   449 _CY	=	0x00d7
                           000098   450 _RI	=	0x0098
                           000099   451 _TI	=	0x0099
                           00009A   452 _RB8	=	0x009a
                           00009B   453 _TB8	=	0x009b
                           00009C   454 _REN	=	0x009c
                           00009D   455 _SM2	=	0x009d
                           00009E   456 _SM1	=	0x009e
                           00009F   457 _SM0	=	0x009f
                           000088   458 _IT0	=	0x0088
                           000089   459 _IE0	=	0x0089
                           00008A   460 _IT1	=	0x008a
                           00008B   461 _IE1	=	0x008b
                           00008C   462 _TR0	=	0x008c
                           00008D   463 _TF0	=	0x008d
                           00008E   464 _TR1	=	0x008e
                           00008F   465 _TF1	=	0x008f
                                    466 ;--------------------------------------------------------
                                    467 ; overlayable register banks
                                    468 ;--------------------------------------------------------
                                    469 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        470 	.ds 8
                                    471 ;--------------------------------------------------------
                                    472 ; internal ram data
                                    473 ;--------------------------------------------------------
                                    474 	.area DSEG    (DATA)
      000000                        475 _makeTcpAck3_sloc0_1_0:
      000000                        476 	.ds 4
      000004                        477 _makeTcpAck2_sloc0_1_0:
      000004                        478 	.ds 2
      000006                        479 _makeTcpAck2_sloc1_1_0:
      000006                        480 	.ds 2
      000008                        481 _makeTcpAck2_sloc2_1_0:
      000008                        482 	.ds 4
                                    483 ;--------------------------------------------------------
                                    484 ; overlayable items in internal ram
                                    485 ;--------------------------------------------------------
                                    486 ;--------------------------------------------------------
                                    487 ; indirectly addressable internal ram data
                                    488 ;--------------------------------------------------------
                                    489 	.area ISEG    (DATA)
                                    490 ;--------------------------------------------------------
                                    491 ; absolute internal ram data
                                    492 ;--------------------------------------------------------
                                    493 	.area IABS    (ABS,DATA)
                                    494 	.area IABS    (ABS,DATA)
                                    495 ;--------------------------------------------------------
                                    496 ; bit data
                                    497 ;--------------------------------------------------------
                                    498 	.area BSEG    (BIT)
                                    499 ;--------------------------------------------------------
                                    500 ; paged external ram data
                                    501 ;--------------------------------------------------------
                                    502 	.area PSEG    (PAG,XDATA)
                                    503 ;--------------------------------------------------------
                                    504 ; uninitialized external ram data
                                    505 ;--------------------------------------------------------
                                    506 	.area XSEG    (XDATA)
      000000                        507 _prevSeq::
      000000                        508 	.ds 4
      000004                        509 _prevAck::
      000004                        510 	.ds 4
      000008                        511 _buffer::
      000008                        512 	.ds 1500
      0005E4                        513 _makeTcpFinPshAck_serverSeqNum_10002_136:
      0005E4                        514 	.ds 4
      0005E8                        515 _makeTcpFinPshAck_ackNum_10002_136:
      0005E8                        516 	.ds 4
      0005EC                        517 _packetReceive_gNextPacketPtr_10000_138:
      0005EC                        518 	.ds 2
      0005EE                        519 _packetReceive_unreleasedPacket_10000_138:
      0005EE                        520 	.ds 1
      0005EF                        521 _packetReceive_len_10000_138:
      0005EF                        522 	.ds 2
      0005F1                        523 _packetReceive_header_20002_144:
      0005F1                        524 	.ds 6
      0005F7                        525 _packetReceive_start_20003_145:
      0005F7                        526 	.ds 2
                                    527 ;--------------------------------------------------------
                                    528 ; absolute external ram data
                                    529 ;--------------------------------------------------------
                                    530 	.area XABS    (ABS,XDATA)
                                    531 ;--------------------------------------------------------
                                    532 ; initialized external ram data
                                    533 ;--------------------------------------------------------
                                    534 	.area XISEG   (XDATA)
      000000                        535 _device_mac::
      000000                        536 	.ds 6
      000006                        537 _target_mac::
      000006                        538 	.ds 6
      00000C                        539 _device_ip::
      00000C                        540 	.ds 4
      000010                        541 _target_ip::
      000010                        542 	.ds 4
      000014                        543 _connectionState::
      000014                        544 	.ds 1
                                    545 	.area HOME    (CODE)
                                    546 	.area GSINIT0 (CODE)
                                    547 	.area GSINIT1 (CODE)
                                    548 	.area GSINIT2 (CODE)
                                    549 	.area GSINIT3 (CODE)
                                    550 	.area GSINIT4 (CODE)
                                    551 	.area GSINIT5 (CODE)
                                    552 	.area GSINIT  (CODE)
                                    553 	.area GSFINAL (CODE)
                                    554 	.area CSEG    (CODE)
                                    555 ;--------------------------------------------------------
                                    556 ; global & static initialisations
                                    557 ;--------------------------------------------------------
                                    558 	.area HOME    (CODE)
                                    559 	.area GSINIT  (CODE)
                                    560 	.area GSFINAL (CODE)
                                    561 	.area GSINIT  (CODE)
                                    562 ;------------------------------------------------------------
                                    563 ;Allocation info for local variables in function 'packetReceive'
                                    564 ;------------------------------------------------------------
                                    565 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_138'
                                    566 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_138'
                                    567 ;len                       Allocated with name '_packetReceive_len_10000_138'
                                    568 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_140'
                                    569 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_142'
                                    570 ;header                    Allocated with name '_packetReceive_header_20002_144'
                                    571 ;start                     Allocated with name '_packetReceive_start_20003_145'
                                    572 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_146'
                                    573 ;------------------------------------------------------------
                                    574 ;	trial_webserver.c:367: static uint16_t gNextPacketPtr = RX_BUFFER_START;
      000000 90r05rEC         [24]  575 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000003 E4               [12]  576 	clr	a
      000004 F0               [24]  577 	movx	@dptr,a
      000005 A3               [24]  578 	inc	dptr
      000006 F0               [24]  579 	movx	@dptr,a
                                    580 ;	trial_webserver.c:368: static bool unreleasedPacket = false;
      000007 90r05rEE         [24]  581 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      00000A F0               [24]  582 	movx	@dptr,a
                                    583 ;--------------------------------------------------------
                                    584 ; Home
                                    585 ;--------------------------------------------------------
                                    586 	.area HOME    (CODE)
                                    587 	.area HOME    (CODE)
                                    588 ;--------------------------------------------------------
                                    589 ; code
                                    590 ;--------------------------------------------------------
                                    591 	.area CSEG    (CODE)
                                    592 ;------------------------------------------------------------
                                    593 ;Allocation info for local variables in function 'makeArpReply'
                                    594 ;------------------------------------------------------------
                                    595 ;	trial_webserver.c:24: void makeArpReply()
                                    596 ;	-----------------------------------------
                                    597 ;	 function makeArpReply
                                    598 ;	-----------------------------------------
      000000                        599 _makeArpReply:
                           000007   600 	ar7 = 0x07
                           000006   601 	ar6 = 0x06
                           000005   602 	ar5 = 0x05
                           000004   603 	ar4 = 0x04
                           000003   604 	ar3 = 0x03
                           000002   605 	ar2 = 0x02
                           000001   606 	ar1 = 0x01
                           000000   607 	ar0 = 0x00
                                    608 ;	trial_webserver.c:26: printf("trialarpreply\n\r");
      000000 74r00            [12]  609 	mov	a,#___str_0
      000002 C0 E0            [24]  610 	push	acc
      000004 74s00            [12]  611 	mov	a,#(___str_0 >> 8)
      000006 C0 E0            [24]  612 	push	acc
      000008 74 80            [12]  613 	mov	a,#0x80
      00000A C0 E0            [24]  614 	push	acc
      00000C 12r00r00         [24]  615 	lcall	_printf
      00000F 15 81            [12]  616 	dec	sp
      000011 15 81            [12]  617 	dec	sp
      000013 15 81            [12]  618 	dec	sp
                                    619 ;	trial_webserver.c:28: memmove(&buffer[1], &buffer[0], 42);
      000015 90r00r00         [24]  620 	mov	dptr,#_memmove_PARM_2
      000018 74r08            [12]  621 	mov	a,#_buffer
      00001A F0               [24]  622 	movx	@dptr,a
      00001B 74s00            [12]  623 	mov	a,#(_buffer >> 8)
      00001D A3               [24]  624 	inc	dptr
      00001E F0               [24]  625 	movx	@dptr,a
      00001F E4               [12]  626 	clr	a
      000020 A3               [24]  627 	inc	dptr
      000021 F0               [24]  628 	movx	@dptr,a
      000022 90r00r00         [24]  629 	mov	dptr,#_memmove_PARM_3
      000025 74 2A            [12]  630 	mov	a,#0x2a
      000027 F0               [24]  631 	movx	@dptr,a
      000028 E4               [12]  632 	clr	a
      000029 A3               [24]  633 	inc	dptr
      00002A F0               [24]  634 	movx	@dptr,a
      00002B 90r00r09         [24]  635 	mov	dptr,#(_buffer + 0x0001)
      00002E F5 F0            [12]  636 	mov	b,a
      000030 12r00r00         [24]  637 	lcall	_memmove
                                    638 ;	trial_webserver.c:31: buffer[0] = 0x0E;
      000033 90r00r08         [24]  639 	mov	dptr,#_buffer
      000036 74 0E            [12]  640 	mov	a,#0x0e
      000038 F0               [24]  641 	movx	@dptr,a
                                    642 ;	trial_webserver.c:34: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6); // Destination MAC
      000039 90r00r00         [24]  643 	mov	dptr,#___memcpy_PARM_2
      00003C 74r0F            [12]  644 	mov	a,#(_buffer + 0x0007)
      00003E F0               [24]  645 	movx	@dptr,a
      00003F 74s00            [12]  646 	mov	a,#((_buffer + 0x0007) >> 8)
      000041 A3               [24]  647 	inc	dptr
      000042 F0               [24]  648 	movx	@dptr,a
      000043 E4               [12]  649 	clr	a
      000044 A3               [24]  650 	inc	dptr
      000045 F0               [24]  651 	movx	@dptr,a
      000046 90r00r00         [24]  652 	mov	dptr,#___memcpy_PARM_3
      000049 74 06            [12]  653 	mov	a,#0x06
      00004B F0               [24]  654 	movx	@dptr,a
      00004C E4               [12]  655 	clr	a
      00004D A3               [24]  656 	inc	dptr
      00004E F0               [24]  657 	movx	@dptr,a
      00004F 90r00r09         [24]  658 	mov	dptr,#(_buffer + 0x0001)
      000052 F5 F0            [12]  659 	mov	b,a
      000054 12r00r00         [24]  660 	lcall	___memcpy
                                    661 ;	trial_webserver.c:37: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6); // Source MAC
      000057 90r00r00         [24]  662 	mov	dptr,#___memcpy_PARM_2
      00005A 74r00            [12]  663 	mov	a,#_device_mac
      00005C F0               [24]  664 	movx	@dptr,a
      00005D 74s00            [12]  665 	mov	a,#(_device_mac >> 8)
      00005F A3               [24]  666 	inc	dptr
      000060 F0               [24]  667 	movx	@dptr,a
      000061 E4               [12]  668 	clr	a
      000062 A3               [24]  669 	inc	dptr
      000063 F0               [24]  670 	movx	@dptr,a
      000064 90r00r00         [24]  671 	mov	dptr,#___memcpy_PARM_3
      000067 74 06            [12]  672 	mov	a,#0x06
      000069 F0               [24]  673 	movx	@dptr,a
      00006A E4               [12]  674 	clr	a
      00006B A3               [24]  675 	inc	dptr
      00006C F0               [24]  676 	movx	@dptr,a
      00006D 90r00r0F         [24]  677 	mov	dptr,#(_buffer + 0x0007)
      000070 F5 F0            [12]  678 	mov	b,a
      000072 12r00r00         [24]  679 	lcall	___memcpy
                                    680 ;	trial_webserver.c:40: buffer[1 + 21] = 0x02; // ARP Reply opcode
      000075 90r00r1E         [24]  681 	mov	dptr,#(_buffer + 0x0016)
      000078 74 02            [12]  682 	mov	a,#0x02
      00007A F0               [24]  683 	movx	@dptr,a
                                    684 ;	trial_webserver.c:43: memcpy(&buffer[1 + 32], &buffer[1 + 22], 6); // Target MAC = Sender MAC from request
      00007B 90r00r00         [24]  685 	mov	dptr,#___memcpy_PARM_2
      00007E 74r1F            [12]  686 	mov	a,#(_buffer + 0x0017)
      000080 F0               [24]  687 	movx	@dptr,a
      000081 74s00            [12]  688 	mov	a,#((_buffer + 0x0017) >> 8)
      000083 A3               [24]  689 	inc	dptr
      000084 F0               [24]  690 	movx	@dptr,a
      000085 E4               [12]  691 	clr	a
      000086 A3               [24]  692 	inc	dptr
      000087 F0               [24]  693 	movx	@dptr,a
      000088 90r00r00         [24]  694 	mov	dptr,#___memcpy_PARM_3
      00008B 74 06            [12]  695 	mov	a,#0x06
      00008D F0               [24]  696 	movx	@dptr,a
      00008E E4               [12]  697 	clr	a
      00008F A3               [24]  698 	inc	dptr
      000090 F0               [24]  699 	movx	@dptr,a
      000091 90r00r29         [24]  700 	mov	dptr,#(_buffer + 0x0021)
      000094 F5 F0            [12]  701 	mov	b,a
      000096 12r00r00         [24]  702 	lcall	___memcpy
                                    703 ;	trial_webserver.c:44: memcpy(&buffer[1 + 38], &buffer[1 + 28], 4); // Target IP = Sender IP from request
      000099 90r00r00         [24]  704 	mov	dptr,#___memcpy_PARM_2
      00009C 74r25            [12]  705 	mov	a,#(_buffer + 0x001d)
      00009E F0               [24]  706 	movx	@dptr,a
      00009F 74s00            [12]  707 	mov	a,#((_buffer + 0x001d) >> 8)
      0000A1 A3               [24]  708 	inc	dptr
      0000A2 F0               [24]  709 	movx	@dptr,a
      0000A3 E4               [12]  710 	clr	a
      0000A4 A3               [24]  711 	inc	dptr
      0000A5 F0               [24]  712 	movx	@dptr,a
      0000A6 90r00r00         [24]  713 	mov	dptr,#___memcpy_PARM_3
      0000A9 74 04            [12]  714 	mov	a,#0x04
      0000AB F0               [24]  715 	movx	@dptr,a
      0000AC E4               [12]  716 	clr	a
      0000AD A3               [24]  717 	inc	dptr
      0000AE F0               [24]  718 	movx	@dptr,a
      0000AF 90r00r2F         [24]  719 	mov	dptr,#(_buffer + 0x0027)
      0000B2 F5 F0            [12]  720 	mov	b,a
      0000B4 12r00r00         [24]  721 	lcall	___memcpy
                                    722 ;	trial_webserver.c:47: memcpy(&buffer[1 + 22], device_mac, 6); // Sender MAC = device MAC
      0000B7 90r00r00         [24]  723 	mov	dptr,#___memcpy_PARM_2
      0000BA 74r00            [12]  724 	mov	a,#_device_mac
      0000BC F0               [24]  725 	movx	@dptr,a
      0000BD 74s00            [12]  726 	mov	a,#(_device_mac >> 8)
      0000BF A3               [24]  727 	inc	dptr
      0000C0 F0               [24]  728 	movx	@dptr,a
      0000C1 E4               [12]  729 	clr	a
      0000C2 A3               [24]  730 	inc	dptr
      0000C3 F0               [24]  731 	movx	@dptr,a
      0000C4 90r00r00         [24]  732 	mov	dptr,#___memcpy_PARM_3
      0000C7 74 06            [12]  733 	mov	a,#0x06
      0000C9 F0               [24]  734 	movx	@dptr,a
      0000CA E4               [12]  735 	clr	a
      0000CB A3               [24]  736 	inc	dptr
      0000CC F0               [24]  737 	movx	@dptr,a
      0000CD 90r00r1F         [24]  738 	mov	dptr,#(_buffer + 0x0017)
      0000D0 F5 F0            [12]  739 	mov	b,a
      0000D2 12r00r00         [24]  740 	lcall	___memcpy
                                    741 ;	trial_webserver.c:48: memcpy(&buffer[1 + 28], device_ip, 4);  // Sender IP = device IP
      0000D5 90r00r00         [24]  742 	mov	dptr,#___memcpy_PARM_2
      0000D8 74r0C            [12]  743 	mov	a,#_device_ip
      0000DA F0               [24]  744 	movx	@dptr,a
      0000DB 74s00            [12]  745 	mov	a,#(_device_ip >> 8)
      0000DD A3               [24]  746 	inc	dptr
      0000DE F0               [24]  747 	movx	@dptr,a
      0000DF E4               [12]  748 	clr	a
      0000E0 A3               [24]  749 	inc	dptr
      0000E1 F0               [24]  750 	movx	@dptr,a
      0000E2 90r00r00         [24]  751 	mov	dptr,#___memcpy_PARM_3
      0000E5 74 04            [12]  752 	mov	a,#0x04
      0000E7 F0               [24]  753 	movx	@dptr,a
      0000E8 E4               [12]  754 	clr	a
      0000E9 A3               [24]  755 	inc	dptr
      0000EA F0               [24]  756 	movx	@dptr,a
      0000EB 90r00r25         [24]  757 	mov	dptr,#(_buffer + 0x001d)
      0000EE F5 F0            [12]  758 	mov	b,a
      0000F0 12r00r00         [24]  759 	lcall	___memcpy
                                    760 ;	trial_webserver.c:51: transmit_tcp_packet(buffer, 43);
      0000F3 90r00r00         [24]  761 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0000F6 74 2B            [12]  762 	mov	a,#0x2b
      0000F8 F0               [24]  763 	movx	@dptr,a
      0000F9 E4               [12]  764 	clr	a
      0000FA A3               [24]  765 	inc	dptr
      0000FB F0               [24]  766 	movx	@dptr,a
      0000FC 90r00r08         [24]  767 	mov	dptr,#_buffer
      0000FF F5 F0            [12]  768 	mov	b,a
                                    769 ;	trial_webserver.c:52: }
      000101 02r00r00         [24]  770 	ljmp	_transmit_tcp_packet
                                    771 ;------------------------------------------------------------
                                    772 ;Allocation info for local variables in function 'makeTcpAck3'
                                    773 ;------------------------------------------------------------
                                    774 ;sloc0                     Allocated with name '_makeTcpAck3_sloc0_1_0'
                                    775 ;srcPort                   Allocated with name '_makeTcpAck3_srcPort_10001_122'
                                    776 ;dstPort                   Allocated with name '_makeTcpAck3_dstPort_10001_122'
                                    777 ;clientSeqNum              Allocated with name '_makeTcpAck3_clientSeqNum_10002_123'
                                    778 ;clientAckNum              Allocated with name '_makeTcpAck3_clientAckNum_10002_123'
                                    779 ;serverSeqNum              Allocated with name '_makeTcpAck3_serverSeqNum_10002_123'
                                    780 ;ackNum                    Allocated with name '_makeTcpAck3_ackNum_10002_123'
                                    781 ;totalLength               Allocated with name '_makeTcpAck3_totalLength_10003_124'
                                    782 ;------------------------------------------------------------
                                    783 ;	trial_webserver.c:57: void makeTcpAck3() {
                                    784 ;	-----------------------------------------
                                    785 ;	 function makeTcpAck3
                                    786 ;	-----------------------------------------
      000104                        787 _makeTcpAck3:
                                    788 ;	trial_webserver.c:58: printf("makeTcpAck\n\r");
      000104 74r10            [12]  789 	mov	a,#___str_1
      000106 C0 E0            [24]  790 	push	acc
      000108 74s00            [12]  791 	mov	a,#(___str_1 >> 8)
      00010A C0 E0            [24]  792 	push	acc
      00010C 74 80            [12]  793 	mov	a,#0x80
      00010E C0 E0            [24]  794 	push	acc
      000110 12r00r00         [24]  795 	lcall	_printf
      000113 15 81            [12]  796 	dec	sp
      000115 15 81            [12]  797 	dec	sp
      000117 15 81            [12]  798 	dec	sp
                                    799 ;	trial_webserver.c:61: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000119 90r00r00         [24]  800 	mov	dptr,#_memmove_PARM_2
      00011C 74r08            [12]  801 	mov	a,#_buffer
      00011E F0               [24]  802 	movx	@dptr,a
      00011F 74s00            [12]  803 	mov	a,#(_buffer >> 8)
      000121 A3               [24]  804 	inc	dptr
      000122 F0               [24]  805 	movx	@dptr,a
      000123 E4               [12]  806 	clr	a
      000124 A3               [24]  807 	inc	dptr
      000125 F0               [24]  808 	movx	@dptr,a
      000126 90r00r00         [24]  809 	mov	dptr,#_memmove_PARM_3
      000129 74 36            [12]  810 	mov	a,#0x36
      00012B F0               [24]  811 	movx	@dptr,a
      00012C E4               [12]  812 	clr	a
      00012D A3               [24]  813 	inc	dptr
      00012E F0               [24]  814 	movx	@dptr,a
      00012F 90r00r09         [24]  815 	mov	dptr,#(_buffer + 0x0001)
      000132 F5 F0            [12]  816 	mov	b,a
      000134 12r00r00         [24]  817 	lcall	_memmove
                                    818 ;	trial_webserver.c:62: buffer[0] = 0x0E;
      000137 90r00r08         [24]  819 	mov	dptr,#_buffer
      00013A 74 0E            [12]  820 	mov	a,#0x0e
      00013C F0               [24]  821 	movx	@dptr,a
                                    822 ;	trial_webserver.c:65: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      00013D 90r00r00         [24]  823 	mov	dptr,#___memcpy_PARM_2
      000140 74r0F            [12]  824 	mov	a,#(_buffer + 0x0007)
      000142 F0               [24]  825 	movx	@dptr,a
      000143 74s00            [12]  826 	mov	a,#((_buffer + 0x0007) >> 8)
      000145 A3               [24]  827 	inc	dptr
      000146 F0               [24]  828 	movx	@dptr,a
      000147 E4               [12]  829 	clr	a
      000148 A3               [24]  830 	inc	dptr
      000149 F0               [24]  831 	movx	@dptr,a
      00014A 90r00r00         [24]  832 	mov	dptr,#___memcpy_PARM_3
      00014D 74 06            [12]  833 	mov	a,#0x06
      00014F F0               [24]  834 	movx	@dptr,a
      000150 E4               [12]  835 	clr	a
      000151 A3               [24]  836 	inc	dptr
      000152 F0               [24]  837 	movx	@dptr,a
      000153 90r00r09         [24]  838 	mov	dptr,#(_buffer + 0x0001)
      000156 F5 F0            [12]  839 	mov	b,a
      000158 12r00r00         [24]  840 	lcall	___memcpy
                                    841 ;	trial_webserver.c:66: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      00015B 90r00r00         [24]  842 	mov	dptr,#___memcpy_PARM_2
      00015E 74r00            [12]  843 	mov	a,#_device_mac
      000160 F0               [24]  844 	movx	@dptr,a
      000161 74s00            [12]  845 	mov	a,#(_device_mac >> 8)
      000163 A3               [24]  846 	inc	dptr
      000164 F0               [24]  847 	movx	@dptr,a
      000165 E4               [12]  848 	clr	a
      000166 A3               [24]  849 	inc	dptr
      000167 F0               [24]  850 	movx	@dptr,a
      000168 90r00r00         [24]  851 	mov	dptr,#___memcpy_PARM_3
      00016B 74 06            [12]  852 	mov	a,#0x06
      00016D F0               [24]  853 	movx	@dptr,a
      00016E E4               [12]  854 	clr	a
      00016F A3               [24]  855 	inc	dptr
      000170 F0               [24]  856 	movx	@dptr,a
      000171 90r00r0F         [24]  857 	mov	dptr,#(_buffer + 0x0007)
      000174 F5 F0            [12]  858 	mov	b,a
      000176 12r00r00         [24]  859 	lcall	___memcpy
                                    860 ;	trial_webserver.c:69: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000179 90r00r00         [24]  861 	mov	dptr,#___memcpy_PARM_2
      00017C 74r23            [12]  862 	mov	a,#(_buffer + 0x001b)
      00017E F0               [24]  863 	movx	@dptr,a
      00017F 74s00            [12]  864 	mov	a,#((_buffer + 0x001b) >> 8)
      000181 A3               [24]  865 	inc	dptr
      000182 F0               [24]  866 	movx	@dptr,a
      000183 E4               [12]  867 	clr	a
      000184 A3               [24]  868 	inc	dptr
      000185 F0               [24]  869 	movx	@dptr,a
      000186 90r00r00         [24]  870 	mov	dptr,#___memcpy_PARM_3
      000189 74 04            [12]  871 	mov	a,#0x04
      00018B F0               [24]  872 	movx	@dptr,a
      00018C E4               [12]  873 	clr	a
      00018D A3               [24]  874 	inc	dptr
      00018E F0               [24]  875 	movx	@dptr,a
      00018F 90r00r27         [24]  876 	mov	dptr,#(_buffer + 0x001f)
      000192 F5 F0            [12]  877 	mov	b,a
      000194 12r00r00         [24]  878 	lcall	___memcpy
                                    879 ;	trial_webserver.c:70: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000197 90r00r00         [24]  880 	mov	dptr,#___memcpy_PARM_2
      00019A 74r0C            [12]  881 	mov	a,#_device_ip
      00019C F0               [24]  882 	movx	@dptr,a
      00019D 74s00            [12]  883 	mov	a,#(_device_ip >> 8)
      00019F A3               [24]  884 	inc	dptr
      0001A0 F0               [24]  885 	movx	@dptr,a
      0001A1 E4               [12]  886 	clr	a
      0001A2 A3               [24]  887 	inc	dptr
      0001A3 F0               [24]  888 	movx	@dptr,a
      0001A4 90r00r00         [24]  889 	mov	dptr,#___memcpy_PARM_3
      0001A7 74 04            [12]  890 	mov	a,#0x04
      0001A9 F0               [24]  891 	movx	@dptr,a
      0001AA E4               [12]  892 	clr	a
      0001AB A3               [24]  893 	inc	dptr
      0001AC F0               [24]  894 	movx	@dptr,a
      0001AD 90r00r23         [24]  895 	mov	dptr,#(_buffer + 0x001b)
      0001B0 F5 F0            [12]  896 	mov	b,a
      0001B2 12r00r00         [24]  897 	lcall	___memcpy
                                    898 ;	trial_webserver.c:73: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      0001B5 90r00r2B         [24]  899 	mov	dptr,#(_buffer + 0x0023)
      0001B8 E0               [24]  900 	movx	a,@dptr
      0001B9 FE               [12]  901 	mov	r6,a
      0001BA 7F 00            [12]  902 	mov	r7,#0x00
      0001BC 90r00r2C         [24]  903 	mov	dptr,#(_buffer + 0x0024)
      0001BF E0               [24]  904 	movx	a,@dptr
      0001C0 7C 00            [12]  905 	mov	r4,#0x00
      0001C2 42 07            [12]  906 	orl	ar7,a
      0001C4 EC               [12]  907 	mov	a,r4
      0001C5 42 06            [12]  908 	orl	ar6,a
                                    909 ;	trial_webserver.c:75: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0001C7 90r00r2D         [24]  910 	mov	dptr,#(_buffer + 0x0025)
      0001CA E0               [24]  911 	movx	a,@dptr
      0001CB FC               [12]  912 	mov	r4,a
      0001CC 7D 00            [12]  913 	mov	r5,#0x00
      0001CE 90r00r2E         [24]  914 	mov	dptr,#(_buffer + 0x0026)
      0001D1 E0               [24]  915 	movx	a,@dptr
      0001D2 7A 00            [12]  916 	mov	r2,#0x00
      0001D4 42 05            [12]  917 	orl	ar5,a
      0001D6 EA               [12]  918 	mov	a,r2
      0001D7 42 04            [12]  919 	orl	ar4,a
                                    920 ;	trial_webserver.c:77: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      0001D9 8C 03            [24]  921 	mov	ar3,r4
      0001DB 90r00r2B         [24]  922 	mov	dptr,#(_buffer + 0x0023)
      0001DE EB               [12]  923 	mov	a,r3
      0001DF F0               [24]  924 	movx	@dptr,a
                                    925 ;	trial_webserver.c:78: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      0001E0 90r00r2C         [24]  926 	mov	dptr,#(_buffer + 0x0024)
      0001E3 ED               [12]  927 	mov	a,r5
      0001E4 F0               [24]  928 	movx	@dptr,a
                                    929 ;	trial_webserver.c:79: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0001E5 8E 05            [24]  930 	mov	ar5,r6
      0001E7 90r00r2D         [24]  931 	mov	dptr,#(_buffer + 0x0025)
      0001EA ED               [12]  932 	mov	a,r5
      0001EB F0               [24]  933 	movx	@dptr,a
                                    934 ;	trial_webserver.c:80: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0001EC 90r00r2E         [24]  935 	mov	dptr,#(_buffer + 0x0026)
      0001EF EF               [12]  936 	mov	a,r7
      0001F0 F0               [24]  937 	movx	@dptr,a
                                    938 ;	trial_webserver.c:83: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0001F1 90r00r31         [24]  939 	mov	dptr,#(_buffer + 0x0029)
      0001F4 E0               [24]  940 	movx	a,@dptr
      0001F5 FE               [12]  941 	mov	r6,a
      0001F6 7F 00            [12]  942 	mov	r7,#0x00
      0001F8 90r00r32         [24]  943 	mov	dptr,#(_buffer + 0x002a)
      0001FB E0               [24]  944 	movx	a,@dptr
      0001FC 7C 00            [12]  945 	mov	r4,#0x00
      0001FE 42 07            [12]  946 	orl	ar7,a
      000200 EC               [12]  947 	mov	a,r4
      000201 42 06            [12]  948 	orl	ar6,a
      000203 EE               [12]  949 	mov	a,r6
      000204 33               [12]  950 	rlc	a
      000205 95 E0            [12]  951 	subb	a,acc
      000207 FD               [12]  952 	mov	r5,a
      000208 FC               [12]  953 	mov	r4,a
                                    954 ;	trial_webserver.c:86: uint32_t clientAckNum = (buffer[1 + TCP_ACK_H_P] << 24)
      000209 90r00r35         [24]  955 	mov	dptr,#(_buffer + 0x002d)
      00020C E0               [24]  956 	movx	a,@dptr
      00020D FA               [12]  957 	mov	r2,a
      00020E 7B 00            [12]  958 	mov	r3,#0x00
      000210 90r00r36         [24]  959 	mov	dptr,#(_buffer + 0x002e)
      000213 E0               [24]  960 	movx	a,@dptr
      000214 79 00            [12]  961 	mov	r1,#0x00
      000216 42 03            [12]  962 	orl	ar3,a
      000218 E9               [12]  963 	mov	a,r1
      000219 42 02            [12]  964 	orl	ar2,a
      00021B 8B 00            [24]  965 	mov	ar0,r3
      00021D EA               [12]  966 	mov	a,r2
      00021E F9               [12]  967 	mov	r1,a
      00021F 33               [12]  968 	rlc	a
      000220 95 E0            [12]  969 	subb	a,acc
      000222 FA               [12]  970 	mov	r2,a
      000223 FB               [12]  971 	mov	r3,a
                                    972 ;	trial_webserver.c:90: uint32_t ackNum = clientSeqNum + 1;
      000224 74 01            [12]  973 	mov	a,#0x01
      000226 2F               [12]  974 	add	a, r7
      000227 F5*00            [12]  975 	mov	_makeTcpAck3_sloc0_1_0,a
      000229 E4               [12]  976 	clr	a
      00022A 3E               [12]  977 	addc	a, r6
      00022B F5*01            [12]  978 	mov	(_makeTcpAck3_sloc0_1_0 + 1),a
      00022D E4               [12]  979 	clr	a
      00022E 3D               [12]  980 	addc	a, r5
      00022F F5*02            [12]  981 	mov	(_makeTcpAck3_sloc0_1_0 + 2),a
      000231 E4               [12]  982 	clr	a
      000232 3C               [12]  983 	addc	a, r4
      000233 F5*03            [12]  984 	mov	(_makeTcpAck3_sloc0_1_0 + 3),a
                                    985 ;	trial_webserver.c:91: prevSeq = serverSeqNum;
      000235 90r00r00         [24]  986 	mov	dptr,#_prevSeq
      000238 E8               [12]  987 	mov	a,r0
      000239 F0               [24]  988 	movx	@dptr,a
      00023A E9               [12]  989 	mov	a,r1
      00023B A3               [24]  990 	inc	dptr
      00023C F0               [24]  991 	movx	@dptr,a
      00023D EA               [12]  992 	mov	a,r2
      00023E A3               [24]  993 	inc	dptr
      00023F F0               [24]  994 	movx	@dptr,a
      000240 EB               [12]  995 	mov	a,r3
      000241 A3               [24]  996 	inc	dptr
      000242 F0               [24]  997 	movx	@dptr,a
                                    998 ;	trial_webserver.c:92: prevAck = ackNum;
      000243 90r00r04         [24]  999 	mov	dptr,#_prevAck
      000246 E5*00            [12] 1000 	mov	a,_makeTcpAck3_sloc0_1_0
      000248 F0               [24] 1001 	movx	@dptr,a
      000249 E5*01            [12] 1002 	mov	a,(_makeTcpAck3_sloc0_1_0 + 1)
      00024B A3               [24] 1003 	inc	dptr
      00024C F0               [24] 1004 	movx	@dptr,a
      00024D E5*02            [12] 1005 	mov	a,(_makeTcpAck3_sloc0_1_0 + 2)
      00024F A3               [24] 1006 	inc	dptr
      000250 F0               [24] 1007 	movx	@dptr,a
      000251 E5*03            [12] 1008 	mov	a,(_makeTcpAck3_sloc0_1_0 + 3)
      000253 A3               [24] 1009 	inc	dptr
      000254 F0               [24] 1010 	movx	@dptr,a
                                   1011 ;	trial_webserver.c:95: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000255 8B 07            [24] 1012 	mov	ar7,r3
      000257 90r00r2F         [24] 1013 	mov	dptr,#(_buffer + 0x0027)
      00025A EF               [12] 1014 	mov	a,r7
      00025B F0               [24] 1015 	movx	@dptr,a
                                   1016 ;	trial_webserver.c:96: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      00025C 8A 07            [24] 1017 	mov	ar7,r2
      00025E 90r00r30         [24] 1018 	mov	dptr,#(_buffer + 0x0028)
      000261 EF               [12] 1019 	mov	a,r7
      000262 F0               [24] 1020 	movx	@dptr,a
                                   1021 ;	trial_webserver.c:97: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000263 89 07            [24] 1022 	mov	ar7,r1
      000265 90r00r31         [24] 1023 	mov	dptr,#(_buffer + 0x0029)
      000268 EF               [12] 1024 	mov	a,r7
      000269 F0               [24] 1025 	movx	@dptr,a
                                   1026 ;	trial_webserver.c:98: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      00026A 90r00r32         [24] 1027 	mov	dptr,#(_buffer + 0x002a)
      00026D E8               [12] 1028 	mov	a,r0
      00026E F0               [24] 1029 	movx	@dptr,a
                                   1030 ;	trial_webserver.c:99: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      00026F AF*03            [24] 1031 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 3)
      000271 90r00r33         [24] 1032 	mov	dptr,#(_buffer + 0x002b)
      000274 EF               [12] 1033 	mov	a,r7
      000275 F0               [24] 1034 	movx	@dptr,a
                                   1035 ;	trial_webserver.c:100: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000276 AF*02            [24] 1036 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 2)
      000278 90r00r34         [24] 1037 	mov	dptr,#(_buffer + 0x002c)
      00027B EF               [12] 1038 	mov	a,r7
      00027C F0               [24] 1039 	movx	@dptr,a
                                   1040 ;	trial_webserver.c:101: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      00027D AF*01            [24] 1041 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 1)
      00027F 90r00r35         [24] 1042 	mov	dptr,#(_buffer + 0x002d)
      000282 EF               [12] 1043 	mov	a,r7
      000283 F0               [24] 1044 	movx	@dptr,a
                                   1045 ;	trial_webserver.c:102: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      000284 AF*00            [24] 1046 	mov	r7,_makeTcpAck3_sloc0_1_0
      000286 90r00r36         [24] 1047 	mov	dptr,#(_buffer + 0x002e)
      000289 EF               [12] 1048 	mov	a,r7
      00028A F0               [24] 1049 	movx	@dptr,a
                                   1050 ;	trial_webserver.c:106: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      00028B 90r00r19         [24] 1051 	mov	dptr,#(_buffer + 0x0011)
      00028E E4               [12] 1052 	clr	a
      00028F F0               [24] 1053 	movx	@dptr,a
                                   1054 ;	trial_webserver.c:107: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000290 90r00r1A         [24] 1055 	mov	dptr,#(_buffer + 0x0012)
      000293 74 28            [12] 1056 	mov	a,#0x28
      000295 F0               [24] 1057 	movx	@dptr,a
                                   1058 ;	trial_webserver.c:110: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000296 90r00r38         [24] 1059 	mov	dptr,#(_buffer + 0x0030)
      000299 74 10            [12] 1060 	mov	a,#0x10
      00029B F0               [24] 1061 	movx	@dptr,a
                                   1062 ;	trial_webserver.c:111: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      00029C 90r00r39         [24] 1063 	mov	dptr,#(_buffer + 0x0031)
      00029F 74 FF            [12] 1064 	mov	a,#0xff
      0002A1 F0               [24] 1065 	movx	@dptr,a
                                   1066 ;	trial_webserver.c:112: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      0002A2 90r00r3A         [24] 1067 	mov	dptr,#(_buffer + 0x0032)
      0002A5 F0               [24] 1068 	movx	@dptr,a
                                   1069 ;	trial_webserver.c:113: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      0002A6 90r00r37         [24] 1070 	mov	dptr,#(_buffer + 0x002f)
      0002A9 74 50            [12] 1071 	mov	a,#0x50
      0002AB F0               [24] 1072 	movx	@dptr,a
                                   1073 ;	trial_webserver.c:116: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      0002AC 90r00r09         [24] 1074 	mov	dptr,#(_buffer + 0x0001)
      0002AF 75 F0 00         [24] 1075 	mov	b, #0x00
      0002B2 12r00r00         [24] 1076 	lcall	_calculateIPChecksum
                                   1077 ;	trial_webserver.c:117: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      0002B5 90r00r09         [24] 1078 	mov	dptr,#(_buffer + 0x0001)
      0002B8 75 F0 00         [24] 1079 	mov	b, #0x00
      0002BB 12r00r00         [24] 1080 	lcall	_calculateTcpChecksum
                                   1081 ;	trial_webserver.c:121: transmit_tcp_packet(buffer, 1 + 54);
      0002BE 90r00r00         [24] 1082 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0002C1 74 37            [12] 1083 	mov	a,#0x37
      0002C3 F0               [24] 1084 	movx	@dptr,a
      0002C4 E4               [12] 1085 	clr	a
      0002C5 A3               [24] 1086 	inc	dptr
      0002C6 F0               [24] 1087 	movx	@dptr,a
      0002C7 90r00r08         [24] 1088 	mov	dptr,#_buffer
      0002CA F5 F0            [12] 1089 	mov	b,a
      0002CC 12r00r00         [24] 1090 	lcall	_transmit_tcp_packet
                                   1091 ;	trial_webserver.c:124: connectionState = ACK_SENT;
      0002CF 90r00r14         [24] 1092 	mov	dptr,#_connectionState
      0002D2 74 05            [12] 1093 	mov	a,#0x05
      0002D4 F0               [24] 1094 	movx	@dptr,a
                                   1095 ;	trial_webserver.c:125: }
      0002D5 22               [24] 1096 	ret
                                   1097 ;------------------------------------------------------------
                                   1098 ;Allocation info for local variables in function 'makeTcpAck2'
                                   1099 ;------------------------------------------------------------
                                   1100 ;sloc0                     Allocated with name '_makeTcpAck2_sloc0_1_0'
                                   1101 ;sloc1                     Allocated with name '_makeTcpAck2_sloc1_1_0'
                                   1102 ;sloc2                     Allocated with name '_makeTcpAck2_sloc2_1_0'
                                   1103 ;totalLength1              Allocated with name '_makeTcpAck2_totalLength1_10000_125'
                                   1104 ;receivedPayloadLength     Allocated with name '_makeTcpAck2_receivedPayloadLength_10000_125'
                                   1105 ;srcPort                   Allocated with name '_makeTcpAck2_srcPort_10001_126'
                                   1106 ;dstPort                   Allocated with name '_makeTcpAck2_dstPort_10001_126'
                                   1107 ;clientSeqNum              Allocated with name '_makeTcpAck2_clientSeqNum_10002_127'
                                   1108 ;clientAckNum              Allocated with name '_makeTcpAck2_clientAckNum_10002_127'
                                   1109 ;serverSeqNum              Allocated with name '_makeTcpAck2_serverSeqNum_10002_127'
                                   1110 ;ackNum                    Allocated with name '_makeTcpAck2_ackNum_10002_127'
                                   1111 ;totalLength               Allocated with name '_makeTcpAck2_totalLength_10003_128'
                                   1112 ;------------------------------------------------------------
                                   1113 ;	trial_webserver.c:127: void makeTcpAck2() {
                                   1114 ;	-----------------------------------------
                                   1115 ;	 function makeTcpAck2
                                   1116 ;	-----------------------------------------
      0002D6                       1117 _makeTcpAck2:
                                   1118 ;	trial_webserver.c:128: uint16_t totalLength1 = (buffer[16] << 8) | buffer[17]; // Total IP length
      0002D6 90r00r18         [24] 1119 	mov	dptr,#(_buffer + 0x0010)
      0002D9 E0               [24] 1120 	movx	a,@dptr
      0002DA FE               [12] 1121 	mov	r6,a
      0002DB 7F 00            [12] 1122 	mov	r7,#0x00
      0002DD 90r00r19         [24] 1123 	mov	dptr,#(_buffer + 0x0011)
      0002E0 E0               [24] 1124 	movx	a,@dptr
      0002E1 7C 00            [12] 1125 	mov	r4,#0x00
      0002E3 42 07            [12] 1126 	orl	ar7,a
      0002E5 EC               [12] 1127 	mov	a,r4
      0002E6 42 06            [12] 1128 	orl	ar6,a
                                   1129 ;	trial_webserver.c:129: uint16_t receivedPayloadLength = totalLength1 - 40;
      0002E8 EF               [12] 1130 	mov	a,r7
      0002E9 24 D8            [12] 1131 	add	a,#0xd8
      0002EB FF               [12] 1132 	mov	r7,a
      0002EC EE               [12] 1133 	mov	a,r6
      0002ED 34 FF            [12] 1134 	addc	a,#0xff
      0002EF FE               [12] 1135 	mov	r6,a
      0002F0 8F*06            [24] 1136 	mov	_makeTcpAck2_sloc1_1_0,r7
      0002F2 8E*07            [24] 1137 	mov	(_makeTcpAck2_sloc1_1_0 + 1),r6
                                   1138 ;	trial_webserver.c:130: printf("makeTcpAck\n\r");
      0002F4 74r10            [12] 1139 	mov	a,#___str_1
      0002F6 C0 E0            [24] 1140 	push	acc
      0002F8 74s00            [12] 1141 	mov	a,#(___str_1 >> 8)
      0002FA C0 E0            [24] 1142 	push	acc
      0002FC 74 80            [12] 1143 	mov	a,#0x80
      0002FE C0 E0            [24] 1144 	push	acc
      000300 12r00r00         [24] 1145 	lcall	_printf
      000303 15 81            [12] 1146 	dec	sp
      000305 15 81            [12] 1147 	dec	sp
      000307 15 81            [12] 1148 	dec	sp
                                   1149 ;	trial_webserver.c:133: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000309 90r00r00         [24] 1150 	mov	dptr,#_memmove_PARM_2
      00030C 74r08            [12] 1151 	mov	a,#_buffer
      00030E F0               [24] 1152 	movx	@dptr,a
      00030F 74s00            [12] 1153 	mov	a,#(_buffer >> 8)
      000311 A3               [24] 1154 	inc	dptr
      000312 F0               [24] 1155 	movx	@dptr,a
      000313 E4               [12] 1156 	clr	a
      000314 A3               [24] 1157 	inc	dptr
      000315 F0               [24] 1158 	movx	@dptr,a
      000316 90r00r00         [24] 1159 	mov	dptr,#_memmove_PARM_3
      000319 74 36            [12] 1160 	mov	a,#0x36
      00031B F0               [24] 1161 	movx	@dptr,a
      00031C E4               [12] 1162 	clr	a
      00031D A3               [24] 1163 	inc	dptr
      00031E F0               [24] 1164 	movx	@dptr,a
      00031F 90r00r09         [24] 1165 	mov	dptr,#(_buffer + 0x0001)
      000322 F5 F0            [12] 1166 	mov	b,a
      000324 12r00r00         [24] 1167 	lcall	_memmove
                                   1168 ;	trial_webserver.c:134: buffer[0] = 0x0E;
      000327 90r00r08         [24] 1169 	mov	dptr,#_buffer
      00032A 74 0E            [12] 1170 	mov	a,#0x0e
      00032C F0               [24] 1171 	movx	@dptr,a
                                   1172 ;	trial_webserver.c:137: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      00032D 90r00r00         [24] 1173 	mov	dptr,#___memcpy_PARM_2
      000330 74r0F            [12] 1174 	mov	a,#(_buffer + 0x0007)
      000332 F0               [24] 1175 	movx	@dptr,a
      000333 74s00            [12] 1176 	mov	a,#((_buffer + 0x0007) >> 8)
      000335 A3               [24] 1177 	inc	dptr
      000336 F0               [24] 1178 	movx	@dptr,a
      000337 E4               [12] 1179 	clr	a
      000338 A3               [24] 1180 	inc	dptr
      000339 F0               [24] 1181 	movx	@dptr,a
      00033A 90r00r00         [24] 1182 	mov	dptr,#___memcpy_PARM_3
      00033D 74 06            [12] 1183 	mov	a,#0x06
      00033F F0               [24] 1184 	movx	@dptr,a
      000340 E4               [12] 1185 	clr	a
      000341 A3               [24] 1186 	inc	dptr
      000342 F0               [24] 1187 	movx	@dptr,a
      000343 90r00r09         [24] 1188 	mov	dptr,#(_buffer + 0x0001)
      000346 F5 F0            [12] 1189 	mov	b,a
      000348 12r00r00         [24] 1190 	lcall	___memcpy
                                   1191 ;	trial_webserver.c:138: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      00034B 90r00r00         [24] 1192 	mov	dptr,#___memcpy_PARM_2
      00034E 74r00            [12] 1193 	mov	a,#_device_mac
      000350 F0               [24] 1194 	movx	@dptr,a
      000351 74s00            [12] 1195 	mov	a,#(_device_mac >> 8)
      000353 A3               [24] 1196 	inc	dptr
      000354 F0               [24] 1197 	movx	@dptr,a
      000355 E4               [12] 1198 	clr	a
      000356 A3               [24] 1199 	inc	dptr
      000357 F0               [24] 1200 	movx	@dptr,a
      000358 90r00r00         [24] 1201 	mov	dptr,#___memcpy_PARM_3
      00035B 74 06            [12] 1202 	mov	a,#0x06
      00035D F0               [24] 1203 	movx	@dptr,a
      00035E E4               [12] 1204 	clr	a
      00035F A3               [24] 1205 	inc	dptr
      000360 F0               [24] 1206 	movx	@dptr,a
      000361 90r00r0F         [24] 1207 	mov	dptr,#(_buffer + 0x0007)
      000364 F5 F0            [12] 1208 	mov	b,a
      000366 12r00r00         [24] 1209 	lcall	___memcpy
                                   1210 ;	trial_webserver.c:141: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000369 90r00r00         [24] 1211 	mov	dptr,#___memcpy_PARM_2
      00036C 74r23            [12] 1212 	mov	a,#(_buffer + 0x001b)
      00036E F0               [24] 1213 	movx	@dptr,a
      00036F 74s00            [12] 1214 	mov	a,#((_buffer + 0x001b) >> 8)
      000371 A3               [24] 1215 	inc	dptr
      000372 F0               [24] 1216 	movx	@dptr,a
      000373 E4               [12] 1217 	clr	a
      000374 A3               [24] 1218 	inc	dptr
      000375 F0               [24] 1219 	movx	@dptr,a
      000376 90r00r00         [24] 1220 	mov	dptr,#___memcpy_PARM_3
      000379 74 04            [12] 1221 	mov	a,#0x04
      00037B F0               [24] 1222 	movx	@dptr,a
      00037C E4               [12] 1223 	clr	a
      00037D A3               [24] 1224 	inc	dptr
      00037E F0               [24] 1225 	movx	@dptr,a
      00037F 90r00r27         [24] 1226 	mov	dptr,#(_buffer + 0x001f)
      000382 F5 F0            [12] 1227 	mov	b,a
      000384 12r00r00         [24] 1228 	lcall	___memcpy
                                   1229 ;	trial_webserver.c:142: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000387 90r00r00         [24] 1230 	mov	dptr,#___memcpy_PARM_2
      00038A 74r0C            [12] 1231 	mov	a,#_device_ip
      00038C F0               [24] 1232 	movx	@dptr,a
      00038D 74s00            [12] 1233 	mov	a,#(_device_ip >> 8)
      00038F A3               [24] 1234 	inc	dptr
      000390 F0               [24] 1235 	movx	@dptr,a
      000391 E4               [12] 1236 	clr	a
      000392 A3               [24] 1237 	inc	dptr
      000393 F0               [24] 1238 	movx	@dptr,a
      000394 90r00r00         [24] 1239 	mov	dptr,#___memcpy_PARM_3
      000397 74 04            [12] 1240 	mov	a,#0x04
      000399 F0               [24] 1241 	movx	@dptr,a
      00039A E4               [12] 1242 	clr	a
      00039B A3               [24] 1243 	inc	dptr
      00039C F0               [24] 1244 	movx	@dptr,a
      00039D 90r00r23         [24] 1245 	mov	dptr,#(_buffer + 0x001b)
      0003A0 F5 F0            [12] 1246 	mov	b,a
      0003A2 12r00r00         [24] 1247 	lcall	___memcpy
                                   1248 ;	trial_webserver.c:145: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      0003A5 90r00r2B         [24] 1249 	mov	dptr,#(_buffer + 0x0023)
      0003A8 E0               [24] 1250 	movx	a,@dptr
      0003A9 FC               [12] 1251 	mov	r4,a
      0003AA 7D 00            [12] 1252 	mov	r5,#0x00
      0003AC 90r00r2C         [24] 1253 	mov	dptr,#(_buffer + 0x0024)
      0003AF E0               [24] 1254 	movx	a,@dptr
      0003B0 7A 00            [12] 1255 	mov	r2,#0x00
      0003B2 42 05            [12] 1256 	orl	ar5,a
      0003B4 EA               [12] 1257 	mov	a,r2
      0003B5 42 04            [12] 1258 	orl	ar4,a
                                   1259 ;	trial_webserver.c:147: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0003B7 90r00r2D         [24] 1260 	mov	dptr,#(_buffer + 0x0025)
      0003BA E0               [24] 1261 	movx	a,@dptr
      0003BB FA               [12] 1262 	mov	r2,a
      0003BC 7B 00            [12] 1263 	mov	r3,#0x00
      0003BE 90r00r2E         [24] 1264 	mov	dptr,#(_buffer + 0x0026)
      0003C1 E0               [24] 1265 	movx	a,@dptr
      0003C2 79 00            [12] 1266 	mov	r1,#0x00
      0003C4 42 03            [12] 1267 	orl	ar3,a
      0003C6 E9               [12] 1268 	mov	a,r1
      0003C7 42 02            [12] 1269 	orl	ar2,a
                                   1270 ;	trial_webserver.c:149: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      0003C9 8A 01            [24] 1271 	mov	ar1,r2
      0003CB 90r00r2B         [24] 1272 	mov	dptr,#(_buffer + 0x0023)
      0003CE E9               [12] 1273 	mov	a,r1
      0003CF F0               [24] 1274 	movx	@dptr,a
                                   1275 ;	trial_webserver.c:150: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      0003D0 90r00r2C         [24] 1276 	mov	dptr,#(_buffer + 0x0024)
      0003D3 EB               [12] 1277 	mov	a,r3
      0003D4 F0               [24] 1278 	movx	@dptr,a
                                   1279 ;	trial_webserver.c:151: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0003D5 8C 03            [24] 1280 	mov	ar3,r4
      0003D7 90r00r2D         [24] 1281 	mov	dptr,#(_buffer + 0x0025)
      0003DA EB               [12] 1282 	mov	a,r3
      0003DB F0               [24] 1283 	movx	@dptr,a
                                   1284 ;	trial_webserver.c:152: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0003DC 90r00r2E         [24] 1285 	mov	dptr,#(_buffer + 0x0026)
      0003DF ED               [12] 1286 	mov	a,r5
      0003E0 F0               [24] 1287 	movx	@dptr,a
                                   1288 ;	trial_webserver.c:155: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0003E1 90r00r31         [24] 1289 	mov	dptr,#(_buffer + 0x0029)
      0003E4 E0               [24] 1290 	movx	a,@dptr
      0003E5 FC               [12] 1291 	mov	r4,a
      0003E6 7D 00            [12] 1292 	mov	r5,#0x00
      0003E8 90r00r32         [24] 1293 	mov	dptr,#(_buffer + 0x002a)
      0003EB E0               [24] 1294 	movx	a,@dptr
      0003EC 7A 00            [12] 1295 	mov	r2,#0x00
      0003EE 42 05            [12] 1296 	orl	ar5,a
      0003F0 EA               [12] 1297 	mov	a,r2
      0003F1 42 04            [12] 1298 	orl	ar4,a
      0003F3 8D*08            [24] 1299 	mov	_makeTcpAck2_sloc2_1_0,r5
      0003F5 EC               [12] 1300 	mov	a,r4
      0003F6 F5*09            [12] 1301 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      0003F8 33               [12] 1302 	rlc	a
      0003F9 95 E0            [12] 1303 	subb	a,acc
      0003FB F5*0A            [12] 1304 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      0003FD F5*0B            [12] 1305 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1306 ;	trial_webserver.c:158: uint32_t clientAckNum = (buffer[1 + TCP_ACK_H_P] << 24)
      0003FF 90r00r35         [24] 1307 	mov	dptr,#(_buffer + 0x002d)
      000402 E0               [24] 1308 	movx	a,@dptr
      000403 F8               [12] 1309 	mov	r0,a
      000404 79 00            [12] 1310 	mov	r1,#0x00
      000406 88*05            [24] 1311 	mov	(_makeTcpAck2_sloc0_1_0 + 1),r0
      000408 89*04            [24] 1312 	mov	_makeTcpAck2_sloc0_1_0,r1
      00040A 90r00r36         [24] 1313 	mov	dptr,#(_buffer + 0x002e)
      00040D E0               [24] 1314 	movx	a,@dptr
      00040E F8               [12] 1315 	mov	r0,a
      00040F 79 00            [12] 1316 	mov	r1,#0x00
      000411 E5*05            [12] 1317 	mov	a,(_makeTcpAck2_sloc0_1_0 + 1)
      000413 42 01            [12] 1318 	orl	ar1,a
      000415 E9               [12] 1319 	mov	a,r1
      000416 33               [12] 1320 	rlc	a
      000417 95 E0            [12] 1321 	subb	a,acc
      000419 FE               [12] 1322 	mov	r6,a
      00041A FF               [12] 1323 	mov	r7,a
                                   1324 ;	trial_webserver.c:162: uint32_t ackNum = clientSeqNum + receivedPayloadLength - 1;
      00041B AA*06            [24] 1325 	mov	r2,_makeTcpAck2_sloc1_1_0
      00041D AB*07            [24] 1326 	mov	r3,(_makeTcpAck2_sloc1_1_0 + 1)
      00041F E4               [12] 1327 	clr	a
      000420 FC               [12] 1328 	mov	r4,a
      000421 FD               [12] 1329 	mov	r5,a
      000422 EA               [12] 1330 	mov	a,r2
      000423 25*08            [12] 1331 	add	a, _makeTcpAck2_sloc2_1_0
      000425 FA               [12] 1332 	mov	r2,a
      000426 EB               [12] 1333 	mov	a,r3
      000427 35*09            [12] 1334 	addc	a, (_makeTcpAck2_sloc2_1_0 + 1)
      000429 FB               [12] 1335 	mov	r3,a
      00042A EC               [12] 1336 	mov	a,r4
      00042B 35*0A            [12] 1337 	addc	a, (_makeTcpAck2_sloc2_1_0 + 2)
      00042D FC               [12] 1338 	mov	r4,a
      00042E ED               [12] 1339 	mov	a,r5
      00042F 35*0B            [12] 1340 	addc	a, (_makeTcpAck2_sloc2_1_0 + 3)
      000431 FD               [12] 1341 	mov	r5,a
      000432 EA               [12] 1342 	mov	a,r2
      000433 24 FF            [12] 1343 	add	a,#0xff
      000435 F5*08            [12] 1344 	mov	_makeTcpAck2_sloc2_1_0,a
      000437 EB               [12] 1345 	mov	a,r3
      000438 34 FF            [12] 1346 	addc	a,#0xff
      00043A F5*09            [12] 1347 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      00043C EC               [12] 1348 	mov	a,r4
      00043D 34 FF            [12] 1349 	addc	a,#0xff
      00043F F5*0A            [12] 1350 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      000441 ED               [12] 1351 	mov	a,r5
      000442 34 FF            [12] 1352 	addc	a,#0xff
      000444 F5*0B            [12] 1353 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1354 ;	trial_webserver.c:163: prevSeq = serverSeqNum;
      000446 90r00r00         [24] 1355 	mov	dptr,#_prevSeq
      000449 E8               [12] 1356 	mov	a,r0
      00044A F0               [24] 1357 	movx	@dptr,a
      00044B E9               [12] 1358 	mov	a,r1
      00044C A3               [24] 1359 	inc	dptr
      00044D F0               [24] 1360 	movx	@dptr,a
      00044E EE               [12] 1361 	mov	a,r6
      00044F A3               [24] 1362 	inc	dptr
      000450 F0               [24] 1363 	movx	@dptr,a
      000451 EF               [12] 1364 	mov	a,r7
      000452 A3               [24] 1365 	inc	dptr
      000453 F0               [24] 1366 	movx	@dptr,a
                                   1367 ;	trial_webserver.c:164: prevAck = ackNum;
      000454 90r00r04         [24] 1368 	mov	dptr,#_prevAck
      000457 E5*08            [12] 1369 	mov	a,_makeTcpAck2_sloc2_1_0
      000459 F0               [24] 1370 	movx	@dptr,a
      00045A E5*09            [12] 1371 	mov	a,(_makeTcpAck2_sloc2_1_0 + 1)
      00045C A3               [24] 1372 	inc	dptr
      00045D F0               [24] 1373 	movx	@dptr,a
      00045E E5*0A            [12] 1374 	mov	a,(_makeTcpAck2_sloc2_1_0 + 2)
      000460 A3               [24] 1375 	inc	dptr
      000461 F0               [24] 1376 	movx	@dptr,a
      000462 E5*0B            [12] 1377 	mov	a,(_makeTcpAck2_sloc2_1_0 + 3)
      000464 A3               [24] 1378 	inc	dptr
      000465 F0               [24] 1379 	movx	@dptr,a
                                   1380 ;	trial_webserver.c:167: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000466 8F 05            [24] 1381 	mov	ar5,r7
      000468 90r00r2F         [24] 1382 	mov	dptr,#(_buffer + 0x0027)
      00046B ED               [12] 1383 	mov	a,r5
      00046C F0               [24] 1384 	movx	@dptr,a
                                   1385 ;	trial_webserver.c:168: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      00046D 8E 05            [24] 1386 	mov	ar5,r6
      00046F 90r00r30         [24] 1387 	mov	dptr,#(_buffer + 0x0028)
      000472 ED               [12] 1388 	mov	a,r5
      000473 F0               [24] 1389 	movx	@dptr,a
                                   1390 ;	trial_webserver.c:169: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000474 89 05            [24] 1391 	mov	ar5,r1
      000476 90r00r31         [24] 1392 	mov	dptr,#(_buffer + 0x0029)
      000479 ED               [12] 1393 	mov	a,r5
      00047A F0               [24] 1394 	movx	@dptr,a
                                   1395 ;	trial_webserver.c:170: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      00047B 90r00r32         [24] 1396 	mov	dptr,#(_buffer + 0x002a)
      00047E E8               [12] 1397 	mov	a,r0
      00047F F0               [24] 1398 	movx	@dptr,a
                                   1399 ;	trial_webserver.c:171: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000480 AF*0B            [24] 1400 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 3)
      000482 90r00r33         [24] 1401 	mov	dptr,#(_buffer + 0x002b)
      000485 EF               [12] 1402 	mov	a,r7
      000486 F0               [24] 1403 	movx	@dptr,a
                                   1404 ;	trial_webserver.c:172: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000487 AF*0A            [24] 1405 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 2)
      000489 90r00r34         [24] 1406 	mov	dptr,#(_buffer + 0x002c)
      00048C EF               [12] 1407 	mov	a,r7
      00048D F0               [24] 1408 	movx	@dptr,a
                                   1409 ;	trial_webserver.c:173: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      00048E AF*09            [24] 1410 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 1)
      000490 90r00r35         [24] 1411 	mov	dptr,#(_buffer + 0x002d)
      000493 EF               [12] 1412 	mov	a,r7
      000494 F0               [24] 1413 	movx	@dptr,a
                                   1414 ;	trial_webserver.c:174: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      000495 AA*08            [24] 1415 	mov	r2,_makeTcpAck2_sloc2_1_0
      000497 90r00r36         [24] 1416 	mov	dptr,#(_buffer + 0x002e)
      00049A EA               [12] 1417 	mov	a,r2
      00049B F0               [24] 1418 	movx	@dptr,a
                                   1419 ;	trial_webserver.c:178: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      00049C 90r00r19         [24] 1420 	mov	dptr,#(_buffer + 0x0011)
      00049F E4               [12] 1421 	clr	a
      0004A0 F0               [24] 1422 	movx	@dptr,a
                                   1423 ;	trial_webserver.c:179: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      0004A1 90r00r1A         [24] 1424 	mov	dptr,#(_buffer + 0x0012)
      0004A4 74 28            [12] 1425 	mov	a,#0x28
      0004A6 F0               [24] 1426 	movx	@dptr,a
                                   1427 ;	trial_webserver.c:182: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      0004A7 90r00r38         [24] 1428 	mov	dptr,#(_buffer + 0x0030)
      0004AA 74 10            [12] 1429 	mov	a,#0x10
      0004AC F0               [24] 1430 	movx	@dptr,a
                                   1431 ;	trial_webserver.c:183: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      0004AD 90r00r39         [24] 1432 	mov	dptr,#(_buffer + 0x0031)
      0004B0 74 FF            [12] 1433 	mov	a,#0xff
      0004B2 F0               [24] 1434 	movx	@dptr,a
                                   1435 ;	trial_webserver.c:184: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      0004B3 90r00r3A         [24] 1436 	mov	dptr,#(_buffer + 0x0032)
      0004B6 F0               [24] 1437 	movx	@dptr,a
                                   1438 ;	trial_webserver.c:185: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      0004B7 90r00r37         [24] 1439 	mov	dptr,#(_buffer + 0x002f)
      0004BA 74 50            [12] 1440 	mov	a,#0x50
      0004BC F0               [24] 1441 	movx	@dptr,a
                                   1442 ;	trial_webserver.c:188: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      0004BD 90r00r09         [24] 1443 	mov	dptr,#(_buffer + 0x0001)
      0004C0 75 F0 00         [24] 1444 	mov	b, #0x00
      0004C3 12r00r00         [24] 1445 	lcall	_calculateIPChecksum
                                   1446 ;	trial_webserver.c:189: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      0004C6 90r00r09         [24] 1447 	mov	dptr,#(_buffer + 0x0001)
      0004C9 75 F0 00         [24] 1448 	mov	b, #0x00
      0004CC 12r00r00         [24] 1449 	lcall	_calculateTcpChecksum
                                   1450 ;	trial_webserver.c:193: transmit_tcp_packet(buffer, 1 + 54);
      0004CF 90r00r00         [24] 1451 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0004D2 74 37            [12] 1452 	mov	a,#0x37
      0004D4 F0               [24] 1453 	movx	@dptr,a
      0004D5 E4               [12] 1454 	clr	a
      0004D6 A3               [24] 1455 	inc	dptr
      0004D7 F0               [24] 1456 	movx	@dptr,a
      0004D8 90r00r08         [24] 1457 	mov	dptr,#_buffer
      0004DB F5 F0            [12] 1458 	mov	b,a
      0004DD 12r00r00         [24] 1459 	lcall	_transmit_tcp_packet
                                   1460 ;	trial_webserver.c:196: connectionState = ACK_SENT;
      0004E0 90r00r14         [24] 1461 	mov	dptr,#_connectionState
      0004E3 74 05            [12] 1462 	mov	a,#0x05
      0004E5 F0               [24] 1463 	movx	@dptr,a
                                   1464 ;	trial_webserver.c:197: }
      0004E6 22               [24] 1465 	ret
                                   1466 ;------------------------------------------------------------
                                   1467 ;Allocation info for local variables in function 'makeTcpSynAck'
                                   1468 ;------------------------------------------------------------
                                   1469 ;srcPort                   Allocated with name '_makeTcpSynAck_srcPort_10001_130'
                                   1470 ;dstPort                   Allocated with name '_makeTcpSynAck_dstPort_10001_130'
                                   1471 ;clientSeqNum              Allocated with name '_makeTcpSynAck_clientSeqNum_10002_131'
                                   1472 ;serverSeqNum              Allocated with name '_makeTcpSynAck_serverSeqNum_10002_131'
                                   1473 ;ackNum                    Allocated with name '_makeTcpSynAck_ackNum_10002_131'
                                   1474 ;totalLength               Allocated with name '_makeTcpSynAck_totalLength_10003_132'
                                   1475 ;------------------------------------------------------------
                                   1476 ;	trial_webserver.c:199: void makeTcpSynAck() {
                                   1477 ;	-----------------------------------------
                                   1478 ;	 function makeTcpSynAck
                                   1479 ;	-----------------------------------------
      0004E7                       1480 _makeTcpSynAck:
                                   1481 ;	trial_webserver.c:200: printf("makeTcpSynAck\n\r");
      0004E7 74r1D            [12] 1482 	mov	a,#___str_2
      0004E9 C0 E0            [24] 1483 	push	acc
      0004EB 74s00            [12] 1484 	mov	a,#(___str_2 >> 8)
      0004ED C0 E0            [24] 1485 	push	acc
      0004EF 74 80            [12] 1486 	mov	a,#0x80
      0004F1 C0 E0            [24] 1487 	push	acc
      0004F3 12r00r00         [24] 1488 	lcall	_printf
      0004F6 15 81            [12] 1489 	dec	sp
      0004F8 15 81            [12] 1490 	dec	sp
      0004FA 15 81            [12] 1491 	dec	sp
                                   1492 ;	trial_webserver.c:203: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      0004FC 90r00r00         [24] 1493 	mov	dptr,#_memmove_PARM_2
      0004FF 74r08            [12] 1494 	mov	a,#_buffer
      000501 F0               [24] 1495 	movx	@dptr,a
      000502 74s00            [12] 1496 	mov	a,#(_buffer >> 8)
      000504 A3               [24] 1497 	inc	dptr
      000505 F0               [24] 1498 	movx	@dptr,a
      000506 E4               [12] 1499 	clr	a
      000507 A3               [24] 1500 	inc	dptr
      000508 F0               [24] 1501 	movx	@dptr,a
      000509 90r00r00         [24] 1502 	mov	dptr,#_memmove_PARM_3
      00050C 74 36            [12] 1503 	mov	a,#0x36
      00050E F0               [24] 1504 	movx	@dptr,a
      00050F E4               [12] 1505 	clr	a
      000510 A3               [24] 1506 	inc	dptr
      000511 F0               [24] 1507 	movx	@dptr,a
      000512 90r00r09         [24] 1508 	mov	dptr,#(_buffer + 0x0001)
      000515 F5 F0            [12] 1509 	mov	b,a
      000517 12r00r00         [24] 1510 	lcall	_memmove
                                   1511 ;	trial_webserver.c:204: buffer[0] = 0x0E;
      00051A 90r00r08         [24] 1512 	mov	dptr,#_buffer
      00051D 74 0E            [12] 1513 	mov	a,#0x0e
      00051F F0               [24] 1514 	movx	@dptr,a
                                   1515 ;	trial_webserver.c:206: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000520 90r00r00         [24] 1516 	mov	dptr,#___memcpy_PARM_2
      000523 74r0F            [12] 1517 	mov	a,#(_buffer + 0x0007)
      000525 F0               [24] 1518 	movx	@dptr,a
      000526 74s00            [12] 1519 	mov	a,#((_buffer + 0x0007) >> 8)
      000528 A3               [24] 1520 	inc	dptr
      000529 F0               [24] 1521 	movx	@dptr,a
      00052A E4               [12] 1522 	clr	a
      00052B A3               [24] 1523 	inc	dptr
      00052C F0               [24] 1524 	movx	@dptr,a
      00052D 90r00r00         [24] 1525 	mov	dptr,#___memcpy_PARM_3
      000530 74 06            [12] 1526 	mov	a,#0x06
      000532 F0               [24] 1527 	movx	@dptr,a
      000533 E4               [12] 1528 	clr	a
      000534 A3               [24] 1529 	inc	dptr
      000535 F0               [24] 1530 	movx	@dptr,a
      000536 90r00r09         [24] 1531 	mov	dptr,#(_buffer + 0x0001)
      000539 F5 F0            [12] 1532 	mov	b,a
      00053B 12r00r00         [24] 1533 	lcall	___memcpy
                                   1534 ;	trial_webserver.c:207: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      00053E 90r00r00         [24] 1535 	mov	dptr,#___memcpy_PARM_2
      000541 74r00            [12] 1536 	mov	a,#_device_mac
      000543 F0               [24] 1537 	movx	@dptr,a
      000544 74s00            [12] 1538 	mov	a,#(_device_mac >> 8)
      000546 A3               [24] 1539 	inc	dptr
      000547 F0               [24] 1540 	movx	@dptr,a
      000548 E4               [12] 1541 	clr	a
      000549 A3               [24] 1542 	inc	dptr
      00054A F0               [24] 1543 	movx	@dptr,a
      00054B 90r00r00         [24] 1544 	mov	dptr,#___memcpy_PARM_3
      00054E 74 06            [12] 1545 	mov	a,#0x06
      000550 F0               [24] 1546 	movx	@dptr,a
      000551 E4               [12] 1547 	clr	a
      000552 A3               [24] 1548 	inc	dptr
      000553 F0               [24] 1549 	movx	@dptr,a
      000554 90r00r0F         [24] 1550 	mov	dptr,#(_buffer + 0x0007)
      000557 F5 F0            [12] 1551 	mov	b,a
      000559 12r00r00         [24] 1552 	lcall	___memcpy
                                   1553 ;	trial_webserver.c:210: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      00055C 90r00r00         [24] 1554 	mov	dptr,#___memcpy_PARM_2
      00055F 74r23            [12] 1555 	mov	a,#(_buffer + 0x001b)
      000561 F0               [24] 1556 	movx	@dptr,a
      000562 74s00            [12] 1557 	mov	a,#((_buffer + 0x001b) >> 8)
      000564 A3               [24] 1558 	inc	dptr
      000565 F0               [24] 1559 	movx	@dptr,a
      000566 E4               [12] 1560 	clr	a
      000567 A3               [24] 1561 	inc	dptr
      000568 F0               [24] 1562 	movx	@dptr,a
      000569 90r00r00         [24] 1563 	mov	dptr,#___memcpy_PARM_3
      00056C 74 04            [12] 1564 	mov	a,#0x04
      00056E F0               [24] 1565 	movx	@dptr,a
      00056F E4               [12] 1566 	clr	a
      000570 A3               [24] 1567 	inc	dptr
      000571 F0               [24] 1568 	movx	@dptr,a
      000572 90r00r27         [24] 1569 	mov	dptr,#(_buffer + 0x001f)
      000575 F5 F0            [12] 1570 	mov	b,a
      000577 12r00r00         [24] 1571 	lcall	___memcpy
                                   1572 ;	trial_webserver.c:211: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      00057A 90r00r00         [24] 1573 	mov	dptr,#___memcpy_PARM_2
      00057D 74r0C            [12] 1574 	mov	a,#_device_ip
      00057F F0               [24] 1575 	movx	@dptr,a
      000580 74s00            [12] 1576 	mov	a,#(_device_ip >> 8)
      000582 A3               [24] 1577 	inc	dptr
      000583 F0               [24] 1578 	movx	@dptr,a
      000584 E4               [12] 1579 	clr	a
      000585 A3               [24] 1580 	inc	dptr
      000586 F0               [24] 1581 	movx	@dptr,a
      000587 90r00r00         [24] 1582 	mov	dptr,#___memcpy_PARM_3
      00058A 74 04            [12] 1583 	mov	a,#0x04
      00058C F0               [24] 1584 	movx	@dptr,a
      00058D E4               [12] 1585 	clr	a
      00058E A3               [24] 1586 	inc	dptr
      00058F F0               [24] 1587 	movx	@dptr,a
      000590 90r00r23         [24] 1588 	mov	dptr,#(_buffer + 0x001b)
      000593 F5 F0            [12] 1589 	mov	b,a
      000595 12r00r00         [24] 1590 	lcall	___memcpy
                                   1591 ;	trial_webserver.c:214: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000598 90r00r2B         [24] 1592 	mov	dptr,#(_buffer + 0x0023)
      00059B E0               [24] 1593 	movx	a,@dptr
      00059C FE               [12] 1594 	mov	r6,a
      00059D 7F 00            [12] 1595 	mov	r7,#0x00
      00059F 90r00r2C         [24] 1596 	mov	dptr,#(_buffer + 0x0024)
      0005A2 E0               [24] 1597 	movx	a,@dptr
      0005A3 7C 00            [12] 1598 	mov	r4,#0x00
      0005A5 42 07            [12] 1599 	orl	ar7,a
      0005A7 EC               [12] 1600 	mov	a,r4
      0005A8 42 06            [12] 1601 	orl	ar6,a
                                   1602 ;	trial_webserver.c:216: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0005AA 90r00r2D         [24] 1603 	mov	dptr,#(_buffer + 0x0025)
      0005AD E0               [24] 1604 	movx	a,@dptr
      0005AE FC               [12] 1605 	mov	r4,a
      0005AF 7D 00            [12] 1606 	mov	r5,#0x00
      0005B1 90r00r2E         [24] 1607 	mov	dptr,#(_buffer + 0x0026)
      0005B4 E0               [24] 1608 	movx	a,@dptr
      0005B5 7A 00            [12] 1609 	mov	r2,#0x00
      0005B7 42 05            [12] 1610 	orl	ar5,a
      0005B9 EA               [12] 1611 	mov	a,r2
      0005BA 42 04            [12] 1612 	orl	ar4,a
                                   1613 ;	trial_webserver.c:218: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      0005BC 8C 03            [24] 1614 	mov	ar3,r4
      0005BE 90r00r2B         [24] 1615 	mov	dptr,#(_buffer + 0x0023)
      0005C1 EB               [12] 1616 	mov	a,r3
      0005C2 F0               [24] 1617 	movx	@dptr,a
                                   1618 ;	trial_webserver.c:219: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      0005C3 90r00r2C         [24] 1619 	mov	dptr,#(_buffer + 0x0024)
      0005C6 ED               [12] 1620 	mov	a,r5
      0005C7 F0               [24] 1621 	movx	@dptr,a
                                   1622 ;	trial_webserver.c:220: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0005C8 8E 05            [24] 1623 	mov	ar5,r6
      0005CA 90r00r2D         [24] 1624 	mov	dptr,#(_buffer + 0x0025)
      0005CD ED               [12] 1625 	mov	a,r5
      0005CE F0               [24] 1626 	movx	@dptr,a
                                   1627 ;	trial_webserver.c:221: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0005CF 90r00r2E         [24] 1628 	mov	dptr,#(_buffer + 0x0026)
      0005D2 EF               [12] 1629 	mov	a,r7
      0005D3 F0               [24] 1630 	movx	@dptr,a
                                   1631 ;	trial_webserver.c:224: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0005D4 90r00r31         [24] 1632 	mov	dptr,#(_buffer + 0x0029)
      0005D7 E0               [24] 1633 	movx	a,@dptr
      0005D8 FE               [12] 1634 	mov	r6,a
      0005D9 7F 00            [12] 1635 	mov	r7,#0x00
      0005DB 90r00r32         [24] 1636 	mov	dptr,#(_buffer + 0x002a)
      0005DE E0               [24] 1637 	movx	a,@dptr
      0005DF 7C 00            [12] 1638 	mov	r4,#0x00
      0005E1 42 07            [12] 1639 	orl	ar7,a
      0005E3 EC               [12] 1640 	mov	a,r4
      0005E4 42 06            [12] 1641 	orl	ar6,a
      0005E6 EE               [12] 1642 	mov	a,r6
      0005E7 33               [12] 1643 	rlc	a
      0005E8 95 E0            [12] 1644 	subb	a,acc
      0005EA FD               [12] 1645 	mov	r5,a
      0005EB FC               [12] 1646 	mov	r4,a
                                   1647 ;	trial_webserver.c:228: uint32_t ackNum = clientSeqNum + 1;
      0005EC 0F               [12] 1648 	inc	r7
      0005ED BF 00 09         [24] 1649 	cjne	r7,#0x00,00103$
      0005F0 0E               [12] 1650 	inc	r6
      0005F1 BE 00 05         [24] 1651 	cjne	r6,#0x00,00103$
      0005F4 0D               [12] 1652 	inc	r5
      0005F5 BD 00 01         [24] 1653 	cjne	r5,#0x00,00103$
      0005F8 0C               [12] 1654 	inc	r4
      0005F9                       1655 00103$:
                                   1656 ;	trial_webserver.c:230: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      0005F9 90r00r2F         [24] 1657 	mov	dptr,#(_buffer + 0x0027)
      0005FC E4               [12] 1658 	clr	a
      0005FD F0               [24] 1659 	movx	@dptr,a
                                   1660 ;	trial_webserver.c:231: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      0005FE 90r00r30         [24] 1661 	mov	dptr,#(_buffer + 0x0028)
      000601 F0               [24] 1662 	movx	@dptr,a
                                   1663 ;	trial_webserver.c:232: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000602 90r00r31         [24] 1664 	mov	dptr,#(_buffer + 0x0029)
      000605 74 03            [12] 1665 	mov	a,#0x03
      000607 F0               [24] 1666 	movx	@dptr,a
                                   1667 ;	trial_webserver.c:233: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000608 90r00r32         [24] 1668 	mov	dptr,#(_buffer + 0x002a)
      00060B 74 E8            [12] 1669 	mov	a,#0xe8
      00060D F0               [24] 1670 	movx	@dptr,a
                                   1671 ;	trial_webserver.c:234: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      00060E 8C 03            [24] 1672 	mov	ar3,r4
      000610 90r00r33         [24] 1673 	mov	dptr,#(_buffer + 0x002b)
      000613 EB               [12] 1674 	mov	a,r3
      000614 F0               [24] 1675 	movx	@dptr,a
                                   1676 ;	trial_webserver.c:235: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      000615 8D 03            [24] 1677 	mov	ar3,r5
      000617 90r00r34         [24] 1678 	mov	dptr,#(_buffer + 0x002c)
      00061A EB               [12] 1679 	mov	a,r3
      00061B F0               [24] 1680 	movx	@dptr,a
                                   1681 ;	trial_webserver.c:236: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      00061C 8E 03            [24] 1682 	mov	ar3,r6
      00061E 90r00r35         [24] 1683 	mov	dptr,#(_buffer + 0x002d)
      000621 EB               [12] 1684 	mov	a,r3
      000622 F0               [24] 1685 	movx	@dptr,a
                                   1686 ;	trial_webserver.c:237: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      000623 90r00r36         [24] 1687 	mov	dptr,#(_buffer + 0x002e)
      000626 EF               [12] 1688 	mov	a,r7
      000627 F0               [24] 1689 	movx	@dptr,a
                                   1690 ;	trial_webserver.c:241: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000628 90r00r19         [24] 1691 	mov	dptr,#(_buffer + 0x0011)
      00062B E4               [12] 1692 	clr	a
      00062C F0               [24] 1693 	movx	@dptr,a
                                   1694 ;	trial_webserver.c:242: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      00062D 90r00r1A         [24] 1695 	mov	dptr,#(_buffer + 0x0012)
      000630 74 28            [12] 1696 	mov	a,#0x28
      000632 F0               [24] 1697 	movx	@dptr,a
                                   1698 ;	trial_webserver.c:245: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_SYN | TCP_FLAG_ACK;
      000633 90r00r38         [24] 1699 	mov	dptr,#(_buffer + 0x0030)
      000636 74 12            [12] 1700 	mov	a,#0x12
      000638 F0               [24] 1701 	movx	@dptr,a
                                   1702 ;	trial_webserver.c:246: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      000639 90r00r39         [24] 1703 	mov	dptr,#(_buffer + 0x0031)
      00063C 74 FF            [12] 1704 	mov	a,#0xff
      00063E F0               [24] 1705 	movx	@dptr,a
                                   1706 ;	trial_webserver.c:247: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      00063F 90r00r3A         [24] 1707 	mov	dptr,#(_buffer + 0x0032)
      000642 F0               [24] 1708 	movx	@dptr,a
                                   1709 ;	trial_webserver.c:248: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000643 90r00r37         [24] 1710 	mov	dptr,#(_buffer + 0x002f)
      000646 74 50            [12] 1711 	mov	a,#0x50
      000648 F0               [24] 1712 	movx	@dptr,a
                                   1713 ;	trial_webserver.c:251: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000649 90r00r09         [24] 1714 	mov	dptr,#(_buffer + 0x0001)
      00064C 75 F0 00         [24] 1715 	mov	b, #0x00
      00064F 12r00r00         [24] 1716 	lcall	_calculateIPChecksum
                                   1717 ;	trial_webserver.c:252: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000652 90r00r09         [24] 1718 	mov	dptr,#(_buffer + 0x0001)
      000655 75 F0 00         [24] 1719 	mov	b, #0x00
      000658 12r00r00         [24] 1720 	lcall	_calculateTcpChecksum
                                   1721 ;	trial_webserver.c:256: transmit_tcp_packet(buffer, 1 + 54);
      00065B 90r00r00         [24] 1722 	mov	dptr,#_transmit_tcp_packet_PARM_2
      00065E 74 37            [12] 1723 	mov	a,#0x37
      000660 F0               [24] 1724 	movx	@dptr,a
      000661 E4               [12] 1725 	clr	a
      000662 A3               [24] 1726 	inc	dptr
      000663 F0               [24] 1727 	movx	@dptr,a
      000664 90r00r08         [24] 1728 	mov	dptr,#_buffer
      000667 F5 F0            [12] 1729 	mov	b,a
      000669 12r00r00         [24] 1730 	lcall	_transmit_tcp_packet
                                   1731 ;	trial_webserver.c:259: connectionState = SYN_RECEIVED;
      00066C 90r00r14         [24] 1732 	mov	dptr,#_connectionState
      00066F 74 01            [12] 1733 	mov	a,#0x01
      000671 F0               [24] 1734 	movx	@dptr,a
                                   1735 ;	trial_webserver.c:260: }
      000672 22               [24] 1736 	ret
                                   1737 ;------------------------------------------------------------
                                   1738 ;Allocation info for local variables in function 'makeTcpAck'
                                   1739 ;------------------------------------------------------------
                                   1740 ;	trial_webserver.c:263: void makeTcpAck() {
                                   1741 ;	-----------------------------------------
                                   1742 ;	 function makeTcpAck
                                   1743 ;	-----------------------------------------
      000673                       1744 _makeTcpAck:
                                   1745 ;	trial_webserver.c:264: printf("tcpack\n\r");
      000673 74r2D            [12] 1746 	mov	a,#___str_3
      000675 C0 E0            [24] 1747 	push	acc
      000677 74s00            [12] 1748 	mov	a,#(___str_3 >> 8)
      000679 C0 E0            [24] 1749 	push	acc
      00067B 74 80            [12] 1750 	mov	a,#0x80
      00067D C0 E0            [24] 1751 	push	acc
      00067F 12r00r00         [24] 1752 	lcall	_printf
      000682 15 81            [12] 1753 	dec	sp
      000684 15 81            [12] 1754 	dec	sp
      000686 15 81            [12] 1755 	dec	sp
                                   1756 ;	trial_webserver.c:265: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000688 90r00r00         [24] 1757 	mov	dptr,#_memmove_PARM_2
      00068B 74r08            [12] 1758 	mov	a,#_buffer
      00068D F0               [24] 1759 	movx	@dptr,a
      00068E 74s00            [12] 1760 	mov	a,#(_buffer >> 8)
      000690 A3               [24] 1761 	inc	dptr
      000691 F0               [24] 1762 	movx	@dptr,a
      000692 E4               [12] 1763 	clr	a
      000693 A3               [24] 1764 	inc	dptr
      000694 F0               [24] 1765 	movx	@dptr,a
      000695 90r00r00         [24] 1766 	mov	dptr,#_memmove_PARM_3
      000698 74 36            [12] 1767 	mov	a,#0x36
      00069A F0               [24] 1768 	movx	@dptr,a
      00069B E4               [12] 1769 	clr	a
      00069C A3               [24] 1770 	inc	dptr
      00069D F0               [24] 1771 	movx	@dptr,a
      00069E 90r00r09         [24] 1772 	mov	dptr,#(_buffer + 0x0001)
      0006A1 F5 F0            [12] 1773 	mov	b,a
      0006A3 12r00r00         [24] 1774 	lcall	_memmove
                                   1775 ;	trial_webserver.c:268: buffer[0] = 0x0E;
      0006A6 90r00r08         [24] 1776 	mov	dptr,#_buffer
      0006A9 74 0E            [12] 1777 	mov	a,#0x0e
      0006AB F0               [24] 1778 	movx	@dptr,a
                                   1779 ;	trial_webserver.c:269: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;
      0006AC 90r00r38         [24] 1780 	mov	dptr,#(_buffer + 0x0030)
      0006AF 74 10            [12] 1781 	mov	a,#0x10
      0006B1 F0               [24] 1782 	movx	@dptr,a
                                   1783 ;	trial_webserver.c:270: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P);
      0006B2 90r00r00         [24] 1784 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0006B5 74 37            [12] 1785 	mov	a,#0x37
      0006B7 F0               [24] 1786 	movx	@dptr,a
      0006B8 E4               [12] 1787 	clr	a
      0006B9 A3               [24] 1788 	inc	dptr
      0006BA F0               [24] 1789 	movx	@dptr,a
      0006BB 90r00r08         [24] 1790 	mov	dptr,#_buffer
      0006BE F5 F0            [12] 1791 	mov	b,a
                                   1792 ;	trial_webserver.c:271: }
      0006C0 02r00r00         [24] 1793 	ljmp	_transmit_tcp_packet
                                   1794 ;------------------------------------------------------------
                                   1795 ;Allocation info for local variables in function 'makeTcpFinPshAck'
                                   1796 ;------------------------------------------------------------
                                   1797 ;srcPort                   Allocated with name '_makeTcpFinPshAck_srcPort_10001_135'
                                   1798 ;dstPort                   Allocated with name '_makeTcpFinPshAck_dstPort_10001_135'
                                   1799 ;serverSeqNum              Allocated with name '_makeTcpFinPshAck_serverSeqNum_10002_136'
                                   1800 ;ackNum                    Allocated with name '_makeTcpFinPshAck_ackNum_10002_136'
                                   1801 ;html_payload              Allocated with name '_makeTcpFinPshAck_html_payload_10003_137'
                                   1802 ;dataLength                Allocated with name '_makeTcpFinPshAck_dataLength_10003_137'
                                   1803 ;totalLength               Allocated with name '_makeTcpFinPshAck_totalLength_10003_137'
                                   1804 ;------------------------------------------------------------
                                   1805 ;	trial_webserver.c:273: void makeTcpFinPshAck() {
                                   1806 ;	-----------------------------------------
                                   1807 ;	 function makeTcpFinPshAck
                                   1808 ;	-----------------------------------------
      0006C3                       1809 _makeTcpFinPshAck:
                                   1810 ;	trial_webserver.c:274: printf("makeTcpFinPshAck\n\r");
      0006C3 74rB1            [12] 1811 	mov	a,#___str_5
      0006C5 C0 E0            [24] 1812 	push	acc
      0006C7 74s03            [12] 1813 	mov	a,#(___str_5 >> 8)
      0006C9 C0 E0            [24] 1814 	push	acc
      0006CB 74 80            [12] 1815 	mov	a,#0x80
      0006CD C0 E0            [24] 1816 	push	acc
      0006CF 12r00r00         [24] 1817 	lcall	_printf
      0006D2 15 81            [12] 1818 	dec	sp
      0006D4 15 81            [12] 1819 	dec	sp
      0006D6 15 81            [12] 1820 	dec	sp
                                   1821 ;	trial_webserver.c:277: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      0006D8 90r00r00         [24] 1822 	mov	dptr,#_memmove_PARM_2
      0006DB 74r08            [12] 1823 	mov	a,#_buffer
      0006DD F0               [24] 1824 	movx	@dptr,a
      0006DE 74s00            [12] 1825 	mov	a,#(_buffer >> 8)
      0006E0 A3               [24] 1826 	inc	dptr
      0006E1 F0               [24] 1827 	movx	@dptr,a
      0006E2 E4               [12] 1828 	clr	a
      0006E3 A3               [24] 1829 	inc	dptr
      0006E4 F0               [24] 1830 	movx	@dptr,a
      0006E5 90r00r00         [24] 1831 	mov	dptr,#_memmove_PARM_3
      0006E8 74 36            [12] 1832 	mov	a,#0x36
      0006EA F0               [24] 1833 	movx	@dptr,a
      0006EB E4               [12] 1834 	clr	a
      0006EC A3               [24] 1835 	inc	dptr
      0006ED F0               [24] 1836 	movx	@dptr,a
      0006EE 90r00r09         [24] 1837 	mov	dptr,#(_buffer + 0x0001)
      0006F1 F5 F0            [12] 1838 	mov	b,a
      0006F3 12r00r00         [24] 1839 	lcall	_memmove
                                   1840 ;	trial_webserver.c:278: buffer[0] = 0x0E;
      0006F6 90r00r08         [24] 1841 	mov	dptr,#_buffer
      0006F9 74 0E            [12] 1842 	mov	a,#0x0e
      0006FB F0               [24] 1843 	movx	@dptr,a
                                   1844 ;	trial_webserver.c:281: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      0006FC 90r00r00         [24] 1845 	mov	dptr,#___memcpy_PARM_2
      0006FF 74r0F            [12] 1846 	mov	a,#(_buffer + 0x0007)
      000701 F0               [24] 1847 	movx	@dptr,a
      000702 74s00            [12] 1848 	mov	a,#((_buffer + 0x0007) >> 8)
      000704 A3               [24] 1849 	inc	dptr
      000705 F0               [24] 1850 	movx	@dptr,a
      000706 E4               [12] 1851 	clr	a
      000707 A3               [24] 1852 	inc	dptr
      000708 F0               [24] 1853 	movx	@dptr,a
      000709 90r00r00         [24] 1854 	mov	dptr,#___memcpy_PARM_3
      00070C 74 06            [12] 1855 	mov	a,#0x06
      00070E F0               [24] 1856 	movx	@dptr,a
      00070F E4               [12] 1857 	clr	a
      000710 A3               [24] 1858 	inc	dptr
      000711 F0               [24] 1859 	movx	@dptr,a
      000712 90r00r09         [24] 1860 	mov	dptr,#(_buffer + 0x0001)
      000715 F5 F0            [12] 1861 	mov	b,a
      000717 12r00r00         [24] 1862 	lcall	___memcpy
                                   1863 ;	trial_webserver.c:282: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      00071A 90r00r00         [24] 1864 	mov	dptr,#___memcpy_PARM_2
      00071D 74r00            [12] 1865 	mov	a,#_device_mac
      00071F F0               [24] 1866 	movx	@dptr,a
      000720 74s00            [12] 1867 	mov	a,#(_device_mac >> 8)
      000722 A3               [24] 1868 	inc	dptr
      000723 F0               [24] 1869 	movx	@dptr,a
      000724 E4               [12] 1870 	clr	a
      000725 A3               [24] 1871 	inc	dptr
      000726 F0               [24] 1872 	movx	@dptr,a
      000727 90r00r00         [24] 1873 	mov	dptr,#___memcpy_PARM_3
      00072A 74 06            [12] 1874 	mov	a,#0x06
      00072C F0               [24] 1875 	movx	@dptr,a
      00072D E4               [12] 1876 	clr	a
      00072E A3               [24] 1877 	inc	dptr
      00072F F0               [24] 1878 	movx	@dptr,a
      000730 90r00r0F         [24] 1879 	mov	dptr,#(_buffer + 0x0007)
      000733 F5 F0            [12] 1880 	mov	b,a
      000735 12r00r00         [24] 1881 	lcall	___memcpy
                                   1882 ;	trial_webserver.c:285: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000738 90r00r00         [24] 1883 	mov	dptr,#___memcpy_PARM_2
      00073B 74r23            [12] 1884 	mov	a,#(_buffer + 0x001b)
      00073D F0               [24] 1885 	movx	@dptr,a
      00073E 74s00            [12] 1886 	mov	a,#((_buffer + 0x001b) >> 8)
      000740 A3               [24] 1887 	inc	dptr
      000741 F0               [24] 1888 	movx	@dptr,a
      000742 E4               [12] 1889 	clr	a
      000743 A3               [24] 1890 	inc	dptr
      000744 F0               [24] 1891 	movx	@dptr,a
      000745 90r00r00         [24] 1892 	mov	dptr,#___memcpy_PARM_3
      000748 74 04            [12] 1893 	mov	a,#0x04
      00074A F0               [24] 1894 	movx	@dptr,a
      00074B E4               [12] 1895 	clr	a
      00074C A3               [24] 1896 	inc	dptr
      00074D F0               [24] 1897 	movx	@dptr,a
      00074E 90r00r27         [24] 1898 	mov	dptr,#(_buffer + 0x001f)
      000751 F5 F0            [12] 1899 	mov	b,a
      000753 12r00r00         [24] 1900 	lcall	___memcpy
                                   1901 ;	trial_webserver.c:286: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000756 90r00r00         [24] 1902 	mov	dptr,#___memcpy_PARM_2
      000759 74r0C            [12] 1903 	mov	a,#_device_ip
      00075B F0               [24] 1904 	movx	@dptr,a
      00075C 74s00            [12] 1905 	mov	a,#(_device_ip >> 8)
      00075E A3               [24] 1906 	inc	dptr
      00075F F0               [24] 1907 	movx	@dptr,a
      000760 E4               [12] 1908 	clr	a
      000761 A3               [24] 1909 	inc	dptr
      000762 F0               [24] 1910 	movx	@dptr,a
      000763 90r00r00         [24] 1911 	mov	dptr,#___memcpy_PARM_3
      000766 74 04            [12] 1912 	mov	a,#0x04
      000768 F0               [24] 1913 	movx	@dptr,a
      000769 E4               [12] 1914 	clr	a
      00076A A3               [24] 1915 	inc	dptr
      00076B F0               [24] 1916 	movx	@dptr,a
      00076C 90r00r23         [24] 1917 	mov	dptr,#(_buffer + 0x001b)
      00076F F5 F0            [12] 1918 	mov	b,a
      000771 12r00r00         [24] 1919 	lcall	___memcpy
                                   1920 ;	trial_webserver.c:289: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000774 90r00r2B         [24] 1921 	mov	dptr,#(_buffer + 0x0023)
      000777 E0               [24] 1922 	movx	a,@dptr
      000778 FE               [12] 1923 	mov	r6,a
      000779 7F 00            [12] 1924 	mov	r7,#0x00
      00077B 90r00r2C         [24] 1925 	mov	dptr,#(_buffer + 0x0024)
      00077E E0               [24] 1926 	movx	a,@dptr
      00077F 7C 00            [12] 1927 	mov	r4,#0x00
      000781 42 07            [12] 1928 	orl	ar7,a
      000783 EC               [12] 1929 	mov	a,r4
      000784 42 06            [12] 1930 	orl	ar6,a
                                   1931 ;	trial_webserver.c:291: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000786 90r00r2D         [24] 1932 	mov	dptr,#(_buffer + 0x0025)
      000789 E0               [24] 1933 	movx	a,@dptr
      00078A FC               [12] 1934 	mov	r4,a
      00078B 7D 00            [12] 1935 	mov	r5,#0x00
      00078D 90r00r2E         [24] 1936 	mov	dptr,#(_buffer + 0x0026)
      000790 E0               [24] 1937 	movx	a,@dptr
      000791 7A 00            [12] 1938 	mov	r2,#0x00
      000793 42 05            [12] 1939 	orl	ar5,a
      000795 EA               [12] 1940 	mov	a,r2
      000796 42 04            [12] 1941 	orl	ar4,a
                                   1942 ;	trial_webserver.c:293: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000798 8C 03            [24] 1943 	mov	ar3,r4
      00079A 90r00r2B         [24] 1944 	mov	dptr,#(_buffer + 0x0023)
      00079D EB               [12] 1945 	mov	a,r3
      00079E F0               [24] 1946 	movx	@dptr,a
                                   1947 ;	trial_webserver.c:294: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      00079F 90r00r2C         [24] 1948 	mov	dptr,#(_buffer + 0x0024)
      0007A2 ED               [12] 1949 	mov	a,r5
      0007A3 F0               [24] 1950 	movx	@dptr,a
                                   1951 ;	trial_webserver.c:295: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0007A4 8E 05            [24] 1952 	mov	ar5,r6
      0007A6 90r00r2D         [24] 1953 	mov	dptr,#(_buffer + 0x0025)
      0007A9 ED               [12] 1954 	mov	a,r5
      0007AA F0               [24] 1955 	movx	@dptr,a
                                   1956 ;	trial_webserver.c:296: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0007AB 90r00r2E         [24] 1957 	mov	dptr,#(_buffer + 0x0026)
      0007AE EF               [12] 1958 	mov	a,r7
      0007AF F0               [24] 1959 	movx	@dptr,a
                                   1960 ;	trial_webserver.c:299: uint32_t serverSeqNum = prevSeq;
      0007B0 90r00r00         [24] 1961 	mov	dptr,#_prevSeq
      0007B3 E0               [24] 1962 	movx	a,@dptr
      0007B4 FC               [12] 1963 	mov	r4,a
      0007B5 A3               [24] 1964 	inc	dptr
      0007B6 E0               [24] 1965 	movx	a,@dptr
      0007B7 FD               [12] 1966 	mov	r5,a
      0007B8 A3               [24] 1967 	inc	dptr
      0007B9 E0               [24] 1968 	movx	a,@dptr
      0007BA FE               [12] 1969 	mov	r6,a
      0007BB A3               [24] 1970 	inc	dptr
      0007BC E0               [24] 1971 	movx	a,@dptr
      0007BD FF               [12] 1972 	mov	r7,a
      0007BE 90r05rE4         [24] 1973 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_136
      0007C1 EC               [12] 1974 	mov	a,r4
      0007C2 F0               [24] 1975 	movx	@dptr,a
      0007C3 ED               [12] 1976 	mov	a,r5
      0007C4 A3               [24] 1977 	inc	dptr
      0007C5 F0               [24] 1978 	movx	@dptr,a
      0007C6 EE               [12] 1979 	mov	a,r6
      0007C7 A3               [24] 1980 	inc	dptr
      0007C8 F0               [24] 1981 	movx	@dptr,a
      0007C9 EF               [12] 1982 	mov	a,r7
      0007CA A3               [24] 1983 	inc	dptr
      0007CB F0               [24] 1984 	movx	@dptr,a
                                   1985 ;	trial_webserver.c:300: uint32_t ackNum = prevAck;
      0007CC 90r00r04         [24] 1986 	mov	dptr,#_prevAck
      0007CF E0               [24] 1987 	movx	a,@dptr
      0007D0 F8               [12] 1988 	mov	r0,a
      0007D1 A3               [24] 1989 	inc	dptr
      0007D2 E0               [24] 1990 	movx	a,@dptr
      0007D3 F9               [12] 1991 	mov	r1,a
      0007D4 A3               [24] 1992 	inc	dptr
      0007D5 E0               [24] 1993 	movx	a,@dptr
      0007D6 FA               [12] 1994 	mov	r2,a
      0007D7 A3               [24] 1995 	inc	dptr
      0007D8 E0               [24] 1996 	movx	a,@dptr
      0007D9 FB               [12] 1997 	mov	r3,a
      0007DA 90r05rE8         [24] 1998 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_136
      0007DD E8               [12] 1999 	mov	a,r0
      0007DE F0               [24] 2000 	movx	@dptr,a
      0007DF E9               [12] 2001 	mov	a,r1
      0007E0 A3               [24] 2002 	inc	dptr
      0007E1 F0               [24] 2003 	movx	@dptr,a
      0007E2 EA               [12] 2004 	mov	a,r2
      0007E3 A3               [24] 2005 	inc	dptr
      0007E4 F0               [24] 2006 	movx	@dptr,a
      0007E5 EB               [12] 2007 	mov	a,r3
      0007E6 A3               [24] 2008 	inc	dptr
      0007E7 F0               [24] 2009 	movx	@dptr,a
                                   2010 ;	trial_webserver.c:302: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      0007E8 8F 04            [24] 2011 	mov	ar4,r7
      0007EA 90r00r2F         [24] 2012 	mov	dptr,#(_buffer + 0x0027)
      0007ED EC               [12] 2013 	mov	a,r4
      0007EE F0               [24] 2014 	movx	@dptr,a
                                   2015 ;	trial_webserver.c:303: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      0007EF 90r05rE4         [24] 2016 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_136
      0007F2 E0               [24] 2017 	movx	a,@dptr
      0007F3 FC               [12] 2018 	mov	r4,a
      0007F4 A3               [24] 2019 	inc	dptr
      0007F5 E0               [24] 2020 	movx	a,@dptr
      0007F6 FD               [12] 2021 	mov	r5,a
      0007F7 A3               [24] 2022 	inc	dptr
      0007F8 E0               [24] 2023 	movx	a,@dptr
      0007F9 FE               [12] 2024 	mov	r6,a
      0007FA A3               [24] 2025 	inc	dptr
      0007FB E0               [24] 2026 	movx	a,@dptr
      0007FC 8E 03            [24] 2027 	mov	ar3,r6
      0007FE 90r00r30         [24] 2028 	mov	dptr,#(_buffer + 0x0028)
      000801 EB               [12] 2029 	mov	a,r3
      000802 F0               [24] 2030 	movx	@dptr,a
                                   2031 ;	trial_webserver.c:304: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000803 8D 03            [24] 2032 	mov	ar3,r5
      000805 90r00r31         [24] 2033 	mov	dptr,#(_buffer + 0x0029)
      000808 EB               [12] 2034 	mov	a,r3
      000809 F0               [24] 2035 	movx	@dptr,a
                                   2036 ;	trial_webserver.c:305: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      00080A 90r00r32         [24] 2037 	mov	dptr,#(_buffer + 0x002a)
      00080D EC               [12] 2038 	mov	a,r4
      00080E F0               [24] 2039 	movx	@dptr,a
                                   2040 ;	trial_webserver.c:306: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      00080F 90r05rE8         [24] 2041 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_136
      000812 E0               [24] 2042 	movx	a,@dptr
      000813 FC               [12] 2043 	mov	r4,a
      000814 A3               [24] 2044 	inc	dptr
      000815 E0               [24] 2045 	movx	a,@dptr
      000816 FD               [12] 2046 	mov	r5,a
      000817 A3               [24] 2047 	inc	dptr
      000818 E0               [24] 2048 	movx	a,@dptr
      000819 FE               [12] 2049 	mov	r6,a
      00081A A3               [24] 2050 	inc	dptr
      00081B E0               [24] 2051 	movx	a,@dptr
      00081C 90r00r33         [24] 2052 	mov	dptr,#(_buffer + 0x002b)
      00081F F0               [24] 2053 	movx	@dptr,a
                                   2054 ;	trial_webserver.c:307: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      000820 8E 03            [24] 2055 	mov	ar3,r6
      000822 90r00r34         [24] 2056 	mov	dptr,#(_buffer + 0x002c)
      000825 EB               [12] 2057 	mov	a,r3
      000826 F0               [24] 2058 	movx	@dptr,a
                                   2059 ;	trial_webserver.c:308: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      000827 8D 03            [24] 2060 	mov	ar3,r5
      000829 90r00r35         [24] 2061 	mov	dptr,#(_buffer + 0x002d)
      00082C EB               [12] 2062 	mov	a,r3
      00082D F0               [24] 2063 	movx	@dptr,a
                                   2064 ;	trial_webserver.c:309: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      00082E 90r00r36         [24] 2065 	mov	dptr,#(_buffer + 0x002e)
      000831 EC               [12] 2066 	mov	a,r4
      000832 F0               [24] 2067 	movx	@dptr,a
                                   2068 ;	trial_webserver.c:312: const char *html_payload =
                                   2069 ;	trial_webserver.c:335: uint16_t dataLength = strlen(html_payload);
      000833 90r00r36         [24] 2070 	mov	dptr,#___str_4
      000836 75 F0 80         [24] 2071 	mov	b, #0x80
      000839 12r00r00         [24] 2072 	lcall	_strlen
      00083C AE 82            [24] 2073 	mov	r6, dpl
      00083E AF 83            [24] 2074 	mov	r7, dph
                                   2075 ;	trial_webserver.c:338: uint16_t totalLength = IP_HEADER_LEN + TCP_HEADER_LEN + dataLength;
      000840 74 28            [12] 2076 	mov	a,#0x28
      000842 2E               [12] 2077 	add	a, r6
      000843 FC               [12] 2078 	mov	r4,a
      000844 E4               [12] 2079 	clr	a
      000845 3F               [12] 2080 	addc	a, r7
                                   2081 ;	trial_webserver.c:339: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000846 90r00r19         [24] 2082 	mov	dptr,#(_buffer + 0x0011)
      000849 F0               [24] 2083 	movx	@dptr,a
                                   2084 ;	trial_webserver.c:340: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      00084A 90r00r1A         [24] 2085 	mov	dptr,#(_buffer + 0x0012)
      00084D EC               [12] 2086 	mov	a,r4
      00084E F0               [24] 2087 	movx	@dptr,a
                                   2088 ;	trial_webserver.c:343: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_FIN | TCP_FLAG_PUSH | TCP_FLAG_ACK;
      00084F 90r00r38         [24] 2089 	mov	dptr,#(_buffer + 0x0030)
      000852 74 19            [12] 2090 	mov	a,#0x19
      000854 F0               [24] 2091 	movx	@dptr,a
                                   2092 ;	trial_webserver.c:344: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF;
      000855 90r00r39         [24] 2093 	mov	dptr,#(_buffer + 0x0031)
      000858 74 FF            [12] 2094 	mov	a,#0xff
      00085A F0               [24] 2095 	movx	@dptr,a
                                   2096 ;	trial_webserver.c:345: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      00085B 90r00r3A         [24] 2097 	mov	dptr,#(_buffer + 0x0032)
      00085E F0               [24] 2098 	movx	@dptr,a
                                   2099 ;	trial_webserver.c:346: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      00085F 90r00r37         [24] 2100 	mov	dptr,#(_buffer + 0x002f)
      000862 74 50            [12] 2101 	mov	a,#0x50
      000864 F0               [24] 2102 	movx	@dptr,a
                                   2103 ;	trial_webserver.c:349: memcpy(&buffer[1 + TCP_DATA_START_P], html_payload, dataLength);
      000865 90r00r00         [24] 2104 	mov	dptr,#___memcpy_PARM_2
      000868 74r36            [12] 2105 	mov	a,#___str_4
      00086A F0               [24] 2106 	movx	@dptr,a
      00086B 74s00            [12] 2107 	mov	a,#(___str_4 >> 8)
      00086D A3               [24] 2108 	inc	dptr
      00086E F0               [24] 2109 	movx	@dptr,a
      00086F 74 80            [12] 2110 	mov	a,#0x80
      000871 A3               [24] 2111 	inc	dptr
      000872 F0               [24] 2112 	movx	@dptr,a
      000873 90r00r00         [24] 2113 	mov	dptr,#___memcpy_PARM_3
      000876 EE               [12] 2114 	mov	a,r6
      000877 F0               [24] 2115 	movx	@dptr,a
      000878 EF               [12] 2116 	mov	a,r7
      000879 A3               [24] 2117 	inc	dptr
      00087A F0               [24] 2118 	movx	@dptr,a
      00087B 90r00r3F         [24] 2119 	mov	dptr,#(_buffer + 0x0037)
      00087E 75 F0 00         [24] 2120 	mov	b, #0x00
      000881 C0 07            [24] 2121 	push	ar7
      000883 C0 06            [24] 2122 	push	ar6
      000885 12r00r00         [24] 2123 	lcall	___memcpy
                                   2124 ;	trial_webserver.c:352: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000888 90r00r09         [24] 2125 	mov	dptr,#(_buffer + 0x0001)
      00088B 75 F0 00         [24] 2126 	mov	b, #0x00
      00088E 12r00r00         [24] 2127 	lcall	_calculateIPChecksum
                                   2128 ;	trial_webserver.c:353: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000891 90r00r09         [24] 2129 	mov	dptr,#(_buffer + 0x0001)
      000894 75 F0 00         [24] 2130 	mov	b, #0x00
      000897 12r00r00         [24] 2131 	lcall	_calculateTcpChecksum
      00089A D0 06            [24] 2132 	pop	ar6
      00089C D0 07            [24] 2133 	pop	ar7
                                   2134 ;	trial_webserver.c:356: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P + dataLength);
      00089E 74 37            [12] 2135 	mov	a,#0x37
      0008A0 2E               [12] 2136 	add	a, r6
      0008A1 FE               [12] 2137 	mov	r6,a
      0008A2 E4               [12] 2138 	clr	a
      0008A3 3F               [12] 2139 	addc	a, r7
      0008A4 FF               [12] 2140 	mov	r7,a
      0008A5 90r00r00         [24] 2141 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0008A8 EE               [12] 2142 	mov	a,r6
      0008A9 F0               [24] 2143 	movx	@dptr,a
      0008AA EF               [12] 2144 	mov	a,r7
      0008AB A3               [24] 2145 	inc	dptr
      0008AC F0               [24] 2146 	movx	@dptr,a
      0008AD 90r00r08         [24] 2147 	mov	dptr,#_buffer
      0008B0 75 F0 00         [24] 2148 	mov	b, #0x00
      0008B3 12r00r00         [24] 2149 	lcall	_transmit_tcp_packet
                                   2150 ;	trial_webserver.c:359: connectionState = FIN_WAIT;
      0008B6 90r00r14         [24] 2151 	mov	dptr,#_connectionState
      0008B9 74 03            [12] 2152 	mov	a,#0x03
      0008BB F0               [24] 2153 	movx	@dptr,a
                                   2154 ;	trial_webserver.c:360: }
      0008BC 22               [24] 2155 	ret
                                   2156 ;------------------------------------------------------------
                                   2157 ;Allocation info for local variables in function 'packetReceive'
                                   2158 ;------------------------------------------------------------
                                   2159 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_138'
                                   2160 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_138'
                                   2161 ;len                       Allocated with name '_packetReceive_len_10000_138'
                                   2162 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_140'
                                   2163 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_142'
                                   2164 ;header                    Allocated with name '_packetReceive_header_20002_144'
                                   2165 ;start                     Allocated with name '_packetReceive_start_20003_145'
                                   2166 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_146'
                                   2167 ;------------------------------------------------------------
                                   2168 ;	trial_webserver.c:365: uint16_t packetReceive()
                                   2169 ;	-----------------------------------------
                                   2170 ;	 function packetReceive
                                   2171 ;	-----------------------------------------
      0008BD                       2172 _packetReceive:
                                   2173 ;	trial_webserver.c:369: uint16_t len = 0;
      0008BD 90r05rEF         [24] 2174 	mov	dptr,#_packetReceive_len_10000_138
      0008C0 E4               [12] 2175 	clr	a
      0008C1 F0               [24] 2176 	movx	@dptr,a
      0008C2 A3               [24] 2177 	inc	dptr
      0008C3 F0               [24] 2178 	movx	@dptr,a
                                   2179 ;	trial_webserver.c:372: if (unreleasedPacket) {
      0008C4 90r05rEE         [24] 2180 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      0008C7 E0               [24] 2181 	movx	a,@dptr
      0008C8 60 70            [24] 2182 	jz	00105$
                                   2183 ;	trial_webserver.c:373: if (gNextPacketPtr == 0) {
      0008CA 90r05rEC         [24] 2184 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      0008CD E0               [24] 2185 	movx	a,@dptr
      0008CE FE               [12] 2186 	mov	r6,a
      0008CF A3               [24] 2187 	inc	dptr
      0008D0 E0               [24] 2188 	movx	a,@dptr
      0008D1 90r05rEC         [24] 2189 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      0008D4 E0               [24] 2190 	movx	a,@dptr
      0008D5 F5 F0            [12] 2191 	mov	b,a
      0008D7 A3               [24] 2192 	inc	dptr
      0008D8 E0               [24] 2193 	movx	a,@dptr
      0008D9 45 F0            [12] 2194 	orl	a,b
      0008DB 70 26            [24] 2195 	jnz	00102$
                                   2196 ;	trial_webserver.c:375: spi_control_write(0, 0x0C, (uint8_t) (RX_END & 0xFF)); // Low byte
      0008DD 90r00r00         [24] 2197 	mov	dptr,#_spi_control_write_PARM_2
      0008E0 74 0C            [12] 2198 	mov	a,#0x0c
      0008E2 F0               [24] 2199 	movx	@dptr,a
      0008E3 90r00r00         [24] 2200 	mov	dptr,#_spi_control_write_PARM_3
      0008E6 74 FF            [12] 2201 	mov	a,#0xff
      0008E8 F0               [24] 2202 	movx	@dptr,a
      0008E9 75 82 00         [24] 2203 	mov	dpl, #0x00
      0008EC 12r00r00         [24] 2204 	lcall	_spi_control_write
                                   2205 ;	trial_webserver.c:376: spi_control_write(0, 0x0D, (uint8_t) ((RX_END >> 8) & 0xFF)); // High byte
      0008EF 90r00r00         [24] 2206 	mov	dptr,#_spi_control_write_PARM_2
      0008F2 74 0D            [12] 2207 	mov	a,#0x0d
      0008F4 F0               [24] 2208 	movx	@dptr,a
      0008F5 90r00r00         [24] 2209 	mov	dptr,#_spi_control_write_PARM_3
      0008F8 74 0B            [12] 2210 	mov	a,#0x0b
      0008FA F0               [24] 2211 	movx	@dptr,a
      0008FB 75 82 00         [24] 2212 	mov	dpl, #0x00
      0008FE 12r00r00         [24] 2213 	lcall	_spi_control_write
      000901 80 32            [24] 2214 	sjmp	00103$
      000903                       2215 00102$:
                                   2216 ;	trial_webserver.c:378: spi_control_write(0, 0x0C, (uint8_t) ((gNextPacketPtr - 1) & 0xFF)); // Low byte
      000903 1E               [12] 2217 	dec	r6
      000904 90r00r00         [24] 2218 	mov	dptr,#_spi_control_write_PARM_2
      000907 74 0C            [12] 2219 	mov	a,#0x0c
      000909 F0               [24] 2220 	movx	@dptr,a
      00090A 90r00r00         [24] 2221 	mov	dptr,#_spi_control_write_PARM_3
      00090D EE               [12] 2222 	mov	a,r6
      00090E F0               [24] 2223 	movx	@dptr,a
      00090F 75 82 00         [24] 2224 	mov	dpl, #0x00
      000912 12r00r00         [24] 2225 	lcall	_spi_control_write
                                   2226 ;	trial_webserver.c:380: (uint8_t) (((gNextPacketPtr - 1) >> 8) & 0xFF)); // High byte
      000915 90r05rEC         [24] 2227 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000918 E0               [24] 2228 	movx	a,@dptr
      000919 FE               [12] 2229 	mov	r6,a
      00091A A3               [24] 2230 	inc	dptr
      00091B E0               [24] 2231 	movx	a,@dptr
      00091C FF               [12] 2232 	mov	r7,a
      00091D 1E               [12] 2233 	dec	r6
      00091E BE FF 01         [24] 2234 	cjne	r6,#0xff,00147$
      000921 1F               [12] 2235 	dec	r7
      000922                       2236 00147$:
      000922 8F 06            [24] 2237 	mov	ar6,r7
      000924 90r00r00         [24] 2238 	mov	dptr,#_spi_control_write_PARM_2
      000927 74 0D            [12] 2239 	mov	a,#0x0d
      000929 F0               [24] 2240 	movx	@dptr,a
      00092A 90r00r00         [24] 2241 	mov	dptr,#_spi_control_write_PARM_3
      00092D EE               [12] 2242 	mov	a,r6
      00092E F0               [24] 2243 	movx	@dptr,a
      00092F 75 82 00         [24] 2244 	mov	dpl, #0x00
      000932 12r00r00         [24] 2245 	lcall	_spi_control_write
      000935                       2246 00103$:
                                   2247 ;	trial_webserver.c:382: unreleasedPacket = false;
      000935 90r05rEE         [24] 2248 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      000938 E4               [12] 2249 	clr	a
      000939 F0               [24] 2250 	movx	@dptr,a
      00093A                       2251 00105$:
                                   2252 ;	trial_webserver.c:385: uint8_t EPKTCNT = eth_spi_read(0x19, 1);
      00093A 90r00r00         [24] 2253 	mov	dptr,#_eth_spi_read_PARM_2
      00093D 74 01            [12] 2254 	mov	a,#0x01
      00093F F0               [24] 2255 	movx	@dptr,a
      000940 75 82 19         [24] 2256 	mov	dpl, #0x19
      000943 12r00r00         [24] 2257 	lcall	_eth_spi_read
      000946 E5 82            [12] 2258 	mov	a, dpl
                                   2259 ;	trial_webserver.c:386: if (EPKTCNT > 0) {
      000948 70 03            [24] 2260 	jnz	00148$
      00094A 02r0Ar6B         [24] 2261 	ljmp	00112$
      00094D                       2262 00148$:
                                   2263 ;	trial_webserver.c:387: spi_control_write(0, 0x00, (uint8_t) (gNextPacketPtr & 0xFF)); // Low byte
      00094D 90r05rEC         [24] 2264 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000950 E0               [24] 2265 	movx	a,@dptr
      000951 FE               [12] 2266 	mov	r6,a
      000952 A3               [24] 2267 	inc	dptr
      000953 E0               [24] 2268 	movx	a,@dptr
      000954 90r00r00         [24] 2269 	mov	dptr,#_spi_control_write_PARM_2
      000957 E4               [12] 2270 	clr	a
      000958 F0               [24] 2271 	movx	@dptr,a
      000959 90r00r00         [24] 2272 	mov	dptr,#_spi_control_write_PARM_3
      00095C EE               [12] 2273 	mov	a,r6
      00095D F0               [24] 2274 	movx	@dptr,a
      00095E 75 82 00         [24] 2275 	mov	dpl, #0x00
      000961 12r00r00         [24] 2276 	lcall	_spi_control_write
                                   2277 ;	trial_webserver.c:388: spi_control_write(0, 0x01, (uint8_t) ((gNextPacketPtr >> 8) & 0xFF)); // High byte
      000964 90r05rEC         [24] 2278 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000967 E0               [24] 2279 	movx	a,@dptr
      000968 A3               [24] 2280 	inc	dptr
      000969 E0               [24] 2281 	movx	a,@dptr
      00096A FE               [12] 2282 	mov	r6,a
      00096B 90r00r00         [24] 2283 	mov	dptr,#_spi_control_write_PARM_2
      00096E 74 01            [12] 2284 	mov	a,#0x01
      000970 F0               [24] 2285 	movx	@dptr,a
      000971 90r00r00         [24] 2286 	mov	dptr,#_spi_control_write_PARM_3
      000974 EE               [12] 2287 	mov	a,r6
      000975 F0               [24] 2288 	movx	@dptr,a
      000976 75 82 00         [24] 2289 	mov	dpl, #0x00
      000979 12r00r00         [24] 2290 	lcall	_spi_control_write
                                   2291 ;	trial_webserver.c:397: spi_buffer_read(sizeof(PacketHeader), gNextPacketPtr,
      00097C 90r05rEC         [24] 2292 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      00097F E0               [24] 2293 	movx	a,@dptr
      000980 FE               [12] 2294 	mov	r6,a
      000981 A3               [24] 2295 	inc	dptr
      000982 E0               [24] 2296 	movx	a,@dptr
      000983 FF               [12] 2297 	mov	r7,a
                                   2298 ;	trial_webserver.c:398: (uint8_t*) &header);
      000984 90r00r00         [24] 2299 	mov	dptr,#_spi_buffer_read_PARM_2
      000987 EE               [12] 2300 	mov	a,r6
      000988 F0               [24] 2301 	movx	@dptr,a
      000989 EF               [12] 2302 	mov	a,r7
      00098A A3               [24] 2303 	inc	dptr
      00098B F0               [24] 2304 	movx	@dptr,a
      00098C 90r00r00         [24] 2305 	mov	dptr,#_spi_buffer_read_PARM_3
      00098F 74rF1            [12] 2306 	mov	a,#_packetReceive_header_20002_144
      000991 F0               [24] 2307 	movx	@dptr,a
      000992 74s05            [12] 2308 	mov	a,#(_packetReceive_header_20002_144 >> 8)
      000994 A3               [24] 2309 	inc	dptr
      000995 F0               [24] 2310 	movx	@dptr,a
      000996 E4               [12] 2311 	clr	a
      000997 A3               [24] 2312 	inc	dptr
      000998 F0               [24] 2313 	movx	@dptr,a
      000999 90 00 06         [24] 2314 	mov	dptr,#0x0006
      00099C 12r00r00         [24] 2315 	lcall	_spi_buffer_read
                                   2316 ;	trial_webserver.c:400: uint16_t start = gNextPacketPtr + sizeof(PacketHeader);
      00099F 90r05rEC         [24] 2317 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      0009A2 E0               [24] 2318 	movx	a,@dptr
      0009A3 FE               [12] 2319 	mov	r6,a
      0009A4 A3               [24] 2320 	inc	dptr
      0009A5 E0               [24] 2321 	movx	a,@dptr
      0009A6 FF               [12] 2322 	mov	r7,a
      0009A7 74 06            [12] 2323 	mov	a,#0x06
      0009A9 2E               [12] 2324 	add	a, r6
      0009AA FE               [12] 2325 	mov	r6,a
      0009AB E4               [12] 2326 	clr	a
      0009AC 3F               [12] 2327 	addc	a, r7
      0009AD FF               [12] 2328 	mov	r7,a
      0009AE 90r05rF7         [24] 2329 	mov	dptr,#_packetReceive_start_20003_145
      0009B1 EE               [12] 2330 	mov	a,r6
      0009B2 F0               [24] 2331 	movx	@dptr,a
      0009B3 EF               [12] 2332 	mov	a,r7
      0009B4 A3               [24] 2333 	inc	dptr
      0009B5 F0               [24] 2334 	movx	@dptr,a
                                   2335 ;	trial_webserver.c:401: gNextPacketPtr = header.nextPacket;
      0009B6 90r05rF1         [24] 2336 	mov	dptr,#_packetReceive_header_20002_144
      0009B9 E0               [24] 2337 	movx	a,@dptr
      0009BA FE               [12] 2338 	mov	r6,a
      0009BB A3               [24] 2339 	inc	dptr
      0009BC E0               [24] 2340 	movx	a,@dptr
      0009BD FF               [12] 2341 	mov	r7,a
      0009BE 90r05rEC         [24] 2342 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      0009C1 EE               [12] 2343 	mov	a,r6
      0009C2 F0               [24] 2344 	movx	@dptr,a
      0009C3 EF               [12] 2345 	mov	a,r7
      0009C4 A3               [24] 2346 	inc	dptr
      0009C5 F0               [24] 2347 	movx	@dptr,a
                                   2348 ;	trial_webserver.c:403: len = header.byteCount - 4; // Exclude CRC
      0009C6 90r05rF3         [24] 2349 	mov	dptr,#(_packetReceive_header_20002_144 + 0x0002)
      0009C9 E0               [24] 2350 	movx	a,@dptr
      0009CA FE               [12] 2351 	mov	r6,a
      0009CB A3               [24] 2352 	inc	dptr
      0009CC E0               [24] 2353 	movx	a,@dptr
      0009CD FF               [12] 2354 	mov	r7,a
      0009CE EE               [12] 2355 	mov	a,r6
      0009CF 24 FC            [12] 2356 	add	a,#0xfc
      0009D1 FE               [12] 2357 	mov	r6,a
      0009D2 EF               [12] 2358 	mov	a,r7
      0009D3 34 FF            [12] 2359 	addc	a,#0xff
      0009D5 FF               [12] 2360 	mov	r7,a
      0009D6 90r05rEF         [24] 2361 	mov	dptr,#_packetReceive_len_10000_138
      0009D9 EE               [12] 2362 	mov	a,r6
      0009DA F0               [24] 2363 	movx	@dptr,a
      0009DB EF               [12] 2364 	mov	a,r7
      0009DC A3               [24] 2365 	inc	dptr
      0009DD F0               [24] 2366 	movx	@dptr,a
                                   2367 ;	trial_webserver.c:404: if (len > BUFFER_SIZE - 1)
      0009DE C3               [12] 2368 	clr	c
      0009DF 74 DB            [12] 2369 	mov	a,#0xdb
      0009E1 9E               [12] 2370 	subb	a,r6
      0009E2 74 05            [12] 2371 	mov	a,#0x05
      0009E4 9F               [12] 2372 	subb	a,r7
      0009E5 50 0A            [24] 2373 	jnc	00107$
                                   2374 ;	trial_webserver.c:405: len = BUFFER_SIZE - 1;
      0009E7 90r05rEF         [24] 2375 	mov	dptr,#_packetReceive_len_10000_138
      0009EA 74 DB            [12] 2376 	mov	a,#0xdb
      0009EC F0               [24] 2377 	movx	@dptr,a
      0009ED 74 05            [12] 2378 	mov	a,#0x05
      0009EF A3               [24] 2379 	inc	dptr
      0009F0 F0               [24] 2380 	movx	@dptr,a
      0009F1                       2381 00107$:
                                   2382 ;	trial_webserver.c:407: if ((header.status & 0x80) == 0)
      0009F1 90r05rF5         [24] 2383 	mov	dptr,#(_packetReceive_header_20002_144 + 0x0004)
      0009F4 E0               [24] 2384 	movx	a,@dptr
      0009F5 FE               [12] 2385 	mov	r6,a
      0009F6 A3               [24] 2386 	inc	dptr
      0009F7 E0               [24] 2387 	movx	a,@dptr
      0009F8 EE               [12] 2388 	mov	a,r6
      0009F9 20 E7 09         [24] 2389 	jb	acc.7,00109$
                                   2390 ;	trial_webserver.c:408: len = 0; // Invalid packet
      0009FC 90r05rEF         [24] 2391 	mov	dptr,#_packetReceive_len_10000_138
      0009FF E4               [12] 2392 	clr	a
      000A00 F0               [24] 2393 	movx	@dptr,a
      000A01 A3               [24] 2394 	inc	dptr
      000A02 F0               [24] 2395 	movx	@dptr,a
      000A03 80 2C            [24] 2396 	sjmp	00110$
      000A05                       2397 00109$:
                                   2398 ;	trial_webserver.c:410: spi_buffer_read(len, start, buffer);
      000A05 90r05rEF         [24] 2399 	mov	dptr,#_packetReceive_len_10000_138
      000A08 E0               [24] 2400 	movx	a,@dptr
      000A09 FE               [12] 2401 	mov	r6,a
      000A0A A3               [24] 2402 	inc	dptr
      000A0B E0               [24] 2403 	movx	a,@dptr
      000A0C FF               [12] 2404 	mov	r7,a
      000A0D 90r05rF7         [24] 2405 	mov	dptr,#_packetReceive_start_20003_145
      000A10 E0               [24] 2406 	movx	a,@dptr
      000A11 FC               [12] 2407 	mov	r4,a
      000A12 A3               [24] 2408 	inc	dptr
      000A13 E0               [24] 2409 	movx	a,@dptr
      000A14 FD               [12] 2410 	mov	r5,a
      000A15 90r00r00         [24] 2411 	mov	dptr,#_spi_buffer_read_PARM_2
      000A18 EC               [12] 2412 	mov	a,r4
      000A19 F0               [24] 2413 	movx	@dptr,a
      000A1A ED               [12] 2414 	mov	a,r5
      000A1B A3               [24] 2415 	inc	dptr
      000A1C F0               [24] 2416 	movx	@dptr,a
      000A1D 90r00r00         [24] 2417 	mov	dptr,#_spi_buffer_read_PARM_3
      000A20 74r08            [12] 2418 	mov	a,#_buffer
      000A22 F0               [24] 2419 	movx	@dptr,a
      000A23 74s00            [12] 2420 	mov	a,#(_buffer >> 8)
      000A25 A3               [24] 2421 	inc	dptr
      000A26 F0               [24] 2422 	movx	@dptr,a
      000A27 E4               [12] 2423 	clr	a
      000A28 A3               [24] 2424 	inc	dptr
      000A29 F0               [24] 2425 	movx	@dptr,a
      000A2A 8E 82            [24] 2426 	mov	dpl, r6
      000A2C 8F 83            [24] 2427 	mov	dph, r7
      000A2E 12r00r00         [24] 2428 	lcall	_spi_buffer_read
      000A31                       2429 00110$:
                                   2430 ;	trial_webserver.c:412: buffer[len] = 0; // Null-terminate
      000A31 90r05rEF         [24] 2431 	mov	dptr,#_packetReceive_len_10000_138
      000A34 E0               [24] 2432 	movx	a,@dptr
      000A35 FE               [12] 2433 	mov	r6,a
      000A36 A3               [24] 2434 	inc	dptr
      000A37 E0               [24] 2435 	movx	a,@dptr
      000A38 FF               [12] 2436 	mov	r7,a
      000A39 EE               [12] 2437 	mov	a,r6
      000A3A 24r08            [12] 2438 	add	a, #_buffer
      000A3C F5 82            [12] 2439 	mov	dpl,a
      000A3E EF               [12] 2440 	mov	a,r7
      000A3F 34s00            [12] 2441 	addc	a, #(_buffer >> 8)
      000A41 F5 83            [12] 2442 	mov	dph,a
      000A43 E4               [12] 2443 	clr	a
      000A44 F0               [24] 2444 	movx	@dptr,a
                                   2445 ;	trial_webserver.c:413: unreleasedPacket = true;
      000A45 90r05rEE         [24] 2446 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      000A48 04               [12] 2447 	inc	a
      000A49 F0               [24] 2448 	movx	@dptr,a
                                   2449 ;	trial_webserver.c:415: uint8_t ECON2 = mac_spi_read(0x1E, 0);
      000A4A 90r00r00         [24] 2450 	mov	dptr,#_mac_spi_read_PARM_2
      000A4D E4               [12] 2451 	clr	a
      000A4E F0               [24] 2452 	movx	@dptr,a
      000A4F 75 82 1E         [24] 2453 	mov	dpl, #0x1e
      000A52 12r00r00         [24] 2454 	lcall	_mac_spi_read
      000A55 E5 82            [12] 2455 	mov	a, dpl
                                   2456 ;	trial_webserver.c:416: spi_control_write(0, 0x1E, (ECON2 | (1 << 6))); // Enable MAC reception
      000A57 44 40            [12] 2457 	orl	a,#0x40
      000A59 FF               [12] 2458 	mov	r7,a
      000A5A 90r00r00         [24] 2459 	mov	dptr,#_spi_control_write_PARM_2
      000A5D 74 1E            [12] 2460 	mov	a,#0x1e
      000A5F F0               [24] 2461 	movx	@dptr,a
      000A60 90r00r00         [24] 2462 	mov	dptr,#_spi_control_write_PARM_3
      000A63 EF               [12] 2463 	mov	a,r7
      000A64 F0               [24] 2464 	movx	@dptr,a
      000A65 75 82 00         [24] 2465 	mov	dpl, #0x00
      000A68 12r00r00         [24] 2466 	lcall	_spi_control_write
      000A6B                       2467 00112$:
                                   2468 ;	trial_webserver.c:419: return len;
      000A6B 90r05rEF         [24] 2469 	mov	dptr,#_packetReceive_len_10000_138
      000A6E E0               [24] 2470 	movx	a,@dptr
      000A6F FE               [12] 2471 	mov	r6,a
      000A70 A3               [24] 2472 	inc	dptr
      000A71 E0               [24] 2473 	movx	a,@dptr
                                   2474 ;	trial_webserver.c:420: }
      000A72 8E 82            [24] 2475 	mov	dpl,r6
      000A74 F5 83            [12] 2476 	mov	dph,a
      000A76 22               [24] 2477 	ret
                                   2478 ;------------------------------------------------------------
                                   2479 ;Allocation info for local variables in function 'packetLoop'
                                   2480 ;------------------------------------------------------------
                                   2481 ;plen                      Allocated with name '_packetLoop_plen_10000_148'
                                   2482 ;ethType                   Allocated with name '_packetLoop_ethType_20000_149'
                                   2483 ;tcpFlags                  Allocated with name '_packetLoop_tcpFlags_30000_152'
                                   2484 ;------------------------------------------------------------
                                   2485 ;	trial_webserver.c:422: void packetLoop(void)
                                   2486 ;	-----------------------------------------
                                   2487 ;	 function packetLoop
                                   2488 ;	-----------------------------------------
      000A77                       2489 _packetLoop:
                                   2490 ;	trial_webserver.c:424: uint16_t plen = packetReceive();
      000A77 12r08rBD         [24] 2491 	lcall	_packetReceive
      000A7A AE 82            [24] 2492 	mov	r6, dpl
      000A7C AF 83            [24] 2493 	mov	r7, dph
                                   2494 ;	trial_webserver.c:427: if (plen > 0) {
      000A7E EE               [12] 2495 	mov	a,r6
      000A7F 4F               [12] 2496 	orl	a,r7
      000A80 70 01            [24] 2497 	jnz	00219$
      000A82 22               [24] 2498 	ret
      000A83                       2499 00219$:
                                   2500 ;	trial_webserver.c:428: uint16_t ethType = (buffer[ETH_TYPE_H_P] << 8) | buffer[ETH_TYPE_L_P];
      000A83 90r00r14         [24] 2501 	mov	dptr,#(_buffer + 0x000c)
      000A86 E0               [24] 2502 	movx	a,@dptr
      000A87 FC               [12] 2503 	mov	r4,a
      000A88 7D 00            [12] 2504 	mov	r5,#0x00
      000A8A 90r00r15         [24] 2505 	mov	dptr,#(_buffer + 0x000d)
      000A8D E0               [24] 2506 	movx	a,@dptr
      000A8E FB               [12] 2507 	mov	r3,a
      000A8F 7A 00            [12] 2508 	mov	r2,#0x00
      000A91 42 05            [12] 2509 	orl	ar5,a
      000A93 EA               [12] 2510 	mov	a,r2
      000A94 42 04            [12] 2511 	orl	ar4,a
                                   2512 ;	trial_webserver.c:429: if (ethType == ETH_TYPE_ARP) {
      000A96 BD 06 0F         [24] 2513 	cjne	r5,#0x06,00104$
      000A99 BC 08 0C         [24] 2514 	cjne	r4,#0x08,00104$
                                   2515 ;	trial_webserver.c:430: if (buffer[21] == 0x01) {
      000A9C 90r00r1D         [24] 2516 	mov	dptr,#(_buffer + 0x0015)
      000A9F E0               [24] 2517 	movx	a,@dptr
      000AA0 FB               [12] 2518 	mov	r3,a
      000AA1 BB 01 03         [24] 2519 	cjne	r3,#0x01,00102$
                                   2520 ;	trial_webserver.c:431: makeArpReply();
                                   2521 ;	trial_webserver.c:433: return;
      000AA4 02r00r00         [24] 2522 	ljmp	_makeArpReply
      000AA7                       2523 00102$:
      000AA7 22               [24] 2524 	ret
      000AA8                       2525 00104$:
                                   2526 ;	trial_webserver.c:436: if (ethType == ETH_TYPE_IP && buffer[IP_PROTO_P] == IP_PROTO_TCP)
      000AA8 BD 00 05         [24] 2527 	cjne	r5,#0x00,00224$
      000AAB BC 08 02         [24] 2528 	cjne	r4,#0x08,00224$
      000AAE 80 01            [24] 2529 	sjmp	00225$
      000AB0                       2530 00224$:
      000AB0 22               [24] 2531 	ret
      000AB1                       2532 00225$:
      000AB1 90r00r1F         [24] 2533 	mov	dptr,#(_buffer + 0x0017)
      000AB4 E0               [24] 2534 	movx	a,@dptr
      000AB5 FD               [12] 2535 	mov	r5,a
      000AB6 BD 06 02         [24] 2536 	cjne	r5,#0x06,00226$
      000AB9 80 01            [24] 2537 	sjmp	00227$
      000ABB                       2538 00226$:
      000ABB 22               [24] 2539 	ret
      000ABC                       2540 00227$:
                                   2541 ;	trial_webserver.c:438: uint8_t tcpFlags = buffer[TCP_FLAGS_P];
      000ABC 90r00r37         [24] 2542 	mov	dptr,#(_buffer + 0x002f)
      000ABF E0               [24] 2543 	movx	a,@dptr
                                   2544 ;	trial_webserver.c:441: if ((tcpFlags & TCP_FLAG_ACK) && (tcpFlags & TCP_FLAG_FIN)) {
      000AC0 FD               [12] 2545 	mov	r5,a
      000AC1 30 E4 23         [24] 2546 	jnb	acc.4,00106$
      000AC4 ED               [12] 2547 	mov	a,r5
      000AC5 30 E0 1F         [24] 2548 	jnb	acc.0,00106$
                                   2549 ;	trial_webserver.c:442: printf("TCP(ACK_FIN) packet detected\n\r");
      000AC8 74rC4            [12] 2550 	mov	a,#___str_6
      000ACA C0 E0            [24] 2551 	push	acc
      000ACC 74s03            [12] 2552 	mov	a,#(___str_6 >> 8)
      000ACE C0 E0            [24] 2553 	push	acc
      000AD0 74 80            [12] 2554 	mov	a,#0x80
      000AD2 C0 E0            [24] 2555 	push	acc
      000AD4 12r00r00         [24] 2556 	lcall	_printf
      000AD7 15 81            [12] 2557 	dec	sp
      000AD9 15 81            [12] 2558 	dec	sp
      000ADB 15 81            [12] 2559 	dec	sp
                                   2560 ;	trial_webserver.c:443: makeTcpAck3(); // Send an acknowledgment
      000ADD 12r01r04         [24] 2561 	lcall	_makeTcpAck3
                                   2562 ;	trial_webserver.c:444: connectionState = CLOSED;
      000AE0 90r00r14         [24] 2563 	mov	dptr,#_connectionState
      000AE3 74 04            [12] 2564 	mov	a,#0x04
      000AE5 F0               [24] 2565 	movx	@dptr,a
                                   2566 ;	trial_webserver.c:446: return;
      000AE6 22               [24] 2567 	ret
      000AE7                       2568 00106$:
                                   2569 ;	trial_webserver.c:448: if ((tcpFlags & TCP_FLAG_SYN)) {
      000AE7 ED               [12] 2570 	mov	a,r5
      000AE8 30 E1 26         [24] 2571 	jnb	acc.1,00109$
                                   2572 ;	trial_webserver.c:449: printf("TCP(SYN) packet detected\n\r");
      000AEB C0 07            [24] 2573 	push	ar7
      000AED C0 06            [24] 2574 	push	ar6
      000AEF C0 05            [24] 2575 	push	ar5
      000AF1 74rE3            [12] 2576 	mov	a,#___str_7
      000AF3 C0 E0            [24] 2577 	push	acc
      000AF5 74s03            [12] 2578 	mov	a,#(___str_7 >> 8)
      000AF7 C0 E0            [24] 2579 	push	acc
      000AF9 74 80            [12] 2580 	mov	a,#0x80
      000AFB C0 E0            [24] 2581 	push	acc
      000AFD 12r00r00         [24] 2582 	lcall	_printf
      000B00 15 81            [12] 2583 	dec	sp
      000B02 15 81            [12] 2584 	dec	sp
      000B04 15 81            [12] 2585 	dec	sp
      000B06 D0 05            [24] 2586 	pop	ar5
      000B08 D0 06            [24] 2587 	pop	ar6
      000B0A D0 07            [24] 2588 	pop	ar7
                                   2589 ;	trial_webserver.c:451: connectionState = LISTEN;
      000B0C 90r00r14         [24] 2590 	mov	dptr,#_connectionState
      000B0F E4               [12] 2591 	clr	a
      000B10 F0               [24] 2592 	movx	@dptr,a
      000B11                       2593 00109$:
                                   2594 ;	trial_webserver.c:454: switch (connectionState) {
      000B11 90r00r14         [24] 2595 	mov	dptr,#_connectionState
      000B14 E0               [24] 2596 	movx	a,@dptr
      000B15 FC               [12] 2597 	mov  r4,a
      000B16 24 FA            [12] 2598 	add	a,#0xff - 0x05
      000B18 50 01            [24] 2599 	jnc	00231$
      000B1A 22               [24] 2600 	ret
      000B1B                       2601 00231$:
      000B1B EC               [12] 2602 	mov	a,r4
      000B1C 2C               [12] 2603 	add	a,r4
      000B1D 2C               [12] 2604 	add	a,r4
      000B1E 90r0Br22         [24] 2605 	mov	dptr,#00232$
      000B21 73               [24] 2606 	jmp	@a+dptr
      000B22                       2607 00232$:
      000B22 02r0Br34         [24] 2608 	ljmp	00110$
      000B25 02r0Br55         [24] 2609 	ljmp	00113$
      000B28 02r0Br79         [24] 2610 	ljmp	00116$
      000B2B 02r0BrB3         [24] 2611 	ljmp	00122$
      000B2E 02r0BrE0         [24] 2612 	ljmp	00133$
      000B31 02r0BrD7         [24] 2613 	ljmp	00125$
                                   2614 ;	trial_webserver.c:455: case LISTEN:
      000B34                       2615 00110$:
                                   2616 ;	trial_webserver.c:456: printf("listen\n\r");
      000B34 C0 05            [24] 2617 	push	ar5
      000B36 74rFE            [12] 2618 	mov	a,#___str_8
      000B38 C0 E0            [24] 2619 	push	acc
      000B3A 74s03            [12] 2620 	mov	a,#(___str_8 >> 8)
      000B3C C0 E0            [24] 2621 	push	acc
      000B3E 74 80            [12] 2622 	mov	a,#0x80
      000B40 C0 E0            [24] 2623 	push	acc
      000B42 12r00r00         [24] 2624 	lcall	_printf
      000B45 15 81            [12] 2625 	dec	sp
      000B47 15 81            [12] 2626 	dec	sp
      000B49 15 81            [12] 2627 	dec	sp
      000B4B D0 05            [24] 2628 	pop	ar5
                                   2629 ;	trial_webserver.c:457: if (tcpFlags & TCP_FLAG_SYN)
      000B4D ED               [12] 2630 	mov	a,r5
      000B4E 20 E1 01         [24] 2631 	jb	acc.1,00233$
      000B51 22               [24] 2632 	ret
      000B52                       2633 00233$:
                                   2634 ;	trial_webserver.c:458: makeTcpSynAck();
                                   2635 ;	trial_webserver.c:459: break;
      000B52 02r04rE7         [24] 2636 	ljmp	_makeTcpSynAck
                                   2637 ;	trial_webserver.c:460: case SYN_RECEIVED:
      000B55                       2638 00113$:
                                   2639 ;	trial_webserver.c:461: printf("syn received\n\r");
      000B55 C0 05            [24] 2640 	push	ar5
      000B57 74r07            [12] 2641 	mov	a,#___str_9
      000B59 C0 E0            [24] 2642 	push	acc
      000B5B 74s04            [12] 2643 	mov	a,#(___str_9 >> 8)
      000B5D C0 E0            [24] 2644 	push	acc
      000B5F 74 80            [12] 2645 	mov	a,#0x80
      000B61 C0 E0            [24] 2646 	push	acc
      000B63 12r00r00         [24] 2647 	lcall	_printf
      000B66 15 81            [12] 2648 	dec	sp
      000B68 15 81            [12] 2649 	dec	sp
      000B6A 15 81            [12] 2650 	dec	sp
      000B6C D0 05            [24] 2651 	pop	ar5
                                   2652 ;	trial_webserver.c:462: if (tcpFlags & TCP_FLAG_ACK)
      000B6E ED               [12] 2653 	mov	a,r5
      000B6F 30 E4 6E         [24] 2654 	jnb	acc.4,00133$
                                   2655 ;	trial_webserver.c:463: connectionState = ESTABLISHED;
      000B72 90r00r14         [24] 2656 	mov	dptr,#_connectionState
      000B75 74 02            [12] 2657 	mov	a,#0x02
      000B77 F0               [24] 2658 	movx	@dptr,a
                                   2659 ;	trial_webserver.c:464: break;
                                   2660 ;	trial_webserver.c:465: case ESTABLISHED:
      000B78 22               [24] 2661 	ret
      000B79                       2662 00116$:
                                   2663 ;	trial_webserver.c:466: printf("established\n\r");
      000B79 C0 07            [24] 2664 	push	ar7
      000B7B C0 06            [24] 2665 	push	ar6
      000B7D C0 05            [24] 2666 	push	ar5
      000B7F 74r16            [12] 2667 	mov	a,#___str_10
      000B81 C0 E0            [24] 2668 	push	acc
      000B83 74s04            [12] 2669 	mov	a,#(___str_10 >> 8)
      000B85 C0 E0            [24] 2670 	push	acc
      000B87 74 80            [12] 2671 	mov	a,#0x80
      000B89 C0 E0            [24] 2672 	push	acc
      000B8B 12r00r00         [24] 2673 	lcall	_printf
      000B8E 15 81            [12] 2674 	dec	sp
      000B90 15 81            [12] 2675 	dec	sp
      000B92 15 81            [12] 2676 	dec	sp
      000B94 D0 05            [24] 2677 	pop	ar5
      000B96 D0 06            [24] 2678 	pop	ar6
      000B98 D0 07            [24] 2679 	pop	ar7
                                   2680 ;	trial_webserver.c:467: if (tcpFlags & TCP_FLAG_FIN) {
      000B9A ED               [12] 2681 	mov	a,r5
      000B9B 30 E0 0A         [24] 2682 	jnb	acc.0,00120$
                                   2683 ;	trial_webserver.c:468: makeTcpAck();
      000B9E 12r06r73         [24] 2684 	lcall	_makeTcpAck
                                   2685 ;	trial_webserver.c:469: connectionState = FIN_WAIT;
      000BA1 90r00r14         [24] 2686 	mov	dptr,#_connectionState
      000BA4 74 03            [12] 2687 	mov	a,#0x03
      000BA6 F0               [24] 2688 	movx	@dptr,a
      000BA7 22               [24] 2689 	ret
      000BA8                       2690 00120$:
                                   2691 ;	trial_webserver.c:470: } else if (plen > TCP_DATA_START_P) {
      000BA8 C3               [12] 2692 	clr	c
      000BA9 74 36            [12] 2693 	mov	a,#0x36
      000BAB 9E               [12] 2694 	subb	a,r6
      000BAC E4               [12] 2695 	clr	a
      000BAD 9F               [12] 2696 	subb	a,r7
      000BAE 50 30            [24] 2697 	jnc	00133$
                                   2698 ;	trial_webserver.c:471: makeTcpAck2();
                                   2699 ;	trial_webserver.c:474: break;
                                   2700 ;	trial_webserver.c:475: case FIN_WAIT:
      000BB0 02r02rD6         [24] 2701 	ljmp	_makeTcpAck2
      000BB3                       2702 00122$:
                                   2703 ;	trial_webserver.c:476: printf("fin wait\n\r");
      000BB3 C0 05            [24] 2704 	push	ar5
      000BB5 74r24            [12] 2705 	mov	a,#___str_11
      000BB7 C0 E0            [24] 2706 	push	acc
      000BB9 74s04            [12] 2707 	mov	a,#(___str_11 >> 8)
      000BBB C0 E0            [24] 2708 	push	acc
      000BBD 74 80            [12] 2709 	mov	a,#0x80
      000BBF C0 E0            [24] 2710 	push	acc
      000BC1 12r00r00         [24] 2711 	lcall	_printf
      000BC4 15 81            [12] 2712 	dec	sp
      000BC6 15 81            [12] 2713 	dec	sp
      000BC8 15 81            [12] 2714 	dec	sp
      000BCA D0 05            [24] 2715 	pop	ar5
                                   2716 ;	trial_webserver.c:477: if (tcpFlags & TCP_FLAG_ACK)
      000BCC ED               [12] 2717 	mov	a,r5
      000BCD 30 E4 10         [24] 2718 	jnb	acc.4,00133$
                                   2719 ;	trial_webserver.c:478: connectionState = CLOSED;
      000BD0 90r00r14         [24] 2720 	mov	dptr,#_connectionState
      000BD3 74 04            [12] 2721 	mov	a,#0x04
      000BD5 F0               [24] 2722 	movx	@dptr,a
                                   2723 ;	trial_webserver.c:479: break;
                                   2724 ;	trial_webserver.c:480: case ACK_SENT:
      000BD6 22               [24] 2725 	ret
      000BD7                       2726 00125$:
                                   2727 ;	trial_webserver.c:481: makeTcpFinPshAck();
      000BD7 12r06rC3         [24] 2728 	lcall	_makeTcpFinPshAck
                                   2729 ;	trial_webserver.c:482: connectionState = CLOSED;
      000BDA 90r00r14         [24] 2730 	mov	dptr,#_connectionState
      000BDD 74 04            [12] 2731 	mov	a,#0x04
      000BDF F0               [24] 2732 	movx	@dptr,a
                                   2733 ;	trial_webserver.c:486: }
      000BE0                       2734 00133$:
                                   2735 ;	trial_webserver.c:492: }
      000BE0 22               [24] 2736 	ret
                                   2737 	.area CSEG    (CODE)
                                   2738 	.area CONST   (CODE)
                                   2739 	.area CONST   (CODE)
      000000                       2740 ___str_0:
      000000 74 72 69 61 6C 61 72  2741 	.ascii "trialarpreply"
             70 72 65 70 6C 79
      00000D 0A                    2742 	.db 0x0a
      00000E 0D                    2743 	.db 0x0d
      00000F 00                    2744 	.db 0x00
                                   2745 	.area CSEG    (CODE)
                                   2746 	.area CONST   (CODE)
      000010                       2747 ___str_1:
      000010 6D 61 6B 65 54 63 70  2748 	.ascii "makeTcpAck"
             41 63 6B
      00001A 0A                    2749 	.db 0x0a
      00001B 0D                    2750 	.db 0x0d
      00001C 00                    2751 	.db 0x00
                                   2752 	.area CSEG    (CODE)
                                   2753 	.area CONST   (CODE)
      00001D                       2754 ___str_2:
      00001D 6D 61 6B 65 54 63 70  2755 	.ascii "makeTcpSynAck"
             53 79 6E 41 63 6B
      00002A 0A                    2756 	.db 0x0a
      00002B 0D                    2757 	.db 0x0d
      00002C 00                    2758 	.db 0x00
                                   2759 	.area CSEG    (CODE)
                                   2760 	.area CONST   (CODE)
      00002D                       2761 ___str_3:
      00002D 74 63 70 61 63 6B     2762 	.ascii "tcpack"
      000033 0A                    2763 	.db 0x0a
      000034 0D                    2764 	.db 0x0d
      000035 00                    2765 	.db 0x00
                                   2766 	.area CSEG    (CODE)
                                   2767 	.area CONST   (CODE)
      000036                       2768 ___str_4:
      000036 48 54 54 50 2F 31 2E  2769 	.ascii "HTTP/1.1 200 OK"
             31 20 32 30 30 20 4F
             4B
      000045 0D                    2770 	.db 0x0d
      000046 0A                    2771 	.db 0x0a
      000047 43 6F 6E 74 65 6E 74  2772 	.ascii "Content-Type: text/html"
             2D 54 79 70 65 3A 20
             74 65 78 74 2F 68 74
             6D 6C
      00005E 0D                    2773 	.db 0x0d
      00005F 0A                    2774 	.db 0x0a
      000060 43 6F 6E 74 65 6E 74  2775 	.ascii "Content-Length: 530"
             2D 4C 65 6E 67 74 68
             3A 20 35 33 30
      000073 0D                    2776 	.db 0x0d
      000074 0A                    2777 	.db 0x0a
      000075 0D                    2778 	.db 0x0d
      000076 0A                    2779 	.db 0x0a
      000077 3C 21 44 4F 43 54 59  2780 	.ascii "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><"
             50 45 20 68 74 6D 6C
             3E 3C 68 74 6D 6C 20
             6C 61 6E 67 3D 27 65
             6E 27 3E 3C 68 65 61
             64 3E 3C 6D 65 74 61
             20 63 68 61 72 73 65
             74 3D 27 55 54 46 2D
             38 27 3E 3C
      0000B3 6D 65 74 61 20 6E 61  2781 	.ascii "meta name='viewport' content='width=device-width, initial-sc"
             6D 65 3D 27 76 69 65
             77 70 6F 72 74 27 20
             63 6F 6E 74 65 6E 74
             3D 27 77 69 64 74 68
             3D 64 65 76 69 63 65
             2D 77 69 64 74 68 2C
             20 69 6E 69 74 69 61
             6C 2D 73 63
      0000EF 61 6C 65 3D 31 2E 30  2782 	.ascii "ale=1.0'><title>Ethernet Web Server</title><style>body {font"
             27 3E 3C 74 69 74 6C
             65 3E 45 74 68 65 72
             6E 65 74 20 57 65 62
             20 53 65 72 76 65 72
             3C 2F 74 69 74 6C 65
             3E 3C 73 74 79 6C 65
             3E 62 6F 64 79 20 7B
             66 6F 6E 74
      00012B 2D 66 61 6D 69 6C 79  2783 	.ascii "-family: Arial, sans-serif; background-color: #f0f0f0; text-"
             3A 20 41 72 69 61 6C
             2C 20 73 61 6E 73 2D
             73 65 72 69 66 3B 20
             62 61 63 6B 67 72 6F
             75 6E 64 2D 63 6F 6C
             6F 72 3A 20 23 66 30
             66 30 66 30 3B 20 74
             65 78 74 2D
      000167 61 6C 69 67 6E 3A 20  2784 	.ascii "align: center; padding: 20px;}h1 {color: #333333;}p {color: "
             63 65 6E 74 65 72 3B
             20 70 61 64 64 69 6E
             67 3A 20 32 30 70 78
             3B 7D 68 31 20 7B 63
             6F 6C 6F 72 3A 20 23
             33 33 33 33 33 33 3B
             7D 70 20 7B 63 6F 6C
             6F 72 3A 20
      0001A3 23 36 36 36 36 36 36  2785 	.ascii "#666666;}</style></head><body><h1>ESD FALL 2024</h1><p>Ether"
             3B 7D 3C 2F 73 74 79
             6C 65 3E 3C 2F 68 65
             61 64 3E 3C 62 6F 64
             79 3E 3C 68 31 3E 45
             53 44 20 46 41 4C 4C
             20 32 30 32 34 3C 2F
             68 31 3E 3C 70 3E 45
             74 68 65 72
      0001DF 6E 65 74 20 62 61 73  2786 	.ascii "net based Web Server for Embedded Systems - NADGIR and KOPPA"
             65 64 20 57 65 62 20
             53 65 72 76 65 72 20
             66 6F 72 20 45 6D 62
             65 64 64 65 64 20 53
             79 73 74 65 6D 73 20
             2D 20 4E 41 44 47 49
             52 20 61 6E 64 20 4B
             4F 50 50 41
      00021B 20 6D 61 64 65 20 69  2787 	.ascii " made itttt, lessgoooo!!! This web server showcases the powe"
             74 74 74 74 2C 20 6C
             65 73 73 67 6F 6F 6F
             6F 21 21 21 20 54 68
             69 73 20 77 65 62 20
             73 65 72 76 65 72 20
             73 68 6F 77 63 61 73
             65 73 20 74 68 65 20
             70 6F 77 65
      000257 72 20 6F 66 20 6D 69  2788 	.ascii "r of microcontrollers and Ethernet communication. By leverag"
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 73
             20 61 6E 64 20 45 74
             68 65 72 6E 65 74 20
             63 6F 6D 6D 75 6E 69
             63 61 74 69 6F 6E 2E
             20 42 79 20 6C 65 76
             65 72 61 67
      000293 69 6E 67 20 74 68 65  2789 	.ascii "ing the AT89C51RC2 microcontroller and the ENC28J60 Ethernet"
             20 41 54 38 39 43 35
             31 52 43 32 20 6D 69
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 20
             61 6E 64 20 74 68 65
             20 45 4E 43 32 38 4A
             36 30 20 45 74 68 65
             72 6E 65 74
      0002CF 20 63 6F 6E 74 72 6F  2790 	.ascii " controller, we can serve dynamic web pages and control embe"
             6C 6C 65 72 2C 20 77
             65 20 63 61 6E 20 73
             65 72 76 65 20 64 79
             6E 61 6D 69 63 20 77
             65 62 20 70 61 67 65
             73 20 61 6E 64 20 63
             6F 6E 74 72 6F 6C 20
             65 6D 62 65
      00030B 64 64 65 64 20 64 65  2791 	.ascii "dded devices remotely. The server allows seamless communicat"
             76 69 63 65 73 20 72
             65 6D 6F 74 65 6C 79
             2E 20 54 68 65 20 73
             65 72 76 65 72 20 61
             6C 6C 6F 77 73 20 73
             65 61 6D 6C 65 73 73
             20 63 6F 6D 6D 75 6E
             69 63 61 74
      000347 69 6F 6E 20 62 65 74  2792 	.ascii "ion between hardware and software, enabling real-time data e"
             77 65 65 6E 20 68 61
             72 64 77 61 72 65 20
             61 6E 64 20 73 6F 66
             74 77 61 72 65 2C 20
             65 6E 61 62 6C 69 6E
             67 20 72 65 61 6C 2D
             74 69 6D 65 20 64 61
             74 61 20 65
      000383 78 63 68 61 6E 67 65  2793 	.ascii "xchange across the network.</p></body></html>"
             20 61 63 72 6F 73 73
             20 74 68 65 20 6E 65
             74 77 6F 72 6B 2E 3C
             2F 70 3E 3C 2F 62 6F
             64 79 3E 3C 2F 68 74
             6D 6C 3E
      0003B0 00                    2794 	.db 0x00
                                   2795 	.area CSEG    (CODE)
                                   2796 	.area CONST   (CODE)
      0003B1                       2797 ___str_5:
      0003B1 6D 61 6B 65 54 63 70  2798 	.ascii "makeTcpFinPshAck"
             46 69 6E 50 73 68 41
             63 6B
      0003C1 0A                    2799 	.db 0x0a
      0003C2 0D                    2800 	.db 0x0d
      0003C3 00                    2801 	.db 0x00
                                   2802 	.area CSEG    (CODE)
                                   2803 	.area CONST   (CODE)
      0003C4                       2804 ___str_6:
      0003C4 54 43 50 28 41 43 4B  2805 	.ascii "TCP(ACK_FIN) packet detected"
             5F 46 49 4E 29 20 70
             61 63 6B 65 74 20 64
             65 74 65 63 74 65 64
      0003E0 0A                    2806 	.db 0x0a
      0003E1 0D                    2807 	.db 0x0d
      0003E2 00                    2808 	.db 0x00
                                   2809 	.area CSEG    (CODE)
                                   2810 	.area CONST   (CODE)
      0003E3                       2811 ___str_7:
      0003E3 54 43 50 28 53 59 4E  2812 	.ascii "TCP(SYN) packet detected"
             29 20 70 61 63 6B 65
             74 20 64 65 74 65 63
             74 65 64
      0003FB 0A                    2813 	.db 0x0a
      0003FC 0D                    2814 	.db 0x0d
      0003FD 00                    2815 	.db 0x00
                                   2816 	.area CSEG    (CODE)
                                   2817 	.area CONST   (CODE)
      0003FE                       2818 ___str_8:
      0003FE 6C 69 73 74 65 6E     2819 	.ascii "listen"
      000404 0A                    2820 	.db 0x0a
      000405 0D                    2821 	.db 0x0d
      000406 00                    2822 	.db 0x00
                                   2823 	.area CSEG    (CODE)
                                   2824 	.area CONST   (CODE)
      000407                       2825 ___str_9:
      000407 73 79 6E 20 72 65 63  2826 	.ascii "syn received"
             65 69 76 65 64
      000413 0A                    2827 	.db 0x0a
      000414 0D                    2828 	.db 0x0d
      000415 00                    2829 	.db 0x00
                                   2830 	.area CSEG    (CODE)
                                   2831 	.area CONST   (CODE)
      000416                       2832 ___str_10:
      000416 65 73 74 61 62 6C 69  2833 	.ascii "established"
             73 68 65 64
      000421 0A                    2834 	.db 0x0a
      000422 0D                    2835 	.db 0x0d
      000423 00                    2836 	.db 0x00
                                   2837 	.area CSEG    (CODE)
                                   2838 	.area CONST   (CODE)
      000424                       2839 ___str_11:
      000424 66 69 6E 20 77 61 69  2840 	.ascii "fin wait"
             74
      00042C 0A                    2841 	.db 0x0a
      00042D 0D                    2842 	.db 0x0d
      00042E 00                    2843 	.db 0x00
                                   2844 	.area CSEG    (CODE)
                                   2845 	.area XINIT   (CODE)
      000000                       2846 __xinit__device_mac:
      000000 02                    2847 	.db #0x02	; 2
      000001 11                    2848 	.db #0x11	; 17
      000002 22                    2849 	.db #0x22	; 34
      000003 33                    2850 	.db #0x33	; 51	'3'
      000004 44                    2851 	.db #0x44	; 68	'D'
      000005 55                    2852 	.db #0x55	; 85	'U'
      000006                       2853 __xinit__target_mac:
      000006 F8                    2854 	.db #0xf8	; 248
      000007 75                    2855 	.db #0x75	; 117	'u'
      000008 A4                    2856 	.db #0xa4	; 164
      000009 8C                    2857 	.db #0x8c	; 140
      00000A 41                    2858 	.db #0x41	; 65	'A'
      00000B 31                    2859 	.db #0x31	; 49	'1'
      00000C                       2860 __xinit__device_ip:
      00000C C0                    2861 	.db #0xc0	; 192
      00000D A8                    2862 	.db #0xa8	; 168
      00000E 01                    2863 	.db #0x01	; 1
      00000F 64                    2864 	.db #0x64	; 100	'd'
      000010                       2865 __xinit__target_ip:
      000010 C0                    2866 	.db #0xc0	; 192
      000011 A8                    2867 	.db #0xa8	; 168
      000012 01                    2868 	.db #0x01	; 1
      000013 01                    2869 	.db #0x01	; 1
      000014                       2870 __xinit__connectionState:
      000014 00                    2871 	.db #0x00	; 0
                                   2872 	.area CABS    (ABS,CODE)
