                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module trial_webserver
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _makeTcpFinPshAck
                                     12 	.globl _makeTcpAck
                                     13 	.globl _makeTcpSynAck
                                     14 	.globl _makeTcpAck2
                                     15 	.globl _makeTcpAck3
                                     16 	.globl _makeArpReply
                                     17 	.globl _spi_control_write
                                     18 	.globl _eth_spi_read
                                     19 	.globl _spi_buffer_read
                                     20 	.globl _mac_spi_read
                                     21 	.globl _calculateTcpChecksum
                                     22 	.globl _calculateIPChecksum
                                     23 	.globl _transmit_tcp_packet
                                     24 	.globl _printf
                                     25 	.globl ___memcpy
                                     26 	.globl _strlen
                                     27 	.globl _memmove
                                     28 	.globl _TF1
                                     29 	.globl _TR1
                                     30 	.globl _TF0
                                     31 	.globl _TR0
                                     32 	.globl _IE1
                                     33 	.globl _IT1
                                     34 	.globl _IE0
                                     35 	.globl _IT0
                                     36 	.globl _SM0
                                     37 	.globl _SM1
                                     38 	.globl _SM2
                                     39 	.globl _REN
                                     40 	.globl _TB8
                                     41 	.globl _RB8
                                     42 	.globl _TI
                                     43 	.globl _RI
                                     44 	.globl _CY
                                     45 	.globl _AC
                                     46 	.globl _F0
                                     47 	.globl _RS1
                                     48 	.globl _RS0
                                     49 	.globl _OV
                                     50 	.globl _F1
                                     51 	.globl _P
                                     52 	.globl _RD
                                     53 	.globl _WR
                                     54 	.globl _T1
                                     55 	.globl _T0
                                     56 	.globl _INT1
                                     57 	.globl _INT0
                                     58 	.globl _TXD0
                                     59 	.globl _TXD
                                     60 	.globl _RXD0
                                     61 	.globl _RXD
                                     62 	.globl _P3_7
                                     63 	.globl _P3_6
                                     64 	.globl _P3_5
                                     65 	.globl _P3_4
                                     66 	.globl _P3_3
                                     67 	.globl _P3_2
                                     68 	.globl _P3_1
                                     69 	.globl _P3_0
                                     70 	.globl _P2_7
                                     71 	.globl _P2_6
                                     72 	.globl _P2_5
                                     73 	.globl _P2_4
                                     74 	.globl _P2_3
                                     75 	.globl _P2_2
                                     76 	.globl _P2_1
                                     77 	.globl _P2_0
                                     78 	.globl _P1_7
                                     79 	.globl _P1_6
                                     80 	.globl _P1_5
                                     81 	.globl _P1_4
                                     82 	.globl _P1_3
                                     83 	.globl _P1_2
                                     84 	.globl _P1_1
                                     85 	.globl _P1_0
                                     86 	.globl _P0_7
                                     87 	.globl _P0_6
                                     88 	.globl _P0_5
                                     89 	.globl _P0_4
                                     90 	.globl _P0_3
                                     91 	.globl _P0_2
                                     92 	.globl _P0_1
                                     93 	.globl _P0_0
                                     94 	.globl _PS
                                     95 	.globl _PT1
                                     96 	.globl _PX1
                                     97 	.globl _PT0
                                     98 	.globl _PX0
                                     99 	.globl _EA
                                    100 	.globl _ES
                                    101 	.globl _ET1
                                    102 	.globl _EX1
                                    103 	.globl _ET0
                                    104 	.globl _EX0
                                    105 	.globl _BREG_F7
                                    106 	.globl _BREG_F6
                                    107 	.globl _BREG_F5
                                    108 	.globl _BREG_F4
                                    109 	.globl _BREG_F3
                                    110 	.globl _BREG_F2
                                    111 	.globl _BREG_F1
                                    112 	.globl _BREG_F0
                                    113 	.globl _P5_7
                                    114 	.globl _P5_6
                                    115 	.globl _P5_5
                                    116 	.globl _P5_4
                                    117 	.globl _P5_3
                                    118 	.globl _P5_2
                                    119 	.globl _P5_1
                                    120 	.globl _P5_0
                                    121 	.globl _P4_7
                                    122 	.globl _P4_6
                                    123 	.globl _P4_5
                                    124 	.globl _P4_4
                                    125 	.globl _P4_3
                                    126 	.globl _P4_2
                                    127 	.globl _P4_1
                                    128 	.globl _P4_0
                                    129 	.globl _PX0L
                                    130 	.globl _PT0L
                                    131 	.globl _PX1L
                                    132 	.globl _PT1L
                                    133 	.globl _PSL
                                    134 	.globl _PT2L
                                    135 	.globl _PPCL
                                    136 	.globl _EC
                                    137 	.globl _CCF0
                                    138 	.globl _CCF1
                                    139 	.globl _CCF2
                                    140 	.globl _CCF3
                                    141 	.globl _CCF4
                                    142 	.globl _CR
                                    143 	.globl _CF
                                    144 	.globl _TF2
                                    145 	.globl _EXF2
                                    146 	.globl _RCLK
                                    147 	.globl _TCLK
                                    148 	.globl _EXEN2
                                    149 	.globl _TR2
                                    150 	.globl _C_T2
                                    151 	.globl _CP_RL2
                                    152 	.globl _T2CON_7
                                    153 	.globl _T2CON_6
                                    154 	.globl _T2CON_5
                                    155 	.globl _T2CON_4
                                    156 	.globl _T2CON_3
                                    157 	.globl _T2CON_2
                                    158 	.globl _T2CON_1
                                    159 	.globl _T2CON_0
                                    160 	.globl _PT2
                                    161 	.globl _ET2
                                    162 	.globl _TMOD
                                    163 	.globl _TL1
                                    164 	.globl _TL0
                                    165 	.globl _TH1
                                    166 	.globl _TH0
                                    167 	.globl _TCON
                                    168 	.globl _SP
                                    169 	.globl _SCON
                                    170 	.globl _SBUF0
                                    171 	.globl _SBUF
                                    172 	.globl _PSW
                                    173 	.globl _PCON
                                    174 	.globl _P3
                                    175 	.globl _P2
                                    176 	.globl _P1
                                    177 	.globl _P0
                                    178 	.globl _IP
                                    179 	.globl _IE
                                    180 	.globl _DP0L
                                    181 	.globl _DPL
                                    182 	.globl _DP0H
                                    183 	.globl _DPH
                                    184 	.globl _B
                                    185 	.globl _ACC
                                    186 	.globl _EECON
                                    187 	.globl _KBF
                                    188 	.globl _KBE
                                    189 	.globl _KBLS
                                    190 	.globl _BRL
                                    191 	.globl _BDRCON
                                    192 	.globl _T2MOD
                                    193 	.globl _SPDAT
                                    194 	.globl _SPSTA
                                    195 	.globl _SPCON
                                    196 	.globl _SADEN
                                    197 	.globl _SADDR
                                    198 	.globl _WDTPRG
                                    199 	.globl _WDTRST
                                    200 	.globl _P5
                                    201 	.globl _P4
                                    202 	.globl _IPH1
                                    203 	.globl _IPL1
                                    204 	.globl _IPH0
                                    205 	.globl _IPL0
                                    206 	.globl _IEN1
                                    207 	.globl _IEN0
                                    208 	.globl _CMOD
                                    209 	.globl _CL
                                    210 	.globl _CH
                                    211 	.globl _CCON
                                    212 	.globl _CCAPM4
                                    213 	.globl _CCAPM3
                                    214 	.globl _CCAPM2
                                    215 	.globl _CCAPM1
                                    216 	.globl _CCAPM0
                                    217 	.globl _CCAP4L
                                    218 	.globl _CCAP3L
                                    219 	.globl _CCAP2L
                                    220 	.globl _CCAP1L
                                    221 	.globl _CCAP0L
                                    222 	.globl _CCAP4H
                                    223 	.globl _CCAP3H
                                    224 	.globl _CCAP2H
                                    225 	.globl _CCAP1H
                                    226 	.globl _CCAP0H
                                    227 	.globl _CKCON1
                                    228 	.globl _CKCON0
                                    229 	.globl _CKRL
                                    230 	.globl _AUXR1
                                    231 	.globl _AUXR
                                    232 	.globl _TH2
                                    233 	.globl _TL2
                                    234 	.globl _RCAP2H
                                    235 	.globl _RCAP2L
                                    236 	.globl _T2CON
                                    237 	.globl _connectionState
                                    238 	.globl _buffer
                                    239 	.globl _prevAck
                                    240 	.globl _prevSeq
                                    241 	.globl _packetReceive
                                    242 	.globl _packetLoop
                                    243 ;--------------------------------------------------------
                                    244 ; special function registers
                                    245 ;--------------------------------------------------------
                                    246 	.area RSEG    (ABS,DATA)
      000000                        247 	.org 0x0000
                           0000C8   248 _T2CON	=	0x00c8
                           0000CA   249 _RCAP2L	=	0x00ca
                           0000CB   250 _RCAP2H	=	0x00cb
                           0000CC   251 _TL2	=	0x00cc
                           0000CD   252 _TH2	=	0x00cd
                           00008E   253 _AUXR	=	0x008e
                           0000A2   254 _AUXR1	=	0x00a2
                           000097   255 _CKRL	=	0x0097
                           00008F   256 _CKCON0	=	0x008f
                           0000AF   257 _CKCON1	=	0x00af
                           0000FA   258 _CCAP0H	=	0x00fa
                           0000FB   259 _CCAP1H	=	0x00fb
                           0000FC   260 _CCAP2H	=	0x00fc
                           0000FD   261 _CCAP3H	=	0x00fd
                           0000FE   262 _CCAP4H	=	0x00fe
                           0000EA   263 _CCAP0L	=	0x00ea
                           0000EB   264 _CCAP1L	=	0x00eb
                           0000EC   265 _CCAP2L	=	0x00ec
                           0000ED   266 _CCAP3L	=	0x00ed
                           0000EE   267 _CCAP4L	=	0x00ee
                           0000DA   268 _CCAPM0	=	0x00da
                           0000DB   269 _CCAPM1	=	0x00db
                           0000DC   270 _CCAPM2	=	0x00dc
                           0000DD   271 _CCAPM3	=	0x00dd
                           0000DE   272 _CCAPM4	=	0x00de
                           0000D8   273 _CCON	=	0x00d8
                           0000F9   274 _CH	=	0x00f9
                           0000E9   275 _CL	=	0x00e9
                           0000D9   276 _CMOD	=	0x00d9
                           0000A8   277 _IEN0	=	0x00a8
                           0000B1   278 _IEN1	=	0x00b1
                           0000B8   279 _IPL0	=	0x00b8
                           0000B7   280 _IPH0	=	0x00b7
                           0000B2   281 _IPL1	=	0x00b2
                           0000B3   282 _IPH1	=	0x00b3
                           0000C0   283 _P4	=	0x00c0
                           0000E8   284 _P5	=	0x00e8
                           0000A6   285 _WDTRST	=	0x00a6
                           0000A7   286 _WDTPRG	=	0x00a7
                           0000A9   287 _SADDR	=	0x00a9
                           0000B9   288 _SADEN	=	0x00b9
                           0000C3   289 _SPCON	=	0x00c3
                           0000C4   290 _SPSTA	=	0x00c4
                           0000C5   291 _SPDAT	=	0x00c5
                           0000C9   292 _T2MOD	=	0x00c9
                           00009B   293 _BDRCON	=	0x009b
                           00009A   294 _BRL	=	0x009a
                           00009C   295 _KBLS	=	0x009c
                           00009D   296 _KBE	=	0x009d
                           00009E   297 _KBF	=	0x009e
                           0000D2   298 _EECON	=	0x00d2
                           0000E0   299 _ACC	=	0x00e0
                           0000F0   300 _B	=	0x00f0
                           000083   301 _DPH	=	0x0083
                           000083   302 _DP0H	=	0x0083
                           000082   303 _DPL	=	0x0082
                           000082   304 _DP0L	=	0x0082
                           0000A8   305 _IE	=	0x00a8
                           0000B8   306 _IP	=	0x00b8
                           000080   307 _P0	=	0x0080
                           000090   308 _P1	=	0x0090
                           0000A0   309 _P2	=	0x00a0
                           0000B0   310 _P3	=	0x00b0
                           000087   311 _PCON	=	0x0087
                           0000D0   312 _PSW	=	0x00d0
                           000099   313 _SBUF	=	0x0099
                           000099   314 _SBUF0	=	0x0099
                           000098   315 _SCON	=	0x0098
                           000081   316 _SP	=	0x0081
                           000088   317 _TCON	=	0x0088
                           00008C   318 _TH0	=	0x008c
                           00008D   319 _TH1	=	0x008d
                           00008A   320 _TL0	=	0x008a
                           00008B   321 _TL1	=	0x008b
                           000089   322 _TMOD	=	0x0089
                                    323 ;--------------------------------------------------------
                                    324 ; special function bits
                                    325 ;--------------------------------------------------------
                                    326 	.area RSEG    (ABS,DATA)
      000000                        327 	.org 0x0000
                           0000AD   328 _ET2	=	0x00ad
                           0000BD   329 _PT2	=	0x00bd
                           0000C8   330 _T2CON_0	=	0x00c8
                           0000C9   331 _T2CON_1	=	0x00c9
                           0000CA   332 _T2CON_2	=	0x00ca
                           0000CB   333 _T2CON_3	=	0x00cb
                           0000CC   334 _T2CON_4	=	0x00cc
                           0000CD   335 _T2CON_5	=	0x00cd
                           0000CE   336 _T2CON_6	=	0x00ce
                           0000CF   337 _T2CON_7	=	0x00cf
                           0000C8   338 _CP_RL2	=	0x00c8
                           0000C9   339 _C_T2	=	0x00c9
                           0000CA   340 _TR2	=	0x00ca
                           0000CB   341 _EXEN2	=	0x00cb
                           0000CC   342 _TCLK	=	0x00cc
                           0000CD   343 _RCLK	=	0x00cd
                           0000CE   344 _EXF2	=	0x00ce
                           0000CF   345 _TF2	=	0x00cf
                           0000DF   346 _CF	=	0x00df
                           0000DE   347 _CR	=	0x00de
                           0000DC   348 _CCF4	=	0x00dc
                           0000DB   349 _CCF3	=	0x00db
                           0000DA   350 _CCF2	=	0x00da
                           0000D9   351 _CCF1	=	0x00d9
                           0000D8   352 _CCF0	=	0x00d8
                           0000AE   353 _EC	=	0x00ae
                           0000BE   354 _PPCL	=	0x00be
                           0000BD   355 _PT2L	=	0x00bd
                           0000BC   356 _PSL	=	0x00bc
                           0000BB   357 _PT1L	=	0x00bb
                           0000BA   358 _PX1L	=	0x00ba
                           0000B9   359 _PT0L	=	0x00b9
                           0000B8   360 _PX0L	=	0x00b8
                           0000C0   361 _P4_0	=	0x00c0
                           0000C1   362 _P4_1	=	0x00c1
                           0000C2   363 _P4_2	=	0x00c2
                           0000C3   364 _P4_3	=	0x00c3
                           0000C4   365 _P4_4	=	0x00c4
                           0000C5   366 _P4_5	=	0x00c5
                           0000C6   367 _P4_6	=	0x00c6
                           0000C7   368 _P4_7	=	0x00c7
                           0000E8   369 _P5_0	=	0x00e8
                           0000E9   370 _P5_1	=	0x00e9
                           0000EA   371 _P5_2	=	0x00ea
                           0000EB   372 _P5_3	=	0x00eb
                           0000EC   373 _P5_4	=	0x00ec
                           0000ED   374 _P5_5	=	0x00ed
                           0000EE   375 _P5_6	=	0x00ee
                           0000EF   376 _P5_7	=	0x00ef
                           0000F0   377 _BREG_F0	=	0x00f0
                           0000F1   378 _BREG_F1	=	0x00f1
                           0000F2   379 _BREG_F2	=	0x00f2
                           0000F3   380 _BREG_F3	=	0x00f3
                           0000F4   381 _BREG_F4	=	0x00f4
                           0000F5   382 _BREG_F5	=	0x00f5
                           0000F6   383 _BREG_F6	=	0x00f6
                           0000F7   384 _BREG_F7	=	0x00f7
                           0000A8   385 _EX0	=	0x00a8
                           0000A9   386 _ET0	=	0x00a9
                           0000AA   387 _EX1	=	0x00aa
                           0000AB   388 _ET1	=	0x00ab
                           0000AC   389 _ES	=	0x00ac
                           0000AF   390 _EA	=	0x00af
                           0000B8   391 _PX0	=	0x00b8
                           0000B9   392 _PT0	=	0x00b9
                           0000BA   393 _PX1	=	0x00ba
                           0000BB   394 _PT1	=	0x00bb
                           0000BC   395 _PS	=	0x00bc
                           000080   396 _P0_0	=	0x0080
                           000081   397 _P0_1	=	0x0081
                           000082   398 _P0_2	=	0x0082
                           000083   399 _P0_3	=	0x0083
                           000084   400 _P0_4	=	0x0084
                           000085   401 _P0_5	=	0x0085
                           000086   402 _P0_6	=	0x0086
                           000087   403 _P0_7	=	0x0087
                           000090   404 _P1_0	=	0x0090
                           000091   405 _P1_1	=	0x0091
                           000092   406 _P1_2	=	0x0092
                           000093   407 _P1_3	=	0x0093
                           000094   408 _P1_4	=	0x0094
                           000095   409 _P1_5	=	0x0095
                           000096   410 _P1_6	=	0x0096
                           000097   411 _P1_7	=	0x0097
                           0000A0   412 _P2_0	=	0x00a0
                           0000A1   413 _P2_1	=	0x00a1
                           0000A2   414 _P2_2	=	0x00a2
                           0000A3   415 _P2_3	=	0x00a3
                           0000A4   416 _P2_4	=	0x00a4
                           0000A5   417 _P2_5	=	0x00a5
                           0000A6   418 _P2_6	=	0x00a6
                           0000A7   419 _P2_7	=	0x00a7
                           0000B0   420 _P3_0	=	0x00b0
                           0000B1   421 _P3_1	=	0x00b1
                           0000B2   422 _P3_2	=	0x00b2
                           0000B3   423 _P3_3	=	0x00b3
                           0000B4   424 _P3_4	=	0x00b4
                           0000B5   425 _P3_5	=	0x00b5
                           0000B6   426 _P3_6	=	0x00b6
                           0000B7   427 _P3_7	=	0x00b7
                           0000B0   428 _RXD	=	0x00b0
                           0000B0   429 _RXD0	=	0x00b0
                           0000B1   430 _TXD	=	0x00b1
                           0000B1   431 _TXD0	=	0x00b1
                           0000B2   432 _INT0	=	0x00b2
                           0000B3   433 _INT1	=	0x00b3
                           0000B4   434 _T0	=	0x00b4
                           0000B5   435 _T1	=	0x00b5
                           0000B6   436 _WR	=	0x00b6
                           0000B7   437 _RD	=	0x00b7
                           0000D0   438 _P	=	0x00d0
                           0000D1   439 _F1	=	0x00d1
                           0000D2   440 _OV	=	0x00d2
                           0000D3   441 _RS0	=	0x00d3
                           0000D4   442 _RS1	=	0x00d4
                           0000D5   443 _F0	=	0x00d5
                           0000D6   444 _AC	=	0x00d6
                           0000D7   445 _CY	=	0x00d7
                           000098   446 _RI	=	0x0098
                           000099   447 _TI	=	0x0099
                           00009A   448 _RB8	=	0x009a
                           00009B   449 _TB8	=	0x009b
                           00009C   450 _REN	=	0x009c
                           00009D   451 _SM2	=	0x009d
                           00009E   452 _SM1	=	0x009e
                           00009F   453 _SM0	=	0x009f
                           000088   454 _IT0	=	0x0088
                           000089   455 _IE0	=	0x0089
                           00008A   456 _IT1	=	0x008a
                           00008B   457 _IE1	=	0x008b
                           00008C   458 _TR0	=	0x008c
                           00008D   459 _TF0	=	0x008d
                           00008E   460 _TR1	=	0x008e
                           00008F   461 _TF1	=	0x008f
                                    462 ;--------------------------------------------------------
                                    463 ; overlayable register banks
                                    464 ;--------------------------------------------------------
                                    465 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        466 	.ds 8
                                    467 ;--------------------------------------------------------
                                    468 ; internal ram data
                                    469 ;--------------------------------------------------------
                                    470 	.area DSEG    (DATA)
      000000                        471 _makeTcpAck3_sloc0_1_0:
      000000                        472 	.ds 4
      000004                        473 _makeTcpAck2_sloc0_1_0:
      000004                        474 	.ds 2
      000006                        475 _makeTcpAck2_sloc1_1_0:
      000006                        476 	.ds 2
      000008                        477 _makeTcpAck2_sloc2_1_0:
      000008                        478 	.ds 4
                                    479 ;--------------------------------------------------------
                                    480 ; overlayable items in internal ram
                                    481 ;--------------------------------------------------------
                                    482 ;--------------------------------------------------------
                                    483 ; indirectly addressable internal ram data
                                    484 ;--------------------------------------------------------
                                    485 	.area ISEG    (DATA)
                                    486 ;--------------------------------------------------------
                                    487 ; absolute internal ram data
                                    488 ;--------------------------------------------------------
                                    489 	.area IABS    (ABS,DATA)
                                    490 	.area IABS    (ABS,DATA)
                                    491 ;--------------------------------------------------------
                                    492 ; bit data
                                    493 ;--------------------------------------------------------
                                    494 	.area BSEG    (BIT)
                                    495 ;--------------------------------------------------------
                                    496 ; paged external ram data
                                    497 ;--------------------------------------------------------
                                    498 	.area PSEG    (PAG,XDATA)
                                    499 ;--------------------------------------------------------
                                    500 ; uninitialized external ram data
                                    501 ;--------------------------------------------------------
                                    502 	.area XSEG    (XDATA)
      000000                        503 _prevSeq::
      000000                        504 	.ds 4
      000004                        505 _prevAck::
      000004                        506 	.ds 4
      000008                        507 _buffer::
      000008                        508 	.ds 1500
      0005E4                        509 _makeArpReply_device_mac_10000_120:
      0005E4                        510 	.ds 6
      0005EA                        511 _makeArpReply_target_mac_10000_120:
      0005EA                        512 	.ds 6
      0005F0                        513 _makeArpReply_device_ip_10000_120:
      0005F0                        514 	.ds 4
      0005F4                        515 _makeArpReply_target_ip_10000_120:
      0005F4                        516 	.ds 4
      0005F8                        517 _makeTcpAck3_device_mac_10000_121:
      0005F8                        518 	.ds 6
      0005FE                        519 _makeTcpAck3_target_mac_10000_121:
      0005FE                        520 	.ds 6
      000604                        521 _makeTcpAck3_device_ip_10000_121:
      000604                        522 	.ds 4
      000608                        523 _makeTcpAck3_target_ip_10000_121:
      000608                        524 	.ds 4
      00060C                        525 _makeTcpAck2_device_mac_10000_125:
      00060C                        526 	.ds 6
      000612                        527 _makeTcpAck2_target_mac_10000_125:
      000612                        528 	.ds 6
      000618                        529 _makeTcpAck2_device_ip_10000_125:
      000618                        530 	.ds 4
      00061C                        531 _makeTcpAck2_target_ip_10000_125:
      00061C                        532 	.ds 4
      000620                        533 _makeTcpSynAck_device_mac_10000_129:
      000620                        534 	.ds 6
      000626                        535 _makeTcpSynAck_target_mac_10000_129:
      000626                        536 	.ds 6
      00062C                        537 _makeTcpSynAck_device_ip_10000_129:
      00062C                        538 	.ds 4
      000630                        539 _makeTcpSynAck_target_ip_10000_129:
      000630                        540 	.ds 4
      000634                        541 _makeTcpAck_device_mac_10000_133:
      000634                        542 	.ds 6
      00063A                        543 _makeTcpAck_target_mac_10000_133:
      00063A                        544 	.ds 6
      000640                        545 _makeTcpAck_device_ip_10000_133:
      000640                        546 	.ds 4
      000644                        547 _makeTcpAck_target_ip_10000_133:
      000644                        548 	.ds 4
      000648                        549 _makeTcpFinPshAck_device_mac_10000_134:
      000648                        550 	.ds 6
      00064E                        551 _makeTcpFinPshAck_target_mac_10000_134:
      00064E                        552 	.ds 6
      000654                        553 _makeTcpFinPshAck_device_ip_10000_134:
      000654                        554 	.ds 4
      000658                        555 _makeTcpFinPshAck_target_ip_10000_134:
      000658                        556 	.ds 4
      00065C                        557 _makeTcpFinPshAck_serverSeqNum_10002_136:
      00065C                        558 	.ds 4
      000660                        559 _makeTcpFinPshAck_ackNum_10002_136:
      000660                        560 	.ds 4
      000664                        561 _packetReceive_gNextPacketPtr_10000_138:
      000664                        562 	.ds 2
      000666                        563 _packetReceive_unreleasedPacket_10000_138:
      000666                        564 	.ds 1
      000667                        565 _packetReceive_len_10000_138:
      000667                        566 	.ds 2
      000669                        567 _packetReceive_header_20002_144:
      000669                        568 	.ds 6
      00066F                        569 _packetReceive_start_20003_145:
      00066F                        570 	.ds 2
                                    571 ;--------------------------------------------------------
                                    572 ; absolute external ram data
                                    573 ;--------------------------------------------------------
                                    574 	.area XABS    (ABS,XDATA)
                                    575 ;--------------------------------------------------------
                                    576 ; initialized external ram data
                                    577 ;--------------------------------------------------------
                                    578 	.area XISEG   (XDATA)
      000000                        579 _connectionState::
      000000                        580 	.ds 1
                                    581 	.area HOME    (CODE)
                                    582 	.area GSINIT0 (CODE)
                                    583 	.area GSINIT1 (CODE)
                                    584 	.area GSINIT2 (CODE)
                                    585 	.area GSINIT3 (CODE)
                                    586 	.area GSINIT4 (CODE)
                                    587 	.area GSINIT5 (CODE)
                                    588 	.area GSINIT  (CODE)
                                    589 	.area GSFINAL (CODE)
                                    590 	.area CSEG    (CODE)
                                    591 ;--------------------------------------------------------
                                    592 ; global & static initialisations
                                    593 ;--------------------------------------------------------
                                    594 	.area HOME    (CODE)
                                    595 	.area GSINIT  (CODE)
                                    596 	.area GSFINAL (CODE)
                                    597 	.area GSINIT  (CODE)
                                    598 ;------------------------------------------------------------
                                    599 ;Allocation info for local variables in function 'packetReceive'
                                    600 ;------------------------------------------------------------
                                    601 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_138'
                                    602 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_138'
                                    603 ;len                       Allocated with name '_packetReceive_len_10000_138'
                                    604 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_140'
                                    605 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_142'
                                    606 ;header                    Allocated with name '_packetReceive_header_20002_144'
                                    607 ;start                     Allocated with name '_packetReceive_start_20003_145'
                                    608 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_146'
                                    609 ;------------------------------------------------------------
                                    610 ;	trial_webserver.c:388: static uint16_t gNextPacketPtr = RX_BUFFER_START;
      000000 90r06r64         [24]  611 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000003 E4               [12]  612 	clr	a
      000004 F0               [24]  613 	movx	@dptr,a
      000005 A3               [24]  614 	inc	dptr
      000006 F0               [24]  615 	movx	@dptr,a
                                    616 ;	trial_webserver.c:389: static bool unreleasedPacket = false;
      000007 90r06r66         [24]  617 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      00000A F0               [24]  618 	movx	@dptr,a
                                    619 ;--------------------------------------------------------
                                    620 ; Home
                                    621 ;--------------------------------------------------------
                                    622 	.area HOME    (CODE)
                                    623 	.area HOME    (CODE)
                                    624 ;--------------------------------------------------------
                                    625 ; code
                                    626 ;--------------------------------------------------------
                                    627 	.area CSEG    (CODE)
                                    628 ;------------------------------------------------------------
                                    629 ;Allocation info for local variables in function 'makeArpReply'
                                    630 ;------------------------------------------------------------
                                    631 ;device_mac                Allocated with name '_makeArpReply_device_mac_10000_120'
                                    632 ;target_mac                Allocated with name '_makeArpReply_target_mac_10000_120'
                                    633 ;device_ip                 Allocated with name '_makeArpReply_device_ip_10000_120'
                                    634 ;target_ip                 Allocated with name '_makeArpReply_target_ip_10000_120'
                                    635 ;------------------------------------------------------------
                                    636 ;	trial_webserver.c:21: void makeArpReply()
                                    637 ;	-----------------------------------------
                                    638 ;	 function makeArpReply
                                    639 ;	-----------------------------------------
      000000                        640 _makeArpReply:
                           000007   641 	ar7 = 0x07
                           000006   642 	ar6 = 0x06
                           000005   643 	ar5 = 0x05
                           000004   644 	ar4 = 0x04
                           000003   645 	ar3 = 0x03
                           000002   646 	ar2 = 0x02
                           000001   647 	ar1 = 0x01
                           000000   648 	ar0 = 0x00
                                    649 ;	trial_webserver.c:23: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000000 90r05rE4         [24]  650 	mov	dptr,#_makeArpReply_device_mac_10000_120
      000003 74 02            [12]  651 	mov	a,#0x02
      000005 F0               [24]  652 	movx	@dptr,a
      000006 90r05rE5         [24]  653 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0001)
      000009 74 11            [12]  654 	mov	a,#0x11
      00000B F0               [24]  655 	movx	@dptr,a
      00000C 90r05rE6         [24]  656 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0002)
      00000F 23               [12]  657 	rl	a
      000010 F0               [24]  658 	movx	@dptr,a
      000011 90r05rE7         [24]  659 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0003)
      000014 74 33            [12]  660 	mov	a,#0x33
      000016 F0               [24]  661 	movx	@dptr,a
      000017 90r05rE8         [24]  662 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0004)
      00001A 74 44            [12]  663 	mov	a,#0x44
      00001C F0               [24]  664 	movx	@dptr,a
      00001D 90r05rE9         [24]  665 	mov	dptr,#(_makeArpReply_device_mac_10000_120 + 0x0005)
      000020 74 55            [12]  666 	mov	a,#0x55
      000022 F0               [24]  667 	movx	@dptr,a
                                    668 ;	trial_webserver.c:24: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      000023 90r05rEA         [24]  669 	mov	dptr,#_makeArpReply_target_mac_10000_120
      000026 74 F8            [12]  670 	mov	a,#0xf8
      000028 F0               [24]  671 	movx	@dptr,a
      000029 90r05rEB         [24]  672 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0001)
      00002C 74 75            [12]  673 	mov	a,#0x75
      00002E F0               [24]  674 	movx	@dptr,a
      00002F 90r05rEC         [24]  675 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0002)
      000032 74 A4            [12]  676 	mov	a,#0xa4
      000034 F0               [24]  677 	movx	@dptr,a
      000035 90r05rED         [24]  678 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0003)
      000038 74 8C            [12]  679 	mov	a,#0x8c
      00003A F0               [24]  680 	movx	@dptr,a
      00003B 90r05rEE         [24]  681 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0004)
      00003E 74 41            [12]  682 	mov	a,#0x41
      000040 F0               [24]  683 	movx	@dptr,a
      000041 90r05rEF         [24]  684 	mov	dptr,#(_makeArpReply_target_mac_10000_120 + 0x0005)
      000044 74 31            [12]  685 	mov	a,#0x31
      000046 F0               [24]  686 	movx	@dptr,a
                                    687 ;	trial_webserver.c:25: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000047 90r05rF0         [24]  688 	mov	dptr,#_makeArpReply_device_ip_10000_120
      00004A 74 C0            [12]  689 	mov	a,#0xc0
      00004C F0               [24]  690 	movx	@dptr,a
      00004D 90r05rF1         [24]  691 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0001)
      000050 74 A8            [12]  692 	mov	a,#0xa8
      000052 F0               [24]  693 	movx	@dptr,a
      000053 90r05rF2         [24]  694 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0002)
      000056 74 01            [12]  695 	mov	a,#0x01
      000058 F0               [24]  696 	movx	@dptr,a
      000059 90r05rF3         [24]  697 	mov	dptr,#(_makeArpReply_device_ip_10000_120 + 0x0003)
      00005C 74 64            [12]  698 	mov	a,#0x64
      00005E F0               [24]  699 	movx	@dptr,a
                                    700 ;	trial_webserver.c:26: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00005F 90r05rF4         [24]  701 	mov	dptr,#_makeArpReply_target_ip_10000_120
      000062 74 C0            [12]  702 	mov	a,#0xc0
      000064 F0               [24]  703 	movx	@dptr,a
      000065 90r05rF5         [24]  704 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0001)
      000068 74 A8            [12]  705 	mov	a,#0xa8
      00006A F0               [24]  706 	movx	@dptr,a
      00006B 90r05rF6         [24]  707 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0002)
      00006E 74 01            [12]  708 	mov	a,#0x01
      000070 F0               [24]  709 	movx	@dptr,a
      000071 90r05rF7         [24]  710 	mov	dptr,#(_makeArpReply_target_ip_10000_120 + 0x0003)
      000074 F0               [24]  711 	movx	@dptr,a
                                    712 ;	trial_webserver.c:27: printf("trialarpreply\n\r");
      000075 74r00            [12]  713 	mov	a,#___str_0
      000077 C0 E0            [24]  714 	push	acc
      000079 74s00            [12]  715 	mov	a,#(___str_0 >> 8)
      00007B C0 E0            [24]  716 	push	acc
      00007D 74 80            [12]  717 	mov	a,#0x80
      00007F C0 E0            [24]  718 	push	acc
      000081 12r00r00         [24]  719 	lcall	_printf
      000084 15 81            [12]  720 	dec	sp
      000086 15 81            [12]  721 	dec	sp
      000088 15 81            [12]  722 	dec	sp
                                    723 ;	trial_webserver.c:29: memmove(&buffer[1], &buffer[0], 42);
      00008A 90r00r00         [24]  724 	mov	dptr,#_memmove_PARM_2
      00008D 74r08            [12]  725 	mov	a,#_buffer
      00008F F0               [24]  726 	movx	@dptr,a
      000090 74s00            [12]  727 	mov	a,#(_buffer >> 8)
      000092 A3               [24]  728 	inc	dptr
      000093 F0               [24]  729 	movx	@dptr,a
      000094 E4               [12]  730 	clr	a
      000095 A3               [24]  731 	inc	dptr
      000096 F0               [24]  732 	movx	@dptr,a
      000097 90r00r00         [24]  733 	mov	dptr,#_memmove_PARM_3
      00009A 74 2A            [12]  734 	mov	a,#0x2a
      00009C F0               [24]  735 	movx	@dptr,a
      00009D E4               [12]  736 	clr	a
      00009E A3               [24]  737 	inc	dptr
      00009F F0               [24]  738 	movx	@dptr,a
      0000A0 90r00r09         [24]  739 	mov	dptr,#(_buffer + 0x0001)
      0000A3 F5 F0            [12]  740 	mov	b,a
      0000A5 12r00r00         [24]  741 	lcall	_memmove
                                    742 ;	trial_webserver.c:32: buffer[0] = 0x0E;
      0000A8 90r00r08         [24]  743 	mov	dptr,#_buffer
      0000AB 74 0E            [12]  744 	mov	a,#0x0e
      0000AD F0               [24]  745 	movx	@dptr,a
                                    746 ;	trial_webserver.c:35: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6); // Destination MAC
      0000AE 90r00r00         [24]  747 	mov	dptr,#___memcpy_PARM_2
      0000B1 74r0F            [12]  748 	mov	a,#(_buffer + 0x0007)
      0000B3 F0               [24]  749 	movx	@dptr,a
      0000B4 74s00            [12]  750 	mov	a,#((_buffer + 0x0007) >> 8)
      0000B6 A3               [24]  751 	inc	dptr
      0000B7 F0               [24]  752 	movx	@dptr,a
      0000B8 E4               [12]  753 	clr	a
      0000B9 A3               [24]  754 	inc	dptr
      0000BA F0               [24]  755 	movx	@dptr,a
      0000BB 90r00r00         [24]  756 	mov	dptr,#___memcpy_PARM_3
      0000BE 74 06            [12]  757 	mov	a,#0x06
      0000C0 F0               [24]  758 	movx	@dptr,a
      0000C1 E4               [12]  759 	clr	a
      0000C2 A3               [24]  760 	inc	dptr
      0000C3 F0               [24]  761 	movx	@dptr,a
      0000C4 90r00r09         [24]  762 	mov	dptr,#(_buffer + 0x0001)
      0000C7 F5 F0            [12]  763 	mov	b,a
      0000C9 12r00r00         [24]  764 	lcall	___memcpy
                                    765 ;	trial_webserver.c:38: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6); // Source MAC
      0000CC 90r00r00         [24]  766 	mov	dptr,#___memcpy_PARM_2
      0000CF 74rE4            [12]  767 	mov	a,#_makeArpReply_device_mac_10000_120
      0000D1 F0               [24]  768 	movx	@dptr,a
      0000D2 74s05            [12]  769 	mov	a,#(_makeArpReply_device_mac_10000_120 >> 8)
      0000D4 A3               [24]  770 	inc	dptr
      0000D5 F0               [24]  771 	movx	@dptr,a
      0000D6 E4               [12]  772 	clr	a
      0000D7 A3               [24]  773 	inc	dptr
      0000D8 F0               [24]  774 	movx	@dptr,a
      0000D9 90r00r00         [24]  775 	mov	dptr,#___memcpy_PARM_3
      0000DC 74 06            [12]  776 	mov	a,#0x06
      0000DE F0               [24]  777 	movx	@dptr,a
      0000DF E4               [12]  778 	clr	a
      0000E0 A3               [24]  779 	inc	dptr
      0000E1 F0               [24]  780 	movx	@dptr,a
      0000E2 90r00r0F         [24]  781 	mov	dptr,#(_buffer + 0x0007)
      0000E5 F5 F0            [12]  782 	mov	b,a
      0000E7 12r00r00         [24]  783 	lcall	___memcpy
                                    784 ;	trial_webserver.c:41: buffer[1 + 21] = 0x02; // ARP Reply opcode
      0000EA 90r00r1E         [24]  785 	mov	dptr,#(_buffer + 0x0016)
      0000ED 74 02            [12]  786 	mov	a,#0x02
      0000EF F0               [24]  787 	movx	@dptr,a
                                    788 ;	trial_webserver.c:44: memcpy(&buffer[1 + 32], &buffer[1 + 22], 6); // Target MAC = Sender MAC from request
      0000F0 90r00r00         [24]  789 	mov	dptr,#___memcpy_PARM_2
      0000F3 74r1F            [12]  790 	mov	a,#(_buffer + 0x0017)
      0000F5 F0               [24]  791 	movx	@dptr,a
      0000F6 74s00            [12]  792 	mov	a,#((_buffer + 0x0017) >> 8)
      0000F8 A3               [24]  793 	inc	dptr
      0000F9 F0               [24]  794 	movx	@dptr,a
      0000FA E4               [12]  795 	clr	a
      0000FB A3               [24]  796 	inc	dptr
      0000FC F0               [24]  797 	movx	@dptr,a
      0000FD 90r00r00         [24]  798 	mov	dptr,#___memcpy_PARM_3
      000100 74 06            [12]  799 	mov	a,#0x06
      000102 F0               [24]  800 	movx	@dptr,a
      000103 E4               [12]  801 	clr	a
      000104 A3               [24]  802 	inc	dptr
      000105 F0               [24]  803 	movx	@dptr,a
      000106 90r00r29         [24]  804 	mov	dptr,#(_buffer + 0x0021)
      000109 F5 F0            [12]  805 	mov	b,a
      00010B 12r00r00         [24]  806 	lcall	___memcpy
                                    807 ;	trial_webserver.c:45: memcpy(&buffer[1 + 38], &buffer[1 + 28], 4); // Target IP = Sender IP from request
      00010E 90r00r00         [24]  808 	mov	dptr,#___memcpy_PARM_2
      000111 74r25            [12]  809 	mov	a,#(_buffer + 0x001d)
      000113 F0               [24]  810 	movx	@dptr,a
      000114 74s00            [12]  811 	mov	a,#((_buffer + 0x001d) >> 8)
      000116 A3               [24]  812 	inc	dptr
      000117 F0               [24]  813 	movx	@dptr,a
      000118 E4               [12]  814 	clr	a
      000119 A3               [24]  815 	inc	dptr
      00011A F0               [24]  816 	movx	@dptr,a
      00011B 90r00r00         [24]  817 	mov	dptr,#___memcpy_PARM_3
      00011E 74 04            [12]  818 	mov	a,#0x04
      000120 F0               [24]  819 	movx	@dptr,a
      000121 E4               [12]  820 	clr	a
      000122 A3               [24]  821 	inc	dptr
      000123 F0               [24]  822 	movx	@dptr,a
      000124 90r00r2F         [24]  823 	mov	dptr,#(_buffer + 0x0027)
      000127 F5 F0            [12]  824 	mov	b,a
      000129 12r00r00         [24]  825 	lcall	___memcpy
                                    826 ;	trial_webserver.c:48: memcpy(&buffer[1 + 22], device_mac, 6); // Sender MAC = device MAC
      00012C 90r00r00         [24]  827 	mov	dptr,#___memcpy_PARM_2
      00012F 74rE4            [12]  828 	mov	a,#_makeArpReply_device_mac_10000_120
      000131 F0               [24]  829 	movx	@dptr,a
      000132 74s05            [12]  830 	mov	a,#(_makeArpReply_device_mac_10000_120 >> 8)
      000134 A3               [24]  831 	inc	dptr
      000135 F0               [24]  832 	movx	@dptr,a
      000136 E4               [12]  833 	clr	a
      000137 A3               [24]  834 	inc	dptr
      000138 F0               [24]  835 	movx	@dptr,a
      000139 90r00r00         [24]  836 	mov	dptr,#___memcpy_PARM_3
      00013C 74 06            [12]  837 	mov	a,#0x06
      00013E F0               [24]  838 	movx	@dptr,a
      00013F E4               [12]  839 	clr	a
      000140 A3               [24]  840 	inc	dptr
      000141 F0               [24]  841 	movx	@dptr,a
      000142 90r00r1F         [24]  842 	mov	dptr,#(_buffer + 0x0017)
      000145 F5 F0            [12]  843 	mov	b,a
      000147 12r00r00         [24]  844 	lcall	___memcpy
                                    845 ;	trial_webserver.c:49: memcpy(&buffer[1 + 28], device_ip, 4);  // Sender IP = device IP
      00014A 90r00r00         [24]  846 	mov	dptr,#___memcpy_PARM_2
      00014D 74rF0            [12]  847 	mov	a,#_makeArpReply_device_ip_10000_120
      00014F F0               [24]  848 	movx	@dptr,a
      000150 74s05            [12]  849 	mov	a,#(_makeArpReply_device_ip_10000_120 >> 8)
      000152 A3               [24]  850 	inc	dptr
      000153 F0               [24]  851 	movx	@dptr,a
      000154 E4               [12]  852 	clr	a
      000155 A3               [24]  853 	inc	dptr
      000156 F0               [24]  854 	movx	@dptr,a
      000157 90r00r00         [24]  855 	mov	dptr,#___memcpy_PARM_3
      00015A 74 04            [12]  856 	mov	a,#0x04
      00015C F0               [24]  857 	movx	@dptr,a
      00015D E4               [12]  858 	clr	a
      00015E A3               [24]  859 	inc	dptr
      00015F F0               [24]  860 	movx	@dptr,a
      000160 90r00r25         [24]  861 	mov	dptr,#(_buffer + 0x001d)
      000163 F5 F0            [12]  862 	mov	b,a
      000165 12r00r00         [24]  863 	lcall	___memcpy
                                    864 ;	trial_webserver.c:52: transmit_tcp_packet(buffer, 43);
      000168 90r00r00         [24]  865 	mov	dptr,#_transmit_tcp_packet_PARM_2
      00016B 74 2B            [12]  866 	mov	a,#0x2b
      00016D F0               [24]  867 	movx	@dptr,a
      00016E E4               [12]  868 	clr	a
      00016F A3               [24]  869 	inc	dptr
      000170 F0               [24]  870 	movx	@dptr,a
      000171 90r00r08         [24]  871 	mov	dptr,#_buffer
      000174 F5 F0            [12]  872 	mov	b,a
                                    873 ;	trial_webserver.c:53: }
      000176 02r00r00         [24]  874 	ljmp	_transmit_tcp_packet
                                    875 ;------------------------------------------------------------
                                    876 ;Allocation info for local variables in function 'makeTcpAck3'
                                    877 ;------------------------------------------------------------
                                    878 ;sloc0                     Allocated with name '_makeTcpAck3_sloc0_1_0'
                                    879 ;device_mac                Allocated with name '_makeTcpAck3_device_mac_10000_121'
                                    880 ;target_mac                Allocated with name '_makeTcpAck3_target_mac_10000_121'
                                    881 ;device_ip                 Allocated with name '_makeTcpAck3_device_ip_10000_121'
                                    882 ;target_ip                 Allocated with name '_makeTcpAck3_target_ip_10000_121'
                                    883 ;srcPort                   Allocated with name '_makeTcpAck3_srcPort_10001_122'
                                    884 ;dstPort                   Allocated with name '_makeTcpAck3_dstPort_10001_122'
                                    885 ;clientSeqNum              Allocated with name '_makeTcpAck3_clientSeqNum_10002_123'
                                    886 ;clientAckNum              Allocated with name '_makeTcpAck3_clientAckNum_10002_123'
                                    887 ;serverSeqNum              Allocated with name '_makeTcpAck3_serverSeqNum_10002_123'
                                    888 ;ackNum                    Allocated with name '_makeTcpAck3_ackNum_10002_123'
                                    889 ;totalLength               Allocated with name '_makeTcpAck3_totalLength_10003_124'
                                    890 ;------------------------------------------------------------
                                    891 ;	trial_webserver.c:58: void makeTcpAck3() {
                                    892 ;	-----------------------------------------
                                    893 ;	 function makeTcpAck3
                                    894 ;	-----------------------------------------
      000179                        895 _makeTcpAck3:
                                    896 ;	trial_webserver.c:59: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000179 90r05rF8         [24]  897 	mov	dptr,#_makeTcpAck3_device_mac_10000_121
      00017C 74 02            [12]  898 	mov	a,#0x02
      00017E F0               [24]  899 	movx	@dptr,a
      00017F 90r05rF9         [24]  900 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0001)
      000182 74 11            [12]  901 	mov	a,#0x11
      000184 F0               [24]  902 	movx	@dptr,a
      000185 90r05rFA         [24]  903 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0002)
      000188 23               [12]  904 	rl	a
      000189 F0               [24]  905 	movx	@dptr,a
      00018A 90r05rFB         [24]  906 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0003)
      00018D 74 33            [12]  907 	mov	a,#0x33
      00018F F0               [24]  908 	movx	@dptr,a
      000190 90r05rFC         [24]  909 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0004)
      000193 74 44            [12]  910 	mov	a,#0x44
      000195 F0               [24]  911 	movx	@dptr,a
      000196 90r05rFD         [24]  912 	mov	dptr,#(_makeTcpAck3_device_mac_10000_121 + 0x0005)
      000199 74 55            [12]  913 	mov	a,#0x55
      00019B F0               [24]  914 	movx	@dptr,a
                                    915 ;	trial_webserver.c:60: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      00019C 90r05rFE         [24]  916 	mov	dptr,#_makeTcpAck3_target_mac_10000_121
      00019F 74 F8            [12]  917 	mov	a,#0xf8
      0001A1 F0               [24]  918 	movx	@dptr,a
      0001A2 90r05rFF         [24]  919 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0001)
      0001A5 74 75            [12]  920 	mov	a,#0x75
      0001A7 F0               [24]  921 	movx	@dptr,a
      0001A8 90r06r00         [24]  922 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0002)
      0001AB 74 A4            [12]  923 	mov	a,#0xa4
      0001AD F0               [24]  924 	movx	@dptr,a
      0001AE 90r06r01         [24]  925 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0003)
      0001B1 74 8C            [12]  926 	mov	a,#0x8c
      0001B3 F0               [24]  927 	movx	@dptr,a
      0001B4 90r06r02         [24]  928 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0004)
      0001B7 74 41            [12]  929 	mov	a,#0x41
      0001B9 F0               [24]  930 	movx	@dptr,a
      0001BA 90r06r03         [24]  931 	mov	dptr,#(_makeTcpAck3_target_mac_10000_121 + 0x0005)
      0001BD 74 31            [12]  932 	mov	a,#0x31
      0001BF F0               [24]  933 	movx	@dptr,a
                                    934 ;	trial_webserver.c:61: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      0001C0 90r06r04         [24]  935 	mov	dptr,#_makeTcpAck3_device_ip_10000_121
      0001C3 74 C0            [12]  936 	mov	a,#0xc0
      0001C5 F0               [24]  937 	movx	@dptr,a
      0001C6 90r06r05         [24]  938 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0001)
      0001C9 74 A8            [12]  939 	mov	a,#0xa8
      0001CB F0               [24]  940 	movx	@dptr,a
      0001CC 90r06r06         [24]  941 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0002)
      0001CF 74 01            [12]  942 	mov	a,#0x01
      0001D1 F0               [24]  943 	movx	@dptr,a
      0001D2 90r06r07         [24]  944 	mov	dptr,#(_makeTcpAck3_device_ip_10000_121 + 0x0003)
      0001D5 74 64            [12]  945 	mov	a,#0x64
      0001D7 F0               [24]  946 	movx	@dptr,a
                                    947 ;	trial_webserver.c:62: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0001D8 90r06r08         [24]  948 	mov	dptr,#_makeTcpAck3_target_ip_10000_121
      0001DB 74 C0            [12]  949 	mov	a,#0xc0
      0001DD F0               [24]  950 	movx	@dptr,a
      0001DE 90r06r09         [24]  951 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0001)
      0001E1 74 A8            [12]  952 	mov	a,#0xa8
      0001E3 F0               [24]  953 	movx	@dptr,a
      0001E4 90r06r0A         [24]  954 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0002)
      0001E7 74 01            [12]  955 	mov	a,#0x01
      0001E9 F0               [24]  956 	movx	@dptr,a
      0001EA 90r06r0B         [24]  957 	mov	dptr,#(_makeTcpAck3_target_ip_10000_121 + 0x0003)
      0001ED F0               [24]  958 	movx	@dptr,a
                                    959 ;	trial_webserver.c:63: printf("makeTcpAck\n\r");
      0001EE 74r10            [12]  960 	mov	a,#___str_1
      0001F0 C0 E0            [24]  961 	push	acc
      0001F2 74s00            [12]  962 	mov	a,#(___str_1 >> 8)
      0001F4 C0 E0            [24]  963 	push	acc
      0001F6 74 80            [12]  964 	mov	a,#0x80
      0001F8 C0 E0            [24]  965 	push	acc
      0001FA 12r00r00         [24]  966 	lcall	_printf
      0001FD 15 81            [12]  967 	dec	sp
      0001FF 15 81            [12]  968 	dec	sp
      000201 15 81            [12]  969 	dec	sp
                                    970 ;	trial_webserver.c:66: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000203 90r00r00         [24]  971 	mov	dptr,#_memmove_PARM_2
      000206 74r08            [12]  972 	mov	a,#_buffer
      000208 F0               [24]  973 	movx	@dptr,a
      000209 74s00            [12]  974 	mov	a,#(_buffer >> 8)
      00020B A3               [24]  975 	inc	dptr
      00020C F0               [24]  976 	movx	@dptr,a
      00020D E4               [12]  977 	clr	a
      00020E A3               [24]  978 	inc	dptr
      00020F F0               [24]  979 	movx	@dptr,a
      000210 90r00r00         [24]  980 	mov	dptr,#_memmove_PARM_3
      000213 74 36            [12]  981 	mov	a,#0x36
      000215 F0               [24]  982 	movx	@dptr,a
      000216 E4               [12]  983 	clr	a
      000217 A3               [24]  984 	inc	dptr
      000218 F0               [24]  985 	movx	@dptr,a
      000219 90r00r09         [24]  986 	mov	dptr,#(_buffer + 0x0001)
      00021C F5 F0            [12]  987 	mov	b,a
      00021E 12r00r00         [24]  988 	lcall	_memmove
                                    989 ;	trial_webserver.c:67: buffer[0] = 0x0E;
      000221 90r00r08         [24]  990 	mov	dptr,#_buffer
      000224 74 0E            [12]  991 	mov	a,#0x0e
      000226 F0               [24]  992 	movx	@dptr,a
                                    993 ;	trial_webserver.c:70: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      000227 90r00r00         [24]  994 	mov	dptr,#___memcpy_PARM_2
      00022A 74r0F            [12]  995 	mov	a,#(_buffer + 0x0007)
      00022C F0               [24]  996 	movx	@dptr,a
      00022D 74s00            [12]  997 	mov	a,#((_buffer + 0x0007) >> 8)
      00022F A3               [24]  998 	inc	dptr
      000230 F0               [24]  999 	movx	@dptr,a
      000231 E4               [12] 1000 	clr	a
      000232 A3               [24] 1001 	inc	dptr
      000233 F0               [24] 1002 	movx	@dptr,a
      000234 90r00r00         [24] 1003 	mov	dptr,#___memcpy_PARM_3
      000237 74 06            [12] 1004 	mov	a,#0x06
      000239 F0               [24] 1005 	movx	@dptr,a
      00023A E4               [12] 1006 	clr	a
      00023B A3               [24] 1007 	inc	dptr
      00023C F0               [24] 1008 	movx	@dptr,a
      00023D 90r00r09         [24] 1009 	mov	dptr,#(_buffer + 0x0001)
      000240 F5 F0            [12] 1010 	mov	b,a
      000242 12r00r00         [24] 1011 	lcall	___memcpy
                                   1012 ;	trial_webserver.c:71: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000245 90r00r00         [24] 1013 	mov	dptr,#___memcpy_PARM_2
      000248 74rF8            [12] 1014 	mov	a,#_makeTcpAck3_device_mac_10000_121
      00024A F0               [24] 1015 	movx	@dptr,a
      00024B 74s05            [12] 1016 	mov	a,#(_makeTcpAck3_device_mac_10000_121 >> 8)
      00024D A3               [24] 1017 	inc	dptr
      00024E F0               [24] 1018 	movx	@dptr,a
      00024F E4               [12] 1019 	clr	a
      000250 A3               [24] 1020 	inc	dptr
      000251 F0               [24] 1021 	movx	@dptr,a
      000252 90r00r00         [24] 1022 	mov	dptr,#___memcpy_PARM_3
      000255 74 06            [12] 1023 	mov	a,#0x06
      000257 F0               [24] 1024 	movx	@dptr,a
      000258 E4               [12] 1025 	clr	a
      000259 A3               [24] 1026 	inc	dptr
      00025A F0               [24] 1027 	movx	@dptr,a
      00025B 90r00r0F         [24] 1028 	mov	dptr,#(_buffer + 0x0007)
      00025E F5 F0            [12] 1029 	mov	b,a
      000260 12r00r00         [24] 1030 	lcall	___memcpy
                                   1031 ;	trial_webserver.c:74: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000263 90r00r00         [24] 1032 	mov	dptr,#___memcpy_PARM_2
      000266 74r23            [12] 1033 	mov	a,#(_buffer + 0x001b)
      000268 F0               [24] 1034 	movx	@dptr,a
      000269 74s00            [12] 1035 	mov	a,#((_buffer + 0x001b) >> 8)
      00026B A3               [24] 1036 	inc	dptr
      00026C F0               [24] 1037 	movx	@dptr,a
      00026D E4               [12] 1038 	clr	a
      00026E A3               [24] 1039 	inc	dptr
      00026F F0               [24] 1040 	movx	@dptr,a
      000270 90r00r00         [24] 1041 	mov	dptr,#___memcpy_PARM_3
      000273 74 04            [12] 1042 	mov	a,#0x04
      000275 F0               [24] 1043 	movx	@dptr,a
      000276 E4               [12] 1044 	clr	a
      000277 A3               [24] 1045 	inc	dptr
      000278 F0               [24] 1046 	movx	@dptr,a
      000279 90r00r27         [24] 1047 	mov	dptr,#(_buffer + 0x001f)
      00027C F5 F0            [12] 1048 	mov	b,a
      00027E 12r00r00         [24] 1049 	lcall	___memcpy
                                   1050 ;	trial_webserver.c:75: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000281 90r00r00         [24] 1051 	mov	dptr,#___memcpy_PARM_2
      000284 74r04            [12] 1052 	mov	a,#_makeTcpAck3_device_ip_10000_121
      000286 F0               [24] 1053 	movx	@dptr,a
      000287 74s06            [12] 1054 	mov	a,#(_makeTcpAck3_device_ip_10000_121 >> 8)
      000289 A3               [24] 1055 	inc	dptr
      00028A F0               [24] 1056 	movx	@dptr,a
      00028B E4               [12] 1057 	clr	a
      00028C A3               [24] 1058 	inc	dptr
      00028D F0               [24] 1059 	movx	@dptr,a
      00028E 90r00r00         [24] 1060 	mov	dptr,#___memcpy_PARM_3
      000291 74 04            [12] 1061 	mov	a,#0x04
      000293 F0               [24] 1062 	movx	@dptr,a
      000294 E4               [12] 1063 	clr	a
      000295 A3               [24] 1064 	inc	dptr
      000296 F0               [24] 1065 	movx	@dptr,a
      000297 90r00r23         [24] 1066 	mov	dptr,#(_buffer + 0x001b)
      00029A F5 F0            [12] 1067 	mov	b,a
      00029C 12r00r00         [24] 1068 	lcall	___memcpy
                                   1069 ;	trial_webserver.c:78: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      00029F 90r00r2B         [24] 1070 	mov	dptr,#(_buffer + 0x0023)
      0002A2 E0               [24] 1071 	movx	a,@dptr
      0002A3 FE               [12] 1072 	mov	r6,a
      0002A4 7F 00            [12] 1073 	mov	r7,#0x00
      0002A6 90r00r2C         [24] 1074 	mov	dptr,#(_buffer + 0x0024)
      0002A9 E0               [24] 1075 	movx	a,@dptr
      0002AA 7C 00            [12] 1076 	mov	r4,#0x00
      0002AC 42 07            [12] 1077 	orl	ar7,a
      0002AE EC               [12] 1078 	mov	a,r4
      0002AF 42 06            [12] 1079 	orl	ar6,a
                                   1080 ;	trial_webserver.c:80: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      0002B1 90r00r2D         [24] 1081 	mov	dptr,#(_buffer + 0x0025)
      0002B4 E0               [24] 1082 	movx	a,@dptr
      0002B5 FC               [12] 1083 	mov	r4,a
      0002B6 7D 00            [12] 1084 	mov	r5,#0x00
      0002B8 90r00r2E         [24] 1085 	mov	dptr,#(_buffer + 0x0026)
      0002BB E0               [24] 1086 	movx	a,@dptr
      0002BC 7A 00            [12] 1087 	mov	r2,#0x00
      0002BE 42 05            [12] 1088 	orl	ar5,a
      0002C0 EA               [12] 1089 	mov	a,r2
      0002C1 42 04            [12] 1090 	orl	ar4,a
                                   1091 ;	trial_webserver.c:82: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      0002C3 8C 03            [24] 1092 	mov	ar3,r4
      0002C5 90r00r2B         [24] 1093 	mov	dptr,#(_buffer + 0x0023)
      0002C8 EB               [12] 1094 	mov	a,r3
      0002C9 F0               [24] 1095 	movx	@dptr,a
                                   1096 ;	trial_webserver.c:83: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      0002CA 90r00r2C         [24] 1097 	mov	dptr,#(_buffer + 0x0024)
      0002CD ED               [12] 1098 	mov	a,r5
      0002CE F0               [24] 1099 	movx	@dptr,a
                                   1100 ;	trial_webserver.c:84: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      0002CF 8E 05            [24] 1101 	mov	ar5,r6
      0002D1 90r00r2D         [24] 1102 	mov	dptr,#(_buffer + 0x0025)
      0002D4 ED               [12] 1103 	mov	a,r5
      0002D5 F0               [24] 1104 	movx	@dptr,a
                                   1105 ;	trial_webserver.c:85: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0002D6 90r00r2E         [24] 1106 	mov	dptr,#(_buffer + 0x0026)
      0002D9 EF               [12] 1107 	mov	a,r7
      0002DA F0               [24] 1108 	movx	@dptr,a
                                   1109 ;	trial_webserver.c:88: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0002DB 90r00r31         [24] 1110 	mov	dptr,#(_buffer + 0x0029)
      0002DE E0               [24] 1111 	movx	a,@dptr
      0002DF FE               [12] 1112 	mov	r6,a
      0002E0 7F 00            [12] 1113 	mov	r7,#0x00
      0002E2 90r00r32         [24] 1114 	mov	dptr,#(_buffer + 0x002a)
      0002E5 E0               [24] 1115 	movx	a,@dptr
      0002E6 7C 00            [12] 1116 	mov	r4,#0x00
      0002E8 42 07            [12] 1117 	orl	ar7,a
      0002EA EC               [12] 1118 	mov	a,r4
      0002EB 42 06            [12] 1119 	orl	ar6,a
      0002ED EE               [12] 1120 	mov	a,r6
      0002EE 33               [12] 1121 	rlc	a
      0002EF 95 E0            [12] 1122 	subb	a,acc
      0002F1 FD               [12] 1123 	mov	r5,a
      0002F2 FC               [12] 1124 	mov	r4,a
                                   1125 ;	trial_webserver.c:91: uint32_t clientAckNum = (buffer[1 + TCP_ACK_H_P] << 24)
      0002F3 90r00r35         [24] 1126 	mov	dptr,#(_buffer + 0x002d)
      0002F6 E0               [24] 1127 	movx	a,@dptr
      0002F7 FA               [12] 1128 	mov	r2,a
      0002F8 7B 00            [12] 1129 	mov	r3,#0x00
      0002FA 90r00r36         [24] 1130 	mov	dptr,#(_buffer + 0x002e)
      0002FD E0               [24] 1131 	movx	a,@dptr
      0002FE 79 00            [12] 1132 	mov	r1,#0x00
      000300 42 03            [12] 1133 	orl	ar3,a
      000302 E9               [12] 1134 	mov	a,r1
      000303 42 02            [12] 1135 	orl	ar2,a
      000305 8B 00            [24] 1136 	mov	ar0,r3
      000307 EA               [12] 1137 	mov	a,r2
      000308 F9               [12] 1138 	mov	r1,a
      000309 33               [12] 1139 	rlc	a
      00030A 95 E0            [12] 1140 	subb	a,acc
      00030C FA               [12] 1141 	mov	r2,a
      00030D FB               [12] 1142 	mov	r3,a
                                   1143 ;	trial_webserver.c:95: uint32_t ackNum = clientSeqNum + 1;
      00030E 74 01            [12] 1144 	mov	a,#0x01
      000310 2F               [12] 1145 	add	a, r7
      000311 F5*00            [12] 1146 	mov	_makeTcpAck3_sloc0_1_0,a
      000313 E4               [12] 1147 	clr	a
      000314 3E               [12] 1148 	addc	a, r6
      000315 F5*01            [12] 1149 	mov	(_makeTcpAck3_sloc0_1_0 + 1),a
      000317 E4               [12] 1150 	clr	a
      000318 3D               [12] 1151 	addc	a, r5
      000319 F5*02            [12] 1152 	mov	(_makeTcpAck3_sloc0_1_0 + 2),a
      00031B E4               [12] 1153 	clr	a
      00031C 3C               [12] 1154 	addc	a, r4
      00031D F5*03            [12] 1155 	mov	(_makeTcpAck3_sloc0_1_0 + 3),a
                                   1156 ;	trial_webserver.c:96: prevSeq = serverSeqNum;
      00031F 90r00r00         [24] 1157 	mov	dptr,#_prevSeq
      000322 E8               [12] 1158 	mov	a,r0
      000323 F0               [24] 1159 	movx	@dptr,a
      000324 E9               [12] 1160 	mov	a,r1
      000325 A3               [24] 1161 	inc	dptr
      000326 F0               [24] 1162 	movx	@dptr,a
      000327 EA               [12] 1163 	mov	a,r2
      000328 A3               [24] 1164 	inc	dptr
      000329 F0               [24] 1165 	movx	@dptr,a
      00032A EB               [12] 1166 	mov	a,r3
      00032B A3               [24] 1167 	inc	dptr
      00032C F0               [24] 1168 	movx	@dptr,a
                                   1169 ;	trial_webserver.c:97: prevAck = ackNum;
      00032D 90r00r04         [24] 1170 	mov	dptr,#_prevAck
      000330 E5*00            [12] 1171 	mov	a,_makeTcpAck3_sloc0_1_0
      000332 F0               [24] 1172 	movx	@dptr,a
      000333 E5*01            [12] 1173 	mov	a,(_makeTcpAck3_sloc0_1_0 + 1)
      000335 A3               [24] 1174 	inc	dptr
      000336 F0               [24] 1175 	movx	@dptr,a
      000337 E5*02            [12] 1176 	mov	a,(_makeTcpAck3_sloc0_1_0 + 2)
      000339 A3               [24] 1177 	inc	dptr
      00033A F0               [24] 1178 	movx	@dptr,a
      00033B E5*03            [12] 1179 	mov	a,(_makeTcpAck3_sloc0_1_0 + 3)
      00033D A3               [24] 1180 	inc	dptr
      00033E F0               [24] 1181 	movx	@dptr,a
                                   1182 ;	trial_webserver.c:100: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      00033F 8B 07            [24] 1183 	mov	ar7,r3
      000341 90r00r2F         [24] 1184 	mov	dptr,#(_buffer + 0x0027)
      000344 EF               [12] 1185 	mov	a,r7
      000345 F0               [24] 1186 	movx	@dptr,a
                                   1187 ;	trial_webserver.c:101: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000346 8A 07            [24] 1188 	mov	ar7,r2
      000348 90r00r30         [24] 1189 	mov	dptr,#(_buffer + 0x0028)
      00034B EF               [12] 1190 	mov	a,r7
      00034C F0               [24] 1191 	movx	@dptr,a
                                   1192 ;	trial_webserver.c:102: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      00034D 89 07            [24] 1193 	mov	ar7,r1
      00034F 90r00r31         [24] 1194 	mov	dptr,#(_buffer + 0x0029)
      000352 EF               [12] 1195 	mov	a,r7
      000353 F0               [24] 1196 	movx	@dptr,a
                                   1197 ;	trial_webserver.c:103: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000354 90r00r32         [24] 1198 	mov	dptr,#(_buffer + 0x002a)
      000357 E8               [12] 1199 	mov	a,r0
      000358 F0               [24] 1200 	movx	@dptr,a
                                   1201 ;	trial_webserver.c:104: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      000359 AF*03            [24] 1202 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 3)
      00035B 90r00r33         [24] 1203 	mov	dptr,#(_buffer + 0x002b)
      00035E EF               [12] 1204 	mov	a,r7
      00035F F0               [24] 1205 	movx	@dptr,a
                                   1206 ;	trial_webserver.c:105: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      000360 AF*02            [24] 1207 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 2)
      000362 90r00r34         [24] 1208 	mov	dptr,#(_buffer + 0x002c)
      000365 EF               [12] 1209 	mov	a,r7
      000366 F0               [24] 1210 	movx	@dptr,a
                                   1211 ;	trial_webserver.c:106: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      000367 AF*01            [24] 1212 	mov	r7,(_makeTcpAck3_sloc0_1_0 + 1)
      000369 90r00r35         [24] 1213 	mov	dptr,#(_buffer + 0x002d)
      00036C EF               [12] 1214 	mov	a,r7
      00036D F0               [24] 1215 	movx	@dptr,a
                                   1216 ;	trial_webserver.c:107: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      00036E AF*00            [24] 1217 	mov	r7,_makeTcpAck3_sloc0_1_0
      000370 90r00r36         [24] 1218 	mov	dptr,#(_buffer + 0x002e)
      000373 EF               [12] 1219 	mov	a,r7
      000374 F0               [24] 1220 	movx	@dptr,a
                                   1221 ;	trial_webserver.c:111: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000375 90r00r19         [24] 1222 	mov	dptr,#(_buffer + 0x0011)
      000378 E4               [12] 1223 	clr	a
      000379 F0               [24] 1224 	movx	@dptr,a
                                   1225 ;	trial_webserver.c:112: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      00037A 90r00r1A         [24] 1226 	mov	dptr,#(_buffer + 0x0012)
      00037D 74 28            [12] 1227 	mov	a,#0x28
      00037F F0               [24] 1228 	movx	@dptr,a
                                   1229 ;	trial_webserver.c:115: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000380 90r00r38         [24] 1230 	mov	dptr,#(_buffer + 0x0030)
      000383 74 10            [12] 1231 	mov	a,#0x10
      000385 F0               [24] 1232 	movx	@dptr,a
                                   1233 ;	trial_webserver.c:116: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      000386 90r00r39         [24] 1234 	mov	dptr,#(_buffer + 0x0031)
      000389 74 FF            [12] 1235 	mov	a,#0xff
      00038B F0               [24] 1236 	movx	@dptr,a
                                   1237 ;	trial_webserver.c:117: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      00038C 90r00r3A         [24] 1238 	mov	dptr,#(_buffer + 0x0032)
      00038F F0               [24] 1239 	movx	@dptr,a
                                   1240 ;	trial_webserver.c:118: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000390 90r00r37         [24] 1241 	mov	dptr,#(_buffer + 0x002f)
      000393 74 50            [12] 1242 	mov	a,#0x50
      000395 F0               [24] 1243 	movx	@dptr,a
                                   1244 ;	trial_webserver.c:121: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000396 90r00r09         [24] 1245 	mov	dptr,#(_buffer + 0x0001)
      000399 75 F0 00         [24] 1246 	mov	b, #0x00
      00039C 12r00r00         [24] 1247 	lcall	_calculateIPChecksum
                                   1248 ;	trial_webserver.c:122: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      00039F 90r00r09         [24] 1249 	mov	dptr,#(_buffer + 0x0001)
      0003A2 75 F0 00         [24] 1250 	mov	b, #0x00
      0003A5 12r00r00         [24] 1251 	lcall	_calculateTcpChecksum
                                   1252 ;	trial_webserver.c:126: transmit_tcp_packet(buffer, 1 + 54);
      0003A8 90r00r00         [24] 1253 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0003AB 74 37            [12] 1254 	mov	a,#0x37
      0003AD F0               [24] 1255 	movx	@dptr,a
      0003AE E4               [12] 1256 	clr	a
      0003AF A3               [24] 1257 	inc	dptr
      0003B0 F0               [24] 1258 	movx	@dptr,a
      0003B1 90r00r08         [24] 1259 	mov	dptr,#_buffer
      0003B4 F5 F0            [12] 1260 	mov	b,a
      0003B6 12r00r00         [24] 1261 	lcall	_transmit_tcp_packet
                                   1262 ;	trial_webserver.c:129: connectionState = ACK_SENT;
      0003B9 90r00r00         [24] 1263 	mov	dptr,#_connectionState
      0003BC 74 05            [12] 1264 	mov	a,#0x05
      0003BE F0               [24] 1265 	movx	@dptr,a
                                   1266 ;	trial_webserver.c:130: }
      0003BF 22               [24] 1267 	ret
                                   1268 ;------------------------------------------------------------
                                   1269 ;Allocation info for local variables in function 'makeTcpAck2'
                                   1270 ;------------------------------------------------------------
                                   1271 ;sloc0                     Allocated with name '_makeTcpAck2_sloc0_1_0'
                                   1272 ;sloc1                     Allocated with name '_makeTcpAck2_sloc1_1_0'
                                   1273 ;sloc2                     Allocated with name '_makeTcpAck2_sloc2_1_0'
                                   1274 ;device_mac                Allocated with name '_makeTcpAck2_device_mac_10000_125'
                                   1275 ;target_mac                Allocated with name '_makeTcpAck2_target_mac_10000_125'
                                   1276 ;device_ip                 Allocated with name '_makeTcpAck2_device_ip_10000_125'
                                   1277 ;target_ip                 Allocated with name '_makeTcpAck2_target_ip_10000_125'
                                   1278 ;totalLength1              Allocated with name '_makeTcpAck2_totalLength1_10000_125'
                                   1279 ;receivedPayloadLength     Allocated with name '_makeTcpAck2_receivedPayloadLength_10000_125'
                                   1280 ;srcPort                   Allocated with name '_makeTcpAck2_srcPort_10001_126'
                                   1281 ;dstPort                   Allocated with name '_makeTcpAck2_dstPort_10001_126'
                                   1282 ;clientSeqNum              Allocated with name '_makeTcpAck2_clientSeqNum_10002_127'
                                   1283 ;clientAckNum              Allocated with name '_makeTcpAck2_clientAckNum_10002_127'
                                   1284 ;serverSeqNum              Allocated with name '_makeTcpAck2_serverSeqNum_10002_127'
                                   1285 ;ackNum                    Allocated with name '_makeTcpAck2_ackNum_10002_127'
                                   1286 ;totalLength               Allocated with name '_makeTcpAck2_totalLength_10003_128'
                                   1287 ;------------------------------------------------------------
                                   1288 ;	trial_webserver.c:132: void makeTcpAck2() {
                                   1289 ;	-----------------------------------------
                                   1290 ;	 function makeTcpAck2
                                   1291 ;	-----------------------------------------
      0003C0                       1292 _makeTcpAck2:
                                   1293 ;	trial_webserver.c:133: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      0003C0 90r06r0C         [24] 1294 	mov	dptr,#_makeTcpAck2_device_mac_10000_125
      0003C3 74 02            [12] 1295 	mov	a,#0x02
      0003C5 F0               [24] 1296 	movx	@dptr,a
      0003C6 90r06r0D         [24] 1297 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0001)
      0003C9 74 11            [12] 1298 	mov	a,#0x11
      0003CB F0               [24] 1299 	movx	@dptr,a
      0003CC 90r06r0E         [24] 1300 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0002)
      0003CF 23               [12] 1301 	rl	a
      0003D0 F0               [24] 1302 	movx	@dptr,a
      0003D1 90r06r0F         [24] 1303 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0003)
      0003D4 74 33            [12] 1304 	mov	a,#0x33
      0003D6 F0               [24] 1305 	movx	@dptr,a
      0003D7 90r06r10         [24] 1306 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0004)
      0003DA 74 44            [12] 1307 	mov	a,#0x44
      0003DC F0               [24] 1308 	movx	@dptr,a
      0003DD 90r06r11         [24] 1309 	mov	dptr,#(_makeTcpAck2_device_mac_10000_125 + 0x0005)
      0003E0 74 55            [12] 1310 	mov	a,#0x55
      0003E2 F0               [24] 1311 	movx	@dptr,a
                                   1312 ;	trial_webserver.c:134: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      0003E3 90r06r12         [24] 1313 	mov	dptr,#_makeTcpAck2_target_mac_10000_125
      0003E6 74 F8            [12] 1314 	mov	a,#0xf8
      0003E8 F0               [24] 1315 	movx	@dptr,a
      0003E9 90r06r13         [24] 1316 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0001)
      0003EC 74 75            [12] 1317 	mov	a,#0x75
      0003EE F0               [24] 1318 	movx	@dptr,a
      0003EF 90r06r14         [24] 1319 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0002)
      0003F2 74 A4            [12] 1320 	mov	a,#0xa4
      0003F4 F0               [24] 1321 	movx	@dptr,a
      0003F5 90r06r15         [24] 1322 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0003)
      0003F8 74 8C            [12] 1323 	mov	a,#0x8c
      0003FA F0               [24] 1324 	movx	@dptr,a
      0003FB 90r06r16         [24] 1325 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0004)
      0003FE 74 41            [12] 1326 	mov	a,#0x41
      000400 F0               [24] 1327 	movx	@dptr,a
      000401 90r06r17         [24] 1328 	mov	dptr,#(_makeTcpAck2_target_mac_10000_125 + 0x0005)
      000404 74 31            [12] 1329 	mov	a,#0x31
      000406 F0               [24] 1330 	movx	@dptr,a
                                   1331 ;	trial_webserver.c:135: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000407 90r06r18         [24] 1332 	mov	dptr,#_makeTcpAck2_device_ip_10000_125
      00040A 74 C0            [12] 1333 	mov	a,#0xc0
      00040C F0               [24] 1334 	movx	@dptr,a
      00040D 90r06r19         [24] 1335 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0001)
      000410 74 A8            [12] 1336 	mov	a,#0xa8
      000412 F0               [24] 1337 	movx	@dptr,a
      000413 90r06r1A         [24] 1338 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0002)
      000416 74 01            [12] 1339 	mov	a,#0x01
      000418 F0               [24] 1340 	movx	@dptr,a
      000419 90r06r1B         [24] 1341 	mov	dptr,#(_makeTcpAck2_device_ip_10000_125 + 0x0003)
      00041C 74 64            [12] 1342 	mov	a,#0x64
      00041E F0               [24] 1343 	movx	@dptr,a
                                   1344 ;	trial_webserver.c:136: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00041F 90r06r1C         [24] 1345 	mov	dptr,#_makeTcpAck2_target_ip_10000_125
      000422 74 C0            [12] 1346 	mov	a,#0xc0
      000424 F0               [24] 1347 	movx	@dptr,a
      000425 90r06r1D         [24] 1348 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0001)
      000428 74 A8            [12] 1349 	mov	a,#0xa8
      00042A F0               [24] 1350 	movx	@dptr,a
      00042B 90r06r1E         [24] 1351 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0002)
      00042E 74 01            [12] 1352 	mov	a,#0x01
      000430 F0               [24] 1353 	movx	@dptr,a
      000431 90r06r1F         [24] 1354 	mov	dptr,#(_makeTcpAck2_target_ip_10000_125 + 0x0003)
      000434 F0               [24] 1355 	movx	@dptr,a
                                   1356 ;	trial_webserver.c:137: uint16_t totalLength1 = (buffer[16] << 8) | buffer[17]; // Total IP length
      000435 90r00r18         [24] 1357 	mov	dptr,#(_buffer + 0x0010)
      000438 E0               [24] 1358 	movx	a,@dptr
      000439 FE               [12] 1359 	mov	r6,a
      00043A 7F 00            [12] 1360 	mov	r7,#0x00
      00043C 90r00r19         [24] 1361 	mov	dptr,#(_buffer + 0x0011)
      00043F E0               [24] 1362 	movx	a,@dptr
      000440 7C 00            [12] 1363 	mov	r4,#0x00
      000442 42 07            [12] 1364 	orl	ar7,a
      000444 EC               [12] 1365 	mov	a,r4
      000445 42 06            [12] 1366 	orl	ar6,a
                                   1367 ;	trial_webserver.c:138: uint16_t receivedPayloadLength = totalLength1 - 40;
      000447 EF               [12] 1368 	mov	a,r7
      000448 24 D8            [12] 1369 	add	a,#0xd8
      00044A FF               [12] 1370 	mov	r7,a
      00044B EE               [12] 1371 	mov	a,r6
      00044C 34 FF            [12] 1372 	addc	a,#0xff
      00044E FE               [12] 1373 	mov	r6,a
      00044F 8F*06            [24] 1374 	mov	_makeTcpAck2_sloc1_1_0,r7
      000451 8E*07            [24] 1375 	mov	(_makeTcpAck2_sloc1_1_0 + 1),r6
                                   1376 ;	trial_webserver.c:139: printf("makeTcpAck\n\r");
      000453 74r10            [12] 1377 	mov	a,#___str_1
      000455 C0 E0            [24] 1378 	push	acc
      000457 74s00            [12] 1379 	mov	a,#(___str_1 >> 8)
      000459 C0 E0            [24] 1380 	push	acc
      00045B 74 80            [12] 1381 	mov	a,#0x80
      00045D C0 E0            [24] 1382 	push	acc
      00045F 12r00r00         [24] 1383 	lcall	_printf
      000462 15 81            [12] 1384 	dec	sp
      000464 15 81            [12] 1385 	dec	sp
      000466 15 81            [12] 1386 	dec	sp
                                   1387 ;	trial_webserver.c:142: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000468 90r00r00         [24] 1388 	mov	dptr,#_memmove_PARM_2
      00046B 74r08            [12] 1389 	mov	a,#_buffer
      00046D F0               [24] 1390 	movx	@dptr,a
      00046E 74s00            [12] 1391 	mov	a,#(_buffer >> 8)
      000470 A3               [24] 1392 	inc	dptr
      000471 F0               [24] 1393 	movx	@dptr,a
      000472 E4               [12] 1394 	clr	a
      000473 A3               [24] 1395 	inc	dptr
      000474 F0               [24] 1396 	movx	@dptr,a
      000475 90r00r00         [24] 1397 	mov	dptr,#_memmove_PARM_3
      000478 74 36            [12] 1398 	mov	a,#0x36
      00047A F0               [24] 1399 	movx	@dptr,a
      00047B E4               [12] 1400 	clr	a
      00047C A3               [24] 1401 	inc	dptr
      00047D F0               [24] 1402 	movx	@dptr,a
      00047E 90r00r09         [24] 1403 	mov	dptr,#(_buffer + 0x0001)
      000481 F5 F0            [12] 1404 	mov	b,a
      000483 12r00r00         [24] 1405 	lcall	_memmove
                                   1406 ;	trial_webserver.c:143: buffer[0] = 0x0E;
      000486 90r00r08         [24] 1407 	mov	dptr,#_buffer
      000489 74 0E            [12] 1408 	mov	a,#0x0e
      00048B F0               [24] 1409 	movx	@dptr,a
                                   1410 ;	trial_webserver.c:146: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      00048C 90r00r00         [24] 1411 	mov	dptr,#___memcpy_PARM_2
      00048F 74r0F            [12] 1412 	mov	a,#(_buffer + 0x0007)
      000491 F0               [24] 1413 	movx	@dptr,a
      000492 74s00            [12] 1414 	mov	a,#((_buffer + 0x0007) >> 8)
      000494 A3               [24] 1415 	inc	dptr
      000495 F0               [24] 1416 	movx	@dptr,a
      000496 E4               [12] 1417 	clr	a
      000497 A3               [24] 1418 	inc	dptr
      000498 F0               [24] 1419 	movx	@dptr,a
      000499 90r00r00         [24] 1420 	mov	dptr,#___memcpy_PARM_3
      00049C 74 06            [12] 1421 	mov	a,#0x06
      00049E F0               [24] 1422 	movx	@dptr,a
      00049F E4               [12] 1423 	clr	a
      0004A0 A3               [24] 1424 	inc	dptr
      0004A1 F0               [24] 1425 	movx	@dptr,a
      0004A2 90r00r09         [24] 1426 	mov	dptr,#(_buffer + 0x0001)
      0004A5 F5 F0            [12] 1427 	mov	b,a
      0004A7 12r00r00         [24] 1428 	lcall	___memcpy
                                   1429 ;	trial_webserver.c:147: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      0004AA 90r00r00         [24] 1430 	mov	dptr,#___memcpy_PARM_2
      0004AD 74r0C            [12] 1431 	mov	a,#_makeTcpAck2_device_mac_10000_125
      0004AF F0               [24] 1432 	movx	@dptr,a
      0004B0 74s06            [12] 1433 	mov	a,#(_makeTcpAck2_device_mac_10000_125 >> 8)
      0004B2 A3               [24] 1434 	inc	dptr
      0004B3 F0               [24] 1435 	movx	@dptr,a
      0004B4 E4               [12] 1436 	clr	a
      0004B5 A3               [24] 1437 	inc	dptr
      0004B6 F0               [24] 1438 	movx	@dptr,a
      0004B7 90r00r00         [24] 1439 	mov	dptr,#___memcpy_PARM_3
      0004BA 74 06            [12] 1440 	mov	a,#0x06
      0004BC F0               [24] 1441 	movx	@dptr,a
      0004BD E4               [12] 1442 	clr	a
      0004BE A3               [24] 1443 	inc	dptr
      0004BF F0               [24] 1444 	movx	@dptr,a
      0004C0 90r00r0F         [24] 1445 	mov	dptr,#(_buffer + 0x0007)
      0004C3 F5 F0            [12] 1446 	mov	b,a
      0004C5 12r00r00         [24] 1447 	lcall	___memcpy
                                   1448 ;	trial_webserver.c:150: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0004C8 90r00r00         [24] 1449 	mov	dptr,#___memcpy_PARM_2
      0004CB 74r23            [12] 1450 	mov	a,#(_buffer + 0x001b)
      0004CD F0               [24] 1451 	movx	@dptr,a
      0004CE 74s00            [12] 1452 	mov	a,#((_buffer + 0x001b) >> 8)
      0004D0 A3               [24] 1453 	inc	dptr
      0004D1 F0               [24] 1454 	movx	@dptr,a
      0004D2 E4               [12] 1455 	clr	a
      0004D3 A3               [24] 1456 	inc	dptr
      0004D4 F0               [24] 1457 	movx	@dptr,a
      0004D5 90r00r00         [24] 1458 	mov	dptr,#___memcpy_PARM_3
      0004D8 74 04            [12] 1459 	mov	a,#0x04
      0004DA F0               [24] 1460 	movx	@dptr,a
      0004DB E4               [12] 1461 	clr	a
      0004DC A3               [24] 1462 	inc	dptr
      0004DD F0               [24] 1463 	movx	@dptr,a
      0004DE 90r00r27         [24] 1464 	mov	dptr,#(_buffer + 0x001f)
      0004E1 F5 F0            [12] 1465 	mov	b,a
      0004E3 12r00r00         [24] 1466 	lcall	___memcpy
                                   1467 ;	trial_webserver.c:151: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      0004E6 90r00r00         [24] 1468 	mov	dptr,#___memcpy_PARM_2
      0004E9 74r18            [12] 1469 	mov	a,#_makeTcpAck2_device_ip_10000_125
      0004EB F0               [24] 1470 	movx	@dptr,a
      0004EC 74s06            [12] 1471 	mov	a,#(_makeTcpAck2_device_ip_10000_125 >> 8)
      0004EE A3               [24] 1472 	inc	dptr
      0004EF F0               [24] 1473 	movx	@dptr,a
      0004F0 E4               [12] 1474 	clr	a
      0004F1 A3               [24] 1475 	inc	dptr
      0004F2 F0               [24] 1476 	movx	@dptr,a
      0004F3 90r00r00         [24] 1477 	mov	dptr,#___memcpy_PARM_3
      0004F6 74 04            [12] 1478 	mov	a,#0x04
      0004F8 F0               [24] 1479 	movx	@dptr,a
      0004F9 E4               [12] 1480 	clr	a
      0004FA A3               [24] 1481 	inc	dptr
      0004FB F0               [24] 1482 	movx	@dptr,a
      0004FC 90r00r23         [24] 1483 	mov	dptr,#(_buffer + 0x001b)
      0004FF F5 F0            [12] 1484 	mov	b,a
      000501 12r00r00         [24] 1485 	lcall	___memcpy
                                   1486 ;	trial_webserver.c:154: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000504 90r00r2B         [24] 1487 	mov	dptr,#(_buffer + 0x0023)
      000507 E0               [24] 1488 	movx	a,@dptr
      000508 FC               [12] 1489 	mov	r4,a
      000509 7D 00            [12] 1490 	mov	r5,#0x00
      00050B 90r00r2C         [24] 1491 	mov	dptr,#(_buffer + 0x0024)
      00050E E0               [24] 1492 	movx	a,@dptr
      00050F 7A 00            [12] 1493 	mov	r2,#0x00
      000511 42 05            [12] 1494 	orl	ar5,a
      000513 EA               [12] 1495 	mov	a,r2
      000514 42 04            [12] 1496 	orl	ar4,a
                                   1497 ;	trial_webserver.c:156: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000516 90r00r2D         [24] 1498 	mov	dptr,#(_buffer + 0x0025)
      000519 E0               [24] 1499 	movx	a,@dptr
      00051A FA               [12] 1500 	mov	r2,a
      00051B 7B 00            [12] 1501 	mov	r3,#0x00
      00051D 90r00r2E         [24] 1502 	mov	dptr,#(_buffer + 0x0026)
      000520 E0               [24] 1503 	movx	a,@dptr
      000521 79 00            [12] 1504 	mov	r1,#0x00
      000523 42 03            [12] 1505 	orl	ar3,a
      000525 E9               [12] 1506 	mov	a,r1
      000526 42 02            [12] 1507 	orl	ar2,a
                                   1508 ;	trial_webserver.c:158: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000528 8A 01            [24] 1509 	mov	ar1,r2
      00052A 90r00r2B         [24] 1510 	mov	dptr,#(_buffer + 0x0023)
      00052D E9               [12] 1511 	mov	a,r1
      00052E F0               [24] 1512 	movx	@dptr,a
                                   1513 ;	trial_webserver.c:159: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      00052F 90r00r2C         [24] 1514 	mov	dptr,#(_buffer + 0x0024)
      000532 EB               [12] 1515 	mov	a,r3
      000533 F0               [24] 1516 	movx	@dptr,a
                                   1517 ;	trial_webserver.c:160: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000534 8C 03            [24] 1518 	mov	ar3,r4
      000536 90r00r2D         [24] 1519 	mov	dptr,#(_buffer + 0x0025)
      000539 EB               [12] 1520 	mov	a,r3
      00053A F0               [24] 1521 	movx	@dptr,a
                                   1522 ;	trial_webserver.c:161: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      00053B 90r00r2E         [24] 1523 	mov	dptr,#(_buffer + 0x0026)
      00053E ED               [12] 1524 	mov	a,r5
      00053F F0               [24] 1525 	movx	@dptr,a
                                   1526 ;	trial_webserver.c:164: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      000540 90r00r31         [24] 1527 	mov	dptr,#(_buffer + 0x0029)
      000543 E0               [24] 1528 	movx	a,@dptr
      000544 FC               [12] 1529 	mov	r4,a
      000545 7D 00            [12] 1530 	mov	r5,#0x00
      000547 90r00r32         [24] 1531 	mov	dptr,#(_buffer + 0x002a)
      00054A E0               [24] 1532 	movx	a,@dptr
      00054B 7A 00            [12] 1533 	mov	r2,#0x00
      00054D 42 05            [12] 1534 	orl	ar5,a
      00054F EA               [12] 1535 	mov	a,r2
      000550 42 04            [12] 1536 	orl	ar4,a
      000552 8D*08            [24] 1537 	mov	_makeTcpAck2_sloc2_1_0,r5
      000554 EC               [12] 1538 	mov	a,r4
      000555 F5*09            [12] 1539 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      000557 33               [12] 1540 	rlc	a
      000558 95 E0            [12] 1541 	subb	a,acc
      00055A F5*0A            [12] 1542 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      00055C F5*0B            [12] 1543 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1544 ;	trial_webserver.c:167: uint32_t clientAckNum = (buffer[1 + TCP_ACK_H_P] << 24)
      00055E 90r00r35         [24] 1545 	mov	dptr,#(_buffer + 0x002d)
      000561 E0               [24] 1546 	movx	a,@dptr
      000562 F8               [12] 1547 	mov	r0,a
      000563 79 00            [12] 1548 	mov	r1,#0x00
      000565 88*05            [24] 1549 	mov	(_makeTcpAck2_sloc0_1_0 + 1),r0
      000567 89*04            [24] 1550 	mov	_makeTcpAck2_sloc0_1_0,r1
      000569 90r00r36         [24] 1551 	mov	dptr,#(_buffer + 0x002e)
      00056C E0               [24] 1552 	movx	a,@dptr
      00056D F8               [12] 1553 	mov	r0,a
      00056E 79 00            [12] 1554 	mov	r1,#0x00
      000570 E5*05            [12] 1555 	mov	a,(_makeTcpAck2_sloc0_1_0 + 1)
      000572 42 01            [12] 1556 	orl	ar1,a
      000574 E9               [12] 1557 	mov	a,r1
      000575 33               [12] 1558 	rlc	a
      000576 95 E0            [12] 1559 	subb	a,acc
      000578 FE               [12] 1560 	mov	r6,a
      000579 FF               [12] 1561 	mov	r7,a
                                   1562 ;	trial_webserver.c:171: uint32_t ackNum = clientSeqNum + receivedPayloadLength - 1;
      00057A AA*06            [24] 1563 	mov	r2,_makeTcpAck2_sloc1_1_0
      00057C AB*07            [24] 1564 	mov	r3,(_makeTcpAck2_sloc1_1_0 + 1)
      00057E E4               [12] 1565 	clr	a
      00057F FC               [12] 1566 	mov	r4,a
      000580 FD               [12] 1567 	mov	r5,a
      000581 EA               [12] 1568 	mov	a,r2
      000582 25*08            [12] 1569 	add	a, _makeTcpAck2_sloc2_1_0
      000584 FA               [12] 1570 	mov	r2,a
      000585 EB               [12] 1571 	mov	a,r3
      000586 35*09            [12] 1572 	addc	a, (_makeTcpAck2_sloc2_1_0 + 1)
      000588 FB               [12] 1573 	mov	r3,a
      000589 EC               [12] 1574 	mov	a,r4
      00058A 35*0A            [12] 1575 	addc	a, (_makeTcpAck2_sloc2_1_0 + 2)
      00058C FC               [12] 1576 	mov	r4,a
      00058D ED               [12] 1577 	mov	a,r5
      00058E 35*0B            [12] 1578 	addc	a, (_makeTcpAck2_sloc2_1_0 + 3)
      000590 FD               [12] 1579 	mov	r5,a
      000591 EA               [12] 1580 	mov	a,r2
      000592 24 FF            [12] 1581 	add	a,#0xff
      000594 F5*08            [12] 1582 	mov	_makeTcpAck2_sloc2_1_0,a
      000596 EB               [12] 1583 	mov	a,r3
      000597 34 FF            [12] 1584 	addc	a,#0xff
      000599 F5*09            [12] 1585 	mov	(_makeTcpAck2_sloc2_1_0 + 1),a
      00059B EC               [12] 1586 	mov	a,r4
      00059C 34 FF            [12] 1587 	addc	a,#0xff
      00059E F5*0A            [12] 1588 	mov	(_makeTcpAck2_sloc2_1_0 + 2),a
      0005A0 ED               [12] 1589 	mov	a,r5
      0005A1 34 FF            [12] 1590 	addc	a,#0xff
      0005A3 F5*0B            [12] 1591 	mov	(_makeTcpAck2_sloc2_1_0 + 3),a
                                   1592 ;	trial_webserver.c:172: prevSeq = serverSeqNum;
      0005A5 90r00r00         [24] 1593 	mov	dptr,#_prevSeq
      0005A8 E8               [12] 1594 	mov	a,r0
      0005A9 F0               [24] 1595 	movx	@dptr,a
      0005AA E9               [12] 1596 	mov	a,r1
      0005AB A3               [24] 1597 	inc	dptr
      0005AC F0               [24] 1598 	movx	@dptr,a
      0005AD EE               [12] 1599 	mov	a,r6
      0005AE A3               [24] 1600 	inc	dptr
      0005AF F0               [24] 1601 	movx	@dptr,a
      0005B0 EF               [12] 1602 	mov	a,r7
      0005B1 A3               [24] 1603 	inc	dptr
      0005B2 F0               [24] 1604 	movx	@dptr,a
                                   1605 ;	trial_webserver.c:173: prevAck = ackNum;
      0005B3 90r00r04         [24] 1606 	mov	dptr,#_prevAck
      0005B6 E5*08            [12] 1607 	mov	a,_makeTcpAck2_sloc2_1_0
      0005B8 F0               [24] 1608 	movx	@dptr,a
      0005B9 E5*09            [12] 1609 	mov	a,(_makeTcpAck2_sloc2_1_0 + 1)
      0005BB A3               [24] 1610 	inc	dptr
      0005BC F0               [24] 1611 	movx	@dptr,a
      0005BD E5*0A            [12] 1612 	mov	a,(_makeTcpAck2_sloc2_1_0 + 2)
      0005BF A3               [24] 1613 	inc	dptr
      0005C0 F0               [24] 1614 	movx	@dptr,a
      0005C1 E5*0B            [12] 1615 	mov	a,(_makeTcpAck2_sloc2_1_0 + 3)
      0005C3 A3               [24] 1616 	inc	dptr
      0005C4 F0               [24] 1617 	movx	@dptr,a
                                   1618 ;	trial_webserver.c:176: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      0005C5 8F 05            [24] 1619 	mov	ar5,r7
      0005C7 90r00r2F         [24] 1620 	mov	dptr,#(_buffer + 0x0027)
      0005CA ED               [12] 1621 	mov	a,r5
      0005CB F0               [24] 1622 	movx	@dptr,a
                                   1623 ;	trial_webserver.c:177: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      0005CC 8E 05            [24] 1624 	mov	ar5,r6
      0005CE 90r00r30         [24] 1625 	mov	dptr,#(_buffer + 0x0028)
      0005D1 ED               [12] 1626 	mov	a,r5
      0005D2 F0               [24] 1627 	movx	@dptr,a
                                   1628 ;	trial_webserver.c:178: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      0005D3 89 05            [24] 1629 	mov	ar5,r1
      0005D5 90r00r31         [24] 1630 	mov	dptr,#(_buffer + 0x0029)
      0005D8 ED               [12] 1631 	mov	a,r5
      0005D9 F0               [24] 1632 	movx	@dptr,a
                                   1633 ;	trial_webserver.c:179: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      0005DA 90r00r32         [24] 1634 	mov	dptr,#(_buffer + 0x002a)
      0005DD E8               [12] 1635 	mov	a,r0
      0005DE F0               [24] 1636 	movx	@dptr,a
                                   1637 ;	trial_webserver.c:180: buffer[1 + TCP_ACK_H_P] = (ackNum >> 24) & 0xFF;
      0005DF AF*0B            [24] 1638 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 3)
      0005E1 90r00r33         [24] 1639 	mov	dptr,#(_buffer + 0x002b)
      0005E4 EF               [12] 1640 	mov	a,r7
      0005E5 F0               [24] 1641 	movx	@dptr,a
                                   1642 ;	trial_webserver.c:181: buffer[1 + TCP_ACK_H_P + 1] = (ackNum >> 16) & 0xFF;
      0005E6 AF*0A            [24] 1643 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 2)
      0005E8 90r00r34         [24] 1644 	mov	dptr,#(_buffer + 0x002c)
      0005EB EF               [12] 1645 	mov	a,r7
      0005EC F0               [24] 1646 	movx	@dptr,a
                                   1647 ;	trial_webserver.c:182: buffer[1 + TCP_ACK_H_P + 2] = (ackNum >> 8) & 0xFF;
      0005ED AF*09            [24] 1648 	mov	r7,(_makeTcpAck2_sloc2_1_0 + 1)
      0005EF 90r00r35         [24] 1649 	mov	dptr,#(_buffer + 0x002d)
      0005F2 EF               [12] 1650 	mov	a,r7
      0005F3 F0               [24] 1651 	movx	@dptr,a
                                   1652 ;	trial_webserver.c:183: buffer[1 + TCP_ACK_H_P + 3] = ackNum & 0xFF;
      0005F4 AA*08            [24] 1653 	mov	r2,_makeTcpAck2_sloc2_1_0
      0005F6 90r00r36         [24] 1654 	mov	dptr,#(_buffer + 0x002e)
      0005F9 EA               [12] 1655 	mov	a,r2
      0005FA F0               [24] 1656 	movx	@dptr,a
                                   1657 ;	trial_webserver.c:187: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      0005FB 90r00r19         [24] 1658 	mov	dptr,#(_buffer + 0x0011)
      0005FE E4               [12] 1659 	clr	a
      0005FF F0               [24] 1660 	movx	@dptr,a
                                   1661 ;	trial_webserver.c:188: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000600 90r00r1A         [24] 1662 	mov	dptr,#(_buffer + 0x0012)
      000603 74 28            [12] 1663 	mov	a,#0x28
      000605 F0               [24] 1664 	movx	@dptr,a
                                   1665 ;	trial_webserver.c:191: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;  // Only the ACK flag is set
      000606 90r00r38         [24] 1666 	mov	dptr,#(_buffer + 0x0030)
      000609 74 10            [12] 1667 	mov	a,#0x10
      00060B F0               [24] 1668 	movx	@dptr,a
                                   1669 ;	trial_webserver.c:192: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      00060C 90r00r39         [24] 1670 	mov	dptr,#(_buffer + 0x0031)
      00060F 74 FF            [12] 1671 	mov	a,#0xff
      000611 F0               [24] 1672 	movx	@dptr,a
                                   1673 ;	trial_webserver.c:193: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000612 90r00r3A         [24] 1674 	mov	dptr,#(_buffer + 0x0032)
      000615 F0               [24] 1675 	movx	@dptr,a
                                   1676 ;	trial_webserver.c:194: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000616 90r00r37         [24] 1677 	mov	dptr,#(_buffer + 0x002f)
      000619 74 50            [12] 1678 	mov	a,#0x50
      00061B F0               [24] 1679 	movx	@dptr,a
                                   1680 ;	trial_webserver.c:197: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      00061C 90r00r09         [24] 1681 	mov	dptr,#(_buffer + 0x0001)
      00061F 75 F0 00         [24] 1682 	mov	b, #0x00
      000622 12r00r00         [24] 1683 	lcall	_calculateIPChecksum
                                   1684 ;	trial_webserver.c:198: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000625 90r00r09         [24] 1685 	mov	dptr,#(_buffer + 0x0001)
      000628 75 F0 00         [24] 1686 	mov	b, #0x00
      00062B 12r00r00         [24] 1687 	lcall	_calculateTcpChecksum
                                   1688 ;	trial_webserver.c:202: transmit_tcp_packet(buffer, 1 + 54);
      00062E 90r00r00         [24] 1689 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000631 74 37            [12] 1690 	mov	a,#0x37
      000633 F0               [24] 1691 	movx	@dptr,a
      000634 E4               [12] 1692 	clr	a
      000635 A3               [24] 1693 	inc	dptr
      000636 F0               [24] 1694 	movx	@dptr,a
      000637 90r00r08         [24] 1695 	mov	dptr,#_buffer
      00063A F5 F0            [12] 1696 	mov	b,a
      00063C 12r00r00         [24] 1697 	lcall	_transmit_tcp_packet
                                   1698 ;	trial_webserver.c:205: connectionState = ACK_SENT;
      00063F 90r00r00         [24] 1699 	mov	dptr,#_connectionState
      000642 74 05            [12] 1700 	mov	a,#0x05
      000644 F0               [24] 1701 	movx	@dptr,a
                                   1702 ;	trial_webserver.c:206: }
      000645 22               [24] 1703 	ret
                                   1704 ;------------------------------------------------------------
                                   1705 ;Allocation info for local variables in function 'makeTcpSynAck'
                                   1706 ;------------------------------------------------------------
                                   1707 ;device_mac                Allocated with name '_makeTcpSynAck_device_mac_10000_129'
                                   1708 ;target_mac                Allocated with name '_makeTcpSynAck_target_mac_10000_129'
                                   1709 ;device_ip                 Allocated with name '_makeTcpSynAck_device_ip_10000_129'
                                   1710 ;target_ip                 Allocated with name '_makeTcpSynAck_target_ip_10000_129'
                                   1711 ;srcPort                   Allocated with name '_makeTcpSynAck_srcPort_10001_130'
                                   1712 ;dstPort                   Allocated with name '_makeTcpSynAck_dstPort_10001_130'
                                   1713 ;clientSeqNum              Allocated with name '_makeTcpSynAck_clientSeqNum_10002_131'
                                   1714 ;serverSeqNum              Allocated with name '_makeTcpSynAck_serverSeqNum_10002_131'
                                   1715 ;ackNum                    Allocated with name '_makeTcpSynAck_ackNum_10002_131'
                                   1716 ;totalLength               Allocated with name '_makeTcpSynAck_totalLength_10003_132'
                                   1717 ;------------------------------------------------------------
                                   1718 ;	trial_webserver.c:208: void makeTcpSynAck() {
                                   1719 ;	-----------------------------------------
                                   1720 ;	 function makeTcpSynAck
                                   1721 ;	-----------------------------------------
      000646                       1722 _makeTcpSynAck:
                                   1723 ;	trial_webserver.c:209: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000646 90r06r20         [24] 1724 	mov	dptr,#_makeTcpSynAck_device_mac_10000_129
      000649 74 02            [12] 1725 	mov	a,#0x02
      00064B F0               [24] 1726 	movx	@dptr,a
      00064C 90r06r21         [24] 1727 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0001)
      00064F 74 11            [12] 1728 	mov	a,#0x11
      000651 F0               [24] 1729 	movx	@dptr,a
      000652 90r06r22         [24] 1730 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0002)
      000655 23               [12] 1731 	rl	a
      000656 F0               [24] 1732 	movx	@dptr,a
      000657 90r06r23         [24] 1733 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0003)
      00065A 74 33            [12] 1734 	mov	a,#0x33
      00065C F0               [24] 1735 	movx	@dptr,a
      00065D 90r06r24         [24] 1736 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0004)
      000660 74 44            [12] 1737 	mov	a,#0x44
      000662 F0               [24] 1738 	movx	@dptr,a
      000663 90r06r25         [24] 1739 	mov	dptr,#(_makeTcpSynAck_device_mac_10000_129 + 0x0005)
      000666 74 55            [12] 1740 	mov	a,#0x55
      000668 F0               [24] 1741 	movx	@dptr,a
                                   1742 ;	trial_webserver.c:210: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      000669 90r06r26         [24] 1743 	mov	dptr,#_makeTcpSynAck_target_mac_10000_129
      00066C 74 F8            [12] 1744 	mov	a,#0xf8
      00066E F0               [24] 1745 	movx	@dptr,a
      00066F 90r06r27         [24] 1746 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0001)
      000672 74 75            [12] 1747 	mov	a,#0x75
      000674 F0               [24] 1748 	movx	@dptr,a
      000675 90r06r28         [24] 1749 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0002)
      000678 74 A4            [12] 1750 	mov	a,#0xa4
      00067A F0               [24] 1751 	movx	@dptr,a
      00067B 90r06r29         [24] 1752 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0003)
      00067E 74 8C            [12] 1753 	mov	a,#0x8c
      000680 F0               [24] 1754 	movx	@dptr,a
      000681 90r06r2A         [24] 1755 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0004)
      000684 74 41            [12] 1756 	mov	a,#0x41
      000686 F0               [24] 1757 	movx	@dptr,a
      000687 90r06r2B         [24] 1758 	mov	dptr,#(_makeTcpSynAck_target_mac_10000_129 + 0x0005)
      00068A 74 31            [12] 1759 	mov	a,#0x31
      00068C F0               [24] 1760 	movx	@dptr,a
                                   1761 ;	trial_webserver.c:211: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      00068D 90r06r2C         [24] 1762 	mov	dptr,#_makeTcpSynAck_device_ip_10000_129
      000690 74 C0            [12] 1763 	mov	a,#0xc0
      000692 F0               [24] 1764 	movx	@dptr,a
      000693 90r06r2D         [24] 1765 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0001)
      000696 74 A8            [12] 1766 	mov	a,#0xa8
      000698 F0               [24] 1767 	movx	@dptr,a
      000699 90r06r2E         [24] 1768 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0002)
      00069C 74 01            [12] 1769 	mov	a,#0x01
      00069E F0               [24] 1770 	movx	@dptr,a
      00069F 90r06r2F         [24] 1771 	mov	dptr,#(_makeTcpSynAck_device_ip_10000_129 + 0x0003)
      0006A2 74 64            [12] 1772 	mov	a,#0x64
      0006A4 F0               [24] 1773 	movx	@dptr,a
                                   1774 ;	trial_webserver.c:212: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0006A5 90r06r30         [24] 1775 	mov	dptr,#_makeTcpSynAck_target_ip_10000_129
      0006A8 74 C0            [12] 1776 	mov	a,#0xc0
      0006AA F0               [24] 1777 	movx	@dptr,a
      0006AB 90r06r31         [24] 1778 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0001)
      0006AE 74 A8            [12] 1779 	mov	a,#0xa8
      0006B0 F0               [24] 1780 	movx	@dptr,a
      0006B1 90r06r32         [24] 1781 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0002)
      0006B4 74 01            [12] 1782 	mov	a,#0x01
      0006B6 F0               [24] 1783 	movx	@dptr,a
      0006B7 90r06r33         [24] 1784 	mov	dptr,#(_makeTcpSynAck_target_ip_10000_129 + 0x0003)
      0006BA F0               [24] 1785 	movx	@dptr,a
                                   1786 ;	trial_webserver.c:213: printf("makeTcpSynAck\n\r");
      0006BB 74r1D            [12] 1787 	mov	a,#___str_2
      0006BD C0 E0            [24] 1788 	push	acc
      0006BF 74s00            [12] 1789 	mov	a,#(___str_2 >> 8)
      0006C1 C0 E0            [24] 1790 	push	acc
      0006C3 74 80            [12] 1791 	mov	a,#0x80
      0006C5 C0 E0            [24] 1792 	push	acc
      0006C7 12r00r00         [24] 1793 	lcall	_printf
      0006CA 15 81            [12] 1794 	dec	sp
      0006CC 15 81            [12] 1795 	dec	sp
      0006CE 15 81            [12] 1796 	dec	sp
                                   1797 ;	trial_webserver.c:216: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      0006D0 90r00r00         [24] 1798 	mov	dptr,#_memmove_PARM_2
      0006D3 74r08            [12] 1799 	mov	a,#_buffer
      0006D5 F0               [24] 1800 	movx	@dptr,a
      0006D6 74s00            [12] 1801 	mov	a,#(_buffer >> 8)
      0006D8 A3               [24] 1802 	inc	dptr
      0006D9 F0               [24] 1803 	movx	@dptr,a
      0006DA E4               [12] 1804 	clr	a
      0006DB A3               [24] 1805 	inc	dptr
      0006DC F0               [24] 1806 	movx	@dptr,a
      0006DD 90r00r00         [24] 1807 	mov	dptr,#_memmove_PARM_3
      0006E0 74 36            [12] 1808 	mov	a,#0x36
      0006E2 F0               [24] 1809 	movx	@dptr,a
      0006E3 E4               [12] 1810 	clr	a
      0006E4 A3               [24] 1811 	inc	dptr
      0006E5 F0               [24] 1812 	movx	@dptr,a
      0006E6 90r00r09         [24] 1813 	mov	dptr,#(_buffer + 0x0001)
      0006E9 F5 F0            [12] 1814 	mov	b,a
      0006EB 12r00r00         [24] 1815 	lcall	_memmove
                                   1816 ;	trial_webserver.c:217: buffer[0] = 0x0E;
      0006EE 90r00r08         [24] 1817 	mov	dptr,#_buffer
      0006F1 74 0E            [12] 1818 	mov	a,#0x0e
      0006F3 F0               [24] 1819 	movx	@dptr,a
                                   1820 ;	trial_webserver.c:219: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      0006F4 90r00r00         [24] 1821 	mov	dptr,#___memcpy_PARM_2
      0006F7 74r0F            [12] 1822 	mov	a,#(_buffer + 0x0007)
      0006F9 F0               [24] 1823 	movx	@dptr,a
      0006FA 74s00            [12] 1824 	mov	a,#((_buffer + 0x0007) >> 8)
      0006FC A3               [24] 1825 	inc	dptr
      0006FD F0               [24] 1826 	movx	@dptr,a
      0006FE E4               [12] 1827 	clr	a
      0006FF A3               [24] 1828 	inc	dptr
      000700 F0               [24] 1829 	movx	@dptr,a
      000701 90r00r00         [24] 1830 	mov	dptr,#___memcpy_PARM_3
      000704 74 06            [12] 1831 	mov	a,#0x06
      000706 F0               [24] 1832 	movx	@dptr,a
      000707 E4               [12] 1833 	clr	a
      000708 A3               [24] 1834 	inc	dptr
      000709 F0               [24] 1835 	movx	@dptr,a
      00070A 90r00r09         [24] 1836 	mov	dptr,#(_buffer + 0x0001)
      00070D F5 F0            [12] 1837 	mov	b,a
      00070F 12r00r00         [24] 1838 	lcall	___memcpy
                                   1839 ;	trial_webserver.c:220: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      000712 90r00r00         [24] 1840 	mov	dptr,#___memcpy_PARM_2
      000715 74r20            [12] 1841 	mov	a,#_makeTcpSynAck_device_mac_10000_129
      000717 F0               [24] 1842 	movx	@dptr,a
      000718 74s06            [12] 1843 	mov	a,#(_makeTcpSynAck_device_mac_10000_129 >> 8)
      00071A A3               [24] 1844 	inc	dptr
      00071B F0               [24] 1845 	movx	@dptr,a
      00071C E4               [12] 1846 	clr	a
      00071D A3               [24] 1847 	inc	dptr
      00071E F0               [24] 1848 	movx	@dptr,a
      00071F 90r00r00         [24] 1849 	mov	dptr,#___memcpy_PARM_3
      000722 74 06            [12] 1850 	mov	a,#0x06
      000724 F0               [24] 1851 	movx	@dptr,a
      000725 E4               [12] 1852 	clr	a
      000726 A3               [24] 1853 	inc	dptr
      000727 F0               [24] 1854 	movx	@dptr,a
      000728 90r00r0F         [24] 1855 	mov	dptr,#(_buffer + 0x0007)
      00072B F5 F0            [12] 1856 	mov	b,a
      00072D 12r00r00         [24] 1857 	lcall	___memcpy
                                   1858 ;	trial_webserver.c:223: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      000730 90r00r00         [24] 1859 	mov	dptr,#___memcpy_PARM_2
      000733 74r23            [12] 1860 	mov	a,#(_buffer + 0x001b)
      000735 F0               [24] 1861 	movx	@dptr,a
      000736 74s00            [12] 1862 	mov	a,#((_buffer + 0x001b) >> 8)
      000738 A3               [24] 1863 	inc	dptr
      000739 F0               [24] 1864 	movx	@dptr,a
      00073A E4               [12] 1865 	clr	a
      00073B A3               [24] 1866 	inc	dptr
      00073C F0               [24] 1867 	movx	@dptr,a
      00073D 90r00r00         [24] 1868 	mov	dptr,#___memcpy_PARM_3
      000740 74 04            [12] 1869 	mov	a,#0x04
      000742 F0               [24] 1870 	movx	@dptr,a
      000743 E4               [12] 1871 	clr	a
      000744 A3               [24] 1872 	inc	dptr
      000745 F0               [24] 1873 	movx	@dptr,a
      000746 90r00r27         [24] 1874 	mov	dptr,#(_buffer + 0x001f)
      000749 F5 F0            [12] 1875 	mov	b,a
      00074B 12r00r00         [24] 1876 	lcall	___memcpy
                                   1877 ;	trial_webserver.c:224: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      00074E 90r00r00         [24] 1878 	mov	dptr,#___memcpy_PARM_2
      000751 74r2C            [12] 1879 	mov	a,#_makeTcpSynAck_device_ip_10000_129
      000753 F0               [24] 1880 	movx	@dptr,a
      000754 74s06            [12] 1881 	mov	a,#(_makeTcpSynAck_device_ip_10000_129 >> 8)
      000756 A3               [24] 1882 	inc	dptr
      000757 F0               [24] 1883 	movx	@dptr,a
      000758 E4               [12] 1884 	clr	a
      000759 A3               [24] 1885 	inc	dptr
      00075A F0               [24] 1886 	movx	@dptr,a
      00075B 90r00r00         [24] 1887 	mov	dptr,#___memcpy_PARM_3
      00075E 74 04            [12] 1888 	mov	a,#0x04
      000760 F0               [24] 1889 	movx	@dptr,a
      000761 E4               [12] 1890 	clr	a
      000762 A3               [24] 1891 	inc	dptr
      000763 F0               [24] 1892 	movx	@dptr,a
      000764 90r00r23         [24] 1893 	mov	dptr,#(_buffer + 0x001b)
      000767 F5 F0            [12] 1894 	mov	b,a
      000769 12r00r00         [24] 1895 	lcall	___memcpy
                                   1896 ;	trial_webserver.c:227: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      00076C 90r00r2B         [24] 1897 	mov	dptr,#(_buffer + 0x0023)
      00076F E0               [24] 1898 	movx	a,@dptr
      000770 FE               [12] 1899 	mov	r6,a
      000771 7F 00            [12] 1900 	mov	r7,#0x00
      000773 90r00r2C         [24] 1901 	mov	dptr,#(_buffer + 0x0024)
      000776 E0               [24] 1902 	movx	a,@dptr
      000777 7C 00            [12] 1903 	mov	r4,#0x00
      000779 42 07            [12] 1904 	orl	ar7,a
      00077B EC               [12] 1905 	mov	a,r4
      00077C 42 06            [12] 1906 	orl	ar6,a
                                   1907 ;	trial_webserver.c:229: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      00077E 90r00r2D         [24] 1908 	mov	dptr,#(_buffer + 0x0025)
      000781 E0               [24] 1909 	movx	a,@dptr
      000782 FC               [12] 1910 	mov	r4,a
      000783 7D 00            [12] 1911 	mov	r5,#0x00
      000785 90r00r2E         [24] 1912 	mov	dptr,#(_buffer + 0x0026)
      000788 E0               [24] 1913 	movx	a,@dptr
      000789 7A 00            [12] 1914 	mov	r2,#0x00
      00078B 42 05            [12] 1915 	orl	ar5,a
      00078D EA               [12] 1916 	mov	a,r2
      00078E 42 04            [12] 1917 	orl	ar4,a
                                   1918 ;	trial_webserver.c:231: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000790 8C 03            [24] 1919 	mov	ar3,r4
      000792 90r00r2B         [24] 1920 	mov	dptr,#(_buffer + 0x0023)
      000795 EB               [12] 1921 	mov	a,r3
      000796 F0               [24] 1922 	movx	@dptr,a
                                   1923 ;	trial_webserver.c:232: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000797 90r00r2C         [24] 1924 	mov	dptr,#(_buffer + 0x0024)
      00079A ED               [12] 1925 	mov	a,r5
      00079B F0               [24] 1926 	movx	@dptr,a
                                   1927 ;	trial_webserver.c:233: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      00079C 8E 05            [24] 1928 	mov	ar5,r6
      00079E 90r00r2D         [24] 1929 	mov	dptr,#(_buffer + 0x0025)
      0007A1 ED               [12] 1930 	mov	a,r5
      0007A2 F0               [24] 1931 	movx	@dptr,a
                                   1932 ;	trial_webserver.c:234: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      0007A3 90r00r2E         [24] 1933 	mov	dptr,#(_buffer + 0x0026)
      0007A6 EF               [12] 1934 	mov	a,r7
      0007A7 F0               [24] 1935 	movx	@dptr,a
                                   1936 ;	trial_webserver.c:237: uint32_t clientSeqNum = (buffer[1 + TCP_SEQ_H_P] << 24)
      0007A8 90r00r31         [24] 1937 	mov	dptr,#(_buffer + 0x0029)
      0007AB E0               [24] 1938 	movx	a,@dptr
      0007AC FE               [12] 1939 	mov	r6,a
      0007AD 7F 00            [12] 1940 	mov	r7,#0x00
      0007AF 90r00r32         [24] 1941 	mov	dptr,#(_buffer + 0x002a)
      0007B2 E0               [24] 1942 	movx	a,@dptr
      0007B3 7C 00            [12] 1943 	mov	r4,#0x00
      0007B5 42 07            [12] 1944 	orl	ar7,a
      0007B7 EC               [12] 1945 	mov	a,r4
      0007B8 42 06            [12] 1946 	orl	ar6,a
      0007BA EE               [12] 1947 	mov	a,r6
      0007BB 33               [12] 1948 	rlc	a
      0007BC 95 E0            [12] 1949 	subb	a,acc
      0007BE FD               [12] 1950 	mov	r5,a
      0007BF FC               [12] 1951 	mov	r4,a
                                   1952 ;	trial_webserver.c:241: uint32_t ackNum = clientSeqNum + 1;
      0007C0 0F               [12] 1953 	inc	r7
      0007C1 BF 00 09         [24] 1954 	cjne	r7,#0x00,00103$
      0007C4 0E               [12] 1955 	inc	r6
      0007C5 BE 00 05         [24] 1956 	cjne	r6,#0x00,00103$
      0007C8 0D               [12] 1957 	inc	r5
      0007C9 BD 00 01         [24] 1958 	cjne	r5,#0x00,00103$
      0007CC 0C               [12] 1959 	inc	r4
      0007CD                       1960 00103$:
                                   1961 ;	trial_webserver.c:243: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      0007CD 90r00r2F         [24] 1962 	mov	dptr,#(_buffer + 0x0027)
      0007D0 E4               [12] 1963 	clr	a
      0007D1 F0               [24] 1964 	movx	@dptr,a
                                   1965 ;	trial_webserver.c:244: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      0007D2 90r00r30         [24] 1966 	mov	dptr,#(_buffer + 0x0028)
      0007D5 F0               [24] 1967 	movx	@dptr,a
                                   1968 ;	trial_webserver.c:245: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      0007D6 90r00r31         [24] 1969 	mov	dptr,#(_buffer + 0x0029)
      0007D9 74 03            [12] 1970 	mov	a,#0x03
      0007DB F0               [24] 1971 	movx	@dptr,a
                                   1972 ;	trial_webserver.c:246: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      0007DC 90r00r32         [24] 1973 	mov	dptr,#(_buffer + 0x002a)
      0007DF 74 E8            [12] 1974 	mov	a,#0xe8
      0007E1 F0               [24] 1975 	movx	@dptr,a
                                   1976 ;	trial_webserver.c:247: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      0007E2 8C 03            [24] 1977 	mov	ar3,r4
      0007E4 90r00r33         [24] 1978 	mov	dptr,#(_buffer + 0x002b)
      0007E7 EB               [12] 1979 	mov	a,r3
      0007E8 F0               [24] 1980 	movx	@dptr,a
                                   1981 ;	trial_webserver.c:248: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      0007E9 8D 03            [24] 1982 	mov	ar3,r5
      0007EB 90r00r34         [24] 1983 	mov	dptr,#(_buffer + 0x002c)
      0007EE EB               [12] 1984 	mov	a,r3
      0007EF F0               [24] 1985 	movx	@dptr,a
                                   1986 ;	trial_webserver.c:249: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      0007F0 8E 03            [24] 1987 	mov	ar3,r6
      0007F2 90r00r35         [24] 1988 	mov	dptr,#(_buffer + 0x002d)
      0007F5 EB               [12] 1989 	mov	a,r3
      0007F6 F0               [24] 1990 	movx	@dptr,a
                                   1991 ;	trial_webserver.c:250: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      0007F7 90r00r36         [24] 1992 	mov	dptr,#(_buffer + 0x002e)
      0007FA EF               [12] 1993 	mov	a,r7
      0007FB F0               [24] 1994 	movx	@dptr,a
                                   1995 ;	trial_webserver.c:254: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      0007FC 90r00r19         [24] 1996 	mov	dptr,#(_buffer + 0x0011)
      0007FF E4               [12] 1997 	clr	a
      000800 F0               [24] 1998 	movx	@dptr,a
                                   1999 ;	trial_webserver.c:255: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000801 90r00r1A         [24] 2000 	mov	dptr,#(_buffer + 0x0012)
      000804 74 28            [12] 2001 	mov	a,#0x28
      000806 F0               [24] 2002 	movx	@dptr,a
                                   2003 ;	trial_webserver.c:258: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_SYN | TCP_FLAG_ACK;
      000807 90r00r38         [24] 2004 	mov	dptr,#(_buffer + 0x0030)
      00080A 74 12            [12] 2005 	mov	a,#0x12
      00080C F0               [24] 2006 	movx	@dptr,a
                                   2007 ;	trial_webserver.c:259: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF; // Maximum window size
      00080D 90r00r39         [24] 2008 	mov	dptr,#(_buffer + 0x0031)
      000810 74 FF            [12] 2009 	mov	a,#0xff
      000812 F0               [24] 2010 	movx	@dptr,a
                                   2011 ;	trial_webserver.c:260: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000813 90r00r3A         [24] 2012 	mov	dptr,#(_buffer + 0x0032)
      000816 F0               [24] 2013 	movx	@dptr,a
                                   2014 ;	trial_webserver.c:261: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000817 90r00r37         [24] 2015 	mov	dptr,#(_buffer + 0x002f)
      00081A 74 50            [12] 2016 	mov	a,#0x50
      00081C F0               [24] 2017 	movx	@dptr,a
                                   2018 ;	trial_webserver.c:264: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      00081D 90r00r09         [24] 2019 	mov	dptr,#(_buffer + 0x0001)
      000820 75 F0 00         [24] 2020 	mov	b, #0x00
      000823 12r00r00         [24] 2021 	lcall	_calculateIPChecksum
                                   2022 ;	trial_webserver.c:265: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000826 90r00r09         [24] 2023 	mov	dptr,#(_buffer + 0x0001)
      000829 75 F0 00         [24] 2024 	mov	b, #0x00
      00082C 12r00r00         [24] 2025 	lcall	_calculateTcpChecksum
                                   2026 ;	trial_webserver.c:269: transmit_tcp_packet(buffer, 1 + 54);
      00082F 90r00r00         [24] 2027 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000832 74 37            [12] 2028 	mov	a,#0x37
      000834 F0               [24] 2029 	movx	@dptr,a
      000835 E4               [12] 2030 	clr	a
      000836 A3               [24] 2031 	inc	dptr
      000837 F0               [24] 2032 	movx	@dptr,a
      000838 90r00r08         [24] 2033 	mov	dptr,#_buffer
      00083B F5 F0            [12] 2034 	mov	b,a
      00083D 12r00r00         [24] 2035 	lcall	_transmit_tcp_packet
                                   2036 ;	trial_webserver.c:272: connectionState = SYN_RECEIVED;
      000840 90r00r00         [24] 2037 	mov	dptr,#_connectionState
      000843 74 01            [12] 2038 	mov	a,#0x01
      000845 F0               [24] 2039 	movx	@dptr,a
                                   2040 ;	trial_webserver.c:273: }
      000846 22               [24] 2041 	ret
                                   2042 ;------------------------------------------------------------
                                   2043 ;Allocation info for local variables in function 'makeTcpAck'
                                   2044 ;------------------------------------------------------------
                                   2045 ;device_mac                Allocated with name '_makeTcpAck_device_mac_10000_133'
                                   2046 ;target_mac                Allocated with name '_makeTcpAck_target_mac_10000_133'
                                   2047 ;device_ip                 Allocated with name '_makeTcpAck_device_ip_10000_133'
                                   2048 ;target_ip                 Allocated with name '_makeTcpAck_target_ip_10000_133'
                                   2049 ;------------------------------------------------------------
                                   2050 ;	trial_webserver.c:276: void makeTcpAck() {
                                   2051 ;	-----------------------------------------
                                   2052 ;	 function makeTcpAck
                                   2053 ;	-----------------------------------------
      000847                       2054 _makeTcpAck:
                                   2055 ;	trial_webserver.c:277: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      000847 90r06r34         [24] 2056 	mov	dptr,#_makeTcpAck_device_mac_10000_133
      00084A 74 02            [12] 2057 	mov	a,#0x02
      00084C F0               [24] 2058 	movx	@dptr,a
      00084D 90r06r35         [24] 2059 	mov	dptr,#(_makeTcpAck_device_mac_10000_133 + 0x0001)
      000850 74 11            [12] 2060 	mov	a,#0x11
      000852 F0               [24] 2061 	movx	@dptr,a
      000853 90r06r36         [24] 2062 	mov	dptr,#(_makeTcpAck_device_mac_10000_133 + 0x0002)
      000856 23               [12] 2063 	rl	a
      000857 F0               [24] 2064 	movx	@dptr,a
      000858 90r06r37         [24] 2065 	mov	dptr,#(_makeTcpAck_device_mac_10000_133 + 0x0003)
      00085B 74 33            [12] 2066 	mov	a,#0x33
      00085D F0               [24] 2067 	movx	@dptr,a
      00085E 90r06r38         [24] 2068 	mov	dptr,#(_makeTcpAck_device_mac_10000_133 + 0x0004)
      000861 74 44            [12] 2069 	mov	a,#0x44
      000863 F0               [24] 2070 	movx	@dptr,a
      000864 90r06r39         [24] 2071 	mov	dptr,#(_makeTcpAck_device_mac_10000_133 + 0x0005)
      000867 74 55            [12] 2072 	mov	a,#0x55
      000869 F0               [24] 2073 	movx	@dptr,a
                                   2074 ;	trial_webserver.c:278: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      00086A 90r06r3A         [24] 2075 	mov	dptr,#_makeTcpAck_target_mac_10000_133
      00086D 74 F8            [12] 2076 	mov	a,#0xf8
      00086F F0               [24] 2077 	movx	@dptr,a
      000870 90r06r3B         [24] 2078 	mov	dptr,#(_makeTcpAck_target_mac_10000_133 + 0x0001)
      000873 74 75            [12] 2079 	mov	a,#0x75
      000875 F0               [24] 2080 	movx	@dptr,a
      000876 90r06r3C         [24] 2081 	mov	dptr,#(_makeTcpAck_target_mac_10000_133 + 0x0002)
      000879 74 A4            [12] 2082 	mov	a,#0xa4
      00087B F0               [24] 2083 	movx	@dptr,a
      00087C 90r06r3D         [24] 2084 	mov	dptr,#(_makeTcpAck_target_mac_10000_133 + 0x0003)
      00087F 74 8C            [12] 2085 	mov	a,#0x8c
      000881 F0               [24] 2086 	movx	@dptr,a
      000882 90r06r3E         [24] 2087 	mov	dptr,#(_makeTcpAck_target_mac_10000_133 + 0x0004)
      000885 74 41            [12] 2088 	mov	a,#0x41
      000887 F0               [24] 2089 	movx	@dptr,a
      000888 90r06r3F         [24] 2090 	mov	dptr,#(_makeTcpAck_target_mac_10000_133 + 0x0005)
      00088B 74 31            [12] 2091 	mov	a,#0x31
      00088D F0               [24] 2092 	movx	@dptr,a
                                   2093 ;	trial_webserver.c:279: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      00088E 90r06r40         [24] 2094 	mov	dptr,#_makeTcpAck_device_ip_10000_133
      000891 74 C0            [12] 2095 	mov	a,#0xc0
      000893 F0               [24] 2096 	movx	@dptr,a
      000894 90r06r41         [24] 2097 	mov	dptr,#(_makeTcpAck_device_ip_10000_133 + 0x0001)
      000897 74 A8            [12] 2098 	mov	a,#0xa8
      000899 F0               [24] 2099 	movx	@dptr,a
      00089A 90r06r42         [24] 2100 	mov	dptr,#(_makeTcpAck_device_ip_10000_133 + 0x0002)
      00089D 74 01            [12] 2101 	mov	a,#0x01
      00089F F0               [24] 2102 	movx	@dptr,a
      0008A0 90r06r43         [24] 2103 	mov	dptr,#(_makeTcpAck_device_ip_10000_133 + 0x0003)
      0008A3 74 64            [12] 2104 	mov	a,#0x64
      0008A5 F0               [24] 2105 	movx	@dptr,a
                                   2106 ;	trial_webserver.c:280: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      0008A6 90r06r44         [24] 2107 	mov	dptr,#_makeTcpAck_target_ip_10000_133
      0008A9 74 C0            [12] 2108 	mov	a,#0xc0
      0008AB F0               [24] 2109 	movx	@dptr,a
      0008AC 90r06r45         [24] 2110 	mov	dptr,#(_makeTcpAck_target_ip_10000_133 + 0x0001)
      0008AF 74 A8            [12] 2111 	mov	a,#0xa8
      0008B1 F0               [24] 2112 	movx	@dptr,a
      0008B2 90r06r46         [24] 2113 	mov	dptr,#(_makeTcpAck_target_ip_10000_133 + 0x0002)
      0008B5 74 01            [12] 2114 	mov	a,#0x01
      0008B7 F0               [24] 2115 	movx	@dptr,a
      0008B8 90r06r47         [24] 2116 	mov	dptr,#(_makeTcpAck_target_ip_10000_133 + 0x0003)
      0008BB F0               [24] 2117 	movx	@dptr,a
                                   2118 ;	trial_webserver.c:281: printf("tcpack\n\r");
      0008BC 74r2D            [12] 2119 	mov	a,#___str_3
      0008BE C0 E0            [24] 2120 	push	acc
      0008C0 74s00            [12] 2121 	mov	a,#(___str_3 >> 8)
      0008C2 C0 E0            [24] 2122 	push	acc
      0008C4 74 80            [12] 2123 	mov	a,#0x80
      0008C6 C0 E0            [24] 2124 	push	acc
      0008C8 12r00r00         [24] 2125 	lcall	_printf
      0008CB 15 81            [12] 2126 	dec	sp
      0008CD 15 81            [12] 2127 	dec	sp
      0008CF 15 81            [12] 2128 	dec	sp
                                   2129 ;	trial_webserver.c:282: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      0008D1 90r00r00         [24] 2130 	mov	dptr,#_memmove_PARM_2
      0008D4 74r08            [12] 2131 	mov	a,#_buffer
      0008D6 F0               [24] 2132 	movx	@dptr,a
      0008D7 74s00            [12] 2133 	mov	a,#(_buffer >> 8)
      0008D9 A3               [24] 2134 	inc	dptr
      0008DA F0               [24] 2135 	movx	@dptr,a
      0008DB E4               [12] 2136 	clr	a
      0008DC A3               [24] 2137 	inc	dptr
      0008DD F0               [24] 2138 	movx	@dptr,a
      0008DE 90r00r00         [24] 2139 	mov	dptr,#_memmove_PARM_3
      0008E1 74 36            [12] 2140 	mov	a,#0x36
      0008E3 F0               [24] 2141 	movx	@dptr,a
      0008E4 E4               [12] 2142 	clr	a
      0008E5 A3               [24] 2143 	inc	dptr
      0008E6 F0               [24] 2144 	movx	@dptr,a
      0008E7 90r00r09         [24] 2145 	mov	dptr,#(_buffer + 0x0001)
      0008EA F5 F0            [12] 2146 	mov	b,a
      0008EC 12r00r00         [24] 2147 	lcall	_memmove
                                   2148 ;	trial_webserver.c:285: buffer[0] = 0x0E;
      0008EF 90r00r08         [24] 2149 	mov	dptr,#_buffer
      0008F2 74 0E            [12] 2150 	mov	a,#0x0e
      0008F4 F0               [24] 2151 	movx	@dptr,a
                                   2152 ;	trial_webserver.c:286: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_ACK;
      0008F5 90r00r38         [24] 2153 	mov	dptr,#(_buffer + 0x0030)
      0008F8 74 10            [12] 2154 	mov	a,#0x10
      0008FA F0               [24] 2155 	movx	@dptr,a
                                   2156 ;	trial_webserver.c:287: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P);
      0008FB 90r00r00         [24] 2157 	mov	dptr,#_transmit_tcp_packet_PARM_2
      0008FE 74 37            [12] 2158 	mov	a,#0x37
      000900 F0               [24] 2159 	movx	@dptr,a
      000901 E4               [12] 2160 	clr	a
      000902 A3               [24] 2161 	inc	dptr
      000903 F0               [24] 2162 	movx	@dptr,a
      000904 90r00r08         [24] 2163 	mov	dptr,#_buffer
      000907 F5 F0            [12] 2164 	mov	b,a
                                   2165 ;	trial_webserver.c:288: }
      000909 02r00r00         [24] 2166 	ljmp	_transmit_tcp_packet
                                   2167 ;------------------------------------------------------------
                                   2168 ;Allocation info for local variables in function 'makeTcpFinPshAck'
                                   2169 ;------------------------------------------------------------
                                   2170 ;device_mac                Allocated with name '_makeTcpFinPshAck_device_mac_10000_134'
                                   2171 ;target_mac                Allocated with name '_makeTcpFinPshAck_target_mac_10000_134'
                                   2172 ;device_ip                 Allocated with name '_makeTcpFinPshAck_device_ip_10000_134'
                                   2173 ;target_ip                 Allocated with name '_makeTcpFinPshAck_target_ip_10000_134'
                                   2174 ;srcPort                   Allocated with name '_makeTcpFinPshAck_srcPort_10001_135'
                                   2175 ;dstPort                   Allocated with name '_makeTcpFinPshAck_dstPort_10001_135'
                                   2176 ;serverSeqNum              Allocated with name '_makeTcpFinPshAck_serverSeqNum_10002_136'
                                   2177 ;ackNum                    Allocated with name '_makeTcpFinPshAck_ackNum_10002_136'
                                   2178 ;html_payload              Allocated with name '_makeTcpFinPshAck_html_payload_10003_137'
                                   2179 ;dataLength                Allocated with name '_makeTcpFinPshAck_dataLength_10003_137'
                                   2180 ;totalLength               Allocated with name '_makeTcpFinPshAck_totalLength_10003_137'
                                   2181 ;------------------------------------------------------------
                                   2182 ;	trial_webserver.c:290: void makeTcpFinPshAck() {
                                   2183 ;	-----------------------------------------
                                   2184 ;	 function makeTcpFinPshAck
                                   2185 ;	-----------------------------------------
      00090C                       2186 _makeTcpFinPshAck:
                                   2187 ;	trial_webserver.c:291: uint8_t device_mac[6] = { 0x02, 0x11, 0x22, 0x33, 0x44, 0x55 }; // Default MAC
      00090C 90r06r48         [24] 2188 	mov	dptr,#_makeTcpFinPshAck_device_mac_10000_134
      00090F 74 02            [12] 2189 	mov	a,#0x02
      000911 F0               [24] 2190 	movx	@dptr,a
      000912 90r06r49         [24] 2191 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_134 + 0x0001)
      000915 74 11            [12] 2192 	mov	a,#0x11
      000917 F0               [24] 2193 	movx	@dptr,a
      000918 90r06r4A         [24] 2194 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_134 + 0x0002)
      00091B 23               [12] 2195 	rl	a
      00091C F0               [24] 2196 	movx	@dptr,a
      00091D 90r06r4B         [24] 2197 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_134 + 0x0003)
      000920 74 33            [12] 2198 	mov	a,#0x33
      000922 F0               [24] 2199 	movx	@dptr,a
      000923 90r06r4C         [24] 2200 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_134 + 0x0004)
      000926 74 44            [12] 2201 	mov	a,#0x44
      000928 F0               [24] 2202 	movx	@dptr,a
      000929 90r06r4D         [24] 2203 	mov	dptr,#(_makeTcpFinPshAck_device_mac_10000_134 + 0x0005)
      00092C 74 55            [12] 2204 	mov	a,#0x55
      00092E F0               [24] 2205 	movx	@dptr,a
                                   2206 ;	trial_webserver.c:292: uint8_t target_mac[6] = { 0xF8, 0x75, 0xA4, 0x8C, 0x41, 0x31 }; // Default MAC
      00092F 90r06r4E         [24] 2207 	mov	dptr,#_makeTcpFinPshAck_target_mac_10000_134
      000932 74 F8            [12] 2208 	mov	a,#0xf8
      000934 F0               [24] 2209 	movx	@dptr,a
      000935 90r06r4F         [24] 2210 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_134 + 0x0001)
      000938 74 75            [12] 2211 	mov	a,#0x75
      00093A F0               [24] 2212 	movx	@dptr,a
      00093B 90r06r50         [24] 2213 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_134 + 0x0002)
      00093E 74 A4            [12] 2214 	mov	a,#0xa4
      000940 F0               [24] 2215 	movx	@dptr,a
      000941 90r06r51         [24] 2216 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_134 + 0x0003)
      000944 74 8C            [12] 2217 	mov	a,#0x8c
      000946 F0               [24] 2218 	movx	@dptr,a
      000947 90r06r52         [24] 2219 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_134 + 0x0004)
      00094A 74 41            [12] 2220 	mov	a,#0x41
      00094C F0               [24] 2221 	movx	@dptr,a
      00094D 90r06r53         [24] 2222 	mov	dptr,#(_makeTcpFinPshAck_target_mac_10000_134 + 0x0005)
      000950 74 31            [12] 2223 	mov	a,#0x31
      000952 F0               [24] 2224 	movx	@dptr,a
                                   2225 ;	trial_webserver.c:293: uint8_t device_ip[4] = { 192, 168, 1, 100 }; // Default IP Address
      000953 90r06r54         [24] 2226 	mov	dptr,#_makeTcpFinPshAck_device_ip_10000_134
      000956 74 C0            [12] 2227 	mov	a,#0xc0
      000958 F0               [24] 2228 	movx	@dptr,a
      000959 90r06r55         [24] 2229 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_134 + 0x0001)
      00095C 74 A8            [12] 2230 	mov	a,#0xa8
      00095E F0               [24] 2231 	movx	@dptr,a
      00095F 90r06r56         [24] 2232 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_134 + 0x0002)
      000962 74 01            [12] 2233 	mov	a,#0x01
      000964 F0               [24] 2234 	movx	@dptr,a
      000965 90r06r57         [24] 2235 	mov	dptr,#(_makeTcpFinPshAck_device_ip_10000_134 + 0x0003)
      000968 74 64            [12] 2236 	mov	a,#0x64
      00096A F0               [24] 2237 	movx	@dptr,a
                                   2238 ;	trial_webserver.c:294: uint8_t target_ip[4] = { 192, 168, 1, 1 };
      00096B 90r06r58         [24] 2239 	mov	dptr,#_makeTcpFinPshAck_target_ip_10000_134
      00096E 74 C0            [12] 2240 	mov	a,#0xc0
      000970 F0               [24] 2241 	movx	@dptr,a
      000971 90r06r59         [24] 2242 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_134 + 0x0001)
      000974 74 A8            [12] 2243 	mov	a,#0xa8
      000976 F0               [24] 2244 	movx	@dptr,a
      000977 90r06r5A         [24] 2245 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_134 + 0x0002)
      00097A 74 01            [12] 2246 	mov	a,#0x01
      00097C F0               [24] 2247 	movx	@dptr,a
      00097D 90r06r5B         [24] 2248 	mov	dptr,#(_makeTcpFinPshAck_target_ip_10000_134 + 0x0003)
      000980 F0               [24] 2249 	movx	@dptr,a
                                   2250 ;	trial_webserver.c:295: printf("makeTcpFinPshAck\n\r");
      000981 74rB1            [12] 2251 	mov	a,#___str_5
      000983 C0 E0            [24] 2252 	push	acc
      000985 74s03            [12] 2253 	mov	a,#(___str_5 >> 8)
      000987 C0 E0            [24] 2254 	push	acc
      000989 74 80            [12] 2255 	mov	a,#0x80
      00098B C0 E0            [24] 2256 	push	acc
      00098D 12r00r00         [24] 2257 	lcall	_printf
      000990 15 81            [12] 2258 	dec	sp
      000992 15 81            [12] 2259 	dec	sp
      000994 15 81            [12] 2260 	dec	sp
                                   2261 ;	trial_webserver.c:298: memmove(&buffer[1], &buffer[0], TCP_DATA_START_P);
      000996 90r00r00         [24] 2262 	mov	dptr,#_memmove_PARM_2
      000999 74r08            [12] 2263 	mov	a,#_buffer
      00099B F0               [24] 2264 	movx	@dptr,a
      00099C 74s00            [12] 2265 	mov	a,#(_buffer >> 8)
      00099E A3               [24] 2266 	inc	dptr
      00099F F0               [24] 2267 	movx	@dptr,a
      0009A0 E4               [12] 2268 	clr	a
      0009A1 A3               [24] 2269 	inc	dptr
      0009A2 F0               [24] 2270 	movx	@dptr,a
      0009A3 90r00r00         [24] 2271 	mov	dptr,#_memmove_PARM_3
      0009A6 74 36            [12] 2272 	mov	a,#0x36
      0009A8 F0               [24] 2273 	movx	@dptr,a
      0009A9 E4               [12] 2274 	clr	a
      0009AA A3               [24] 2275 	inc	dptr
      0009AB F0               [24] 2276 	movx	@dptr,a
      0009AC 90r00r09         [24] 2277 	mov	dptr,#(_buffer + 0x0001)
      0009AF F5 F0            [12] 2278 	mov	b,a
      0009B1 12r00r00         [24] 2279 	lcall	_memmove
                                   2280 ;	trial_webserver.c:299: buffer[0] = 0x0E;
      0009B4 90r00r08         [24] 2281 	mov	dptr,#_buffer
      0009B7 74 0E            [12] 2282 	mov	a,#0x0e
      0009B9 F0               [24] 2283 	movx	@dptr,a
                                   2284 ;	trial_webserver.c:302: memcpy(&buffer[1 + ETH_DST_MAC], &buffer[1 + ETH_SRC_MAC], 6);
      0009BA 90r00r00         [24] 2285 	mov	dptr,#___memcpy_PARM_2
      0009BD 74r0F            [12] 2286 	mov	a,#(_buffer + 0x0007)
      0009BF F0               [24] 2287 	movx	@dptr,a
      0009C0 74s00            [12] 2288 	mov	a,#((_buffer + 0x0007) >> 8)
      0009C2 A3               [24] 2289 	inc	dptr
      0009C3 F0               [24] 2290 	movx	@dptr,a
      0009C4 E4               [12] 2291 	clr	a
      0009C5 A3               [24] 2292 	inc	dptr
      0009C6 F0               [24] 2293 	movx	@dptr,a
      0009C7 90r00r00         [24] 2294 	mov	dptr,#___memcpy_PARM_3
      0009CA 74 06            [12] 2295 	mov	a,#0x06
      0009CC F0               [24] 2296 	movx	@dptr,a
      0009CD E4               [12] 2297 	clr	a
      0009CE A3               [24] 2298 	inc	dptr
      0009CF F0               [24] 2299 	movx	@dptr,a
      0009D0 90r00r09         [24] 2300 	mov	dptr,#(_buffer + 0x0001)
      0009D3 F5 F0            [12] 2301 	mov	b,a
      0009D5 12r00r00         [24] 2302 	lcall	___memcpy
                                   2303 ;	trial_webserver.c:303: memcpy(&buffer[1 + ETH_SRC_MAC], device_mac, 6);
      0009D8 90r00r00         [24] 2304 	mov	dptr,#___memcpy_PARM_2
      0009DB 74r48            [12] 2305 	mov	a,#_makeTcpFinPshAck_device_mac_10000_134
      0009DD F0               [24] 2306 	movx	@dptr,a
      0009DE 74s06            [12] 2307 	mov	a,#(_makeTcpFinPshAck_device_mac_10000_134 >> 8)
      0009E0 A3               [24] 2308 	inc	dptr
      0009E1 F0               [24] 2309 	movx	@dptr,a
      0009E2 E4               [12] 2310 	clr	a
      0009E3 A3               [24] 2311 	inc	dptr
      0009E4 F0               [24] 2312 	movx	@dptr,a
      0009E5 90r00r00         [24] 2313 	mov	dptr,#___memcpy_PARM_3
      0009E8 74 06            [12] 2314 	mov	a,#0x06
      0009EA F0               [24] 2315 	movx	@dptr,a
      0009EB E4               [12] 2316 	clr	a
      0009EC A3               [24] 2317 	inc	dptr
      0009ED F0               [24] 2318 	movx	@dptr,a
      0009EE 90r00r0F         [24] 2319 	mov	dptr,#(_buffer + 0x0007)
      0009F1 F5 F0            [12] 2320 	mov	b,a
      0009F3 12r00r00         [24] 2321 	lcall	___memcpy
                                   2322 ;	trial_webserver.c:306: memcpy(&buffer[1 + IP_DST_P], &buffer[1 + IP_SRC_P], 4);
      0009F6 90r00r00         [24] 2323 	mov	dptr,#___memcpy_PARM_2
      0009F9 74r23            [12] 2324 	mov	a,#(_buffer + 0x001b)
      0009FB F0               [24] 2325 	movx	@dptr,a
      0009FC 74s00            [12] 2326 	mov	a,#((_buffer + 0x001b) >> 8)
      0009FE A3               [24] 2327 	inc	dptr
      0009FF F0               [24] 2328 	movx	@dptr,a
      000A00 E4               [12] 2329 	clr	a
      000A01 A3               [24] 2330 	inc	dptr
      000A02 F0               [24] 2331 	movx	@dptr,a
      000A03 90r00r00         [24] 2332 	mov	dptr,#___memcpy_PARM_3
      000A06 74 04            [12] 2333 	mov	a,#0x04
      000A08 F0               [24] 2334 	movx	@dptr,a
      000A09 E4               [12] 2335 	clr	a
      000A0A A3               [24] 2336 	inc	dptr
      000A0B F0               [24] 2337 	movx	@dptr,a
      000A0C 90r00r27         [24] 2338 	mov	dptr,#(_buffer + 0x001f)
      000A0F F5 F0            [12] 2339 	mov	b,a
      000A11 12r00r00         [24] 2340 	lcall	___memcpy
                                   2341 ;	trial_webserver.c:307: memcpy(&buffer[1 + IP_SRC_P], device_ip, 4);
      000A14 90r00r00         [24] 2342 	mov	dptr,#___memcpy_PARM_2
      000A17 74r54            [12] 2343 	mov	a,#_makeTcpFinPshAck_device_ip_10000_134
      000A19 F0               [24] 2344 	movx	@dptr,a
      000A1A 74s06            [12] 2345 	mov	a,#(_makeTcpFinPshAck_device_ip_10000_134 >> 8)
      000A1C A3               [24] 2346 	inc	dptr
      000A1D F0               [24] 2347 	movx	@dptr,a
      000A1E E4               [12] 2348 	clr	a
      000A1F A3               [24] 2349 	inc	dptr
      000A20 F0               [24] 2350 	movx	@dptr,a
      000A21 90r00r00         [24] 2351 	mov	dptr,#___memcpy_PARM_3
      000A24 74 04            [12] 2352 	mov	a,#0x04
      000A26 F0               [24] 2353 	movx	@dptr,a
      000A27 E4               [12] 2354 	clr	a
      000A28 A3               [24] 2355 	inc	dptr
      000A29 F0               [24] 2356 	movx	@dptr,a
      000A2A 90r00r23         [24] 2357 	mov	dptr,#(_buffer + 0x001b)
      000A2D F5 F0            [12] 2358 	mov	b,a
      000A2F 12r00r00         [24] 2359 	lcall	___memcpy
                                   2360 ;	trial_webserver.c:310: uint16_t srcPort = (buffer[1 + TCP_SRC_PORT_H_P] << 8)
      000A32 90r00r2B         [24] 2361 	mov	dptr,#(_buffer + 0x0023)
      000A35 E0               [24] 2362 	movx	a,@dptr
      000A36 FE               [12] 2363 	mov	r6,a
      000A37 7F 00            [12] 2364 	mov	r7,#0x00
      000A39 90r00r2C         [24] 2365 	mov	dptr,#(_buffer + 0x0024)
      000A3C E0               [24] 2366 	movx	a,@dptr
      000A3D 7C 00            [12] 2367 	mov	r4,#0x00
      000A3F 42 07            [12] 2368 	orl	ar7,a
      000A41 EC               [12] 2369 	mov	a,r4
      000A42 42 06            [12] 2370 	orl	ar6,a
                                   2371 ;	trial_webserver.c:312: uint16_t dstPort = (buffer[1 + TCP_DST_PORT_H_P] << 8)
      000A44 90r00r2D         [24] 2372 	mov	dptr,#(_buffer + 0x0025)
      000A47 E0               [24] 2373 	movx	a,@dptr
      000A48 FC               [12] 2374 	mov	r4,a
      000A49 7D 00            [12] 2375 	mov	r5,#0x00
      000A4B 90r00r2E         [24] 2376 	mov	dptr,#(_buffer + 0x0026)
      000A4E E0               [24] 2377 	movx	a,@dptr
      000A4F 7A 00            [12] 2378 	mov	r2,#0x00
      000A51 42 05            [12] 2379 	orl	ar5,a
      000A53 EA               [12] 2380 	mov	a,r2
      000A54 42 04            [12] 2381 	orl	ar4,a
                                   2382 ;	trial_webserver.c:314: buffer[1 + TCP_SRC_PORT_H_P] = dstPort >> 8;
      000A56 8C 03            [24] 2383 	mov	ar3,r4
      000A58 90r00r2B         [24] 2384 	mov	dptr,#(_buffer + 0x0023)
      000A5B EB               [12] 2385 	mov	a,r3
      000A5C F0               [24] 2386 	movx	@dptr,a
                                   2387 ;	trial_webserver.c:315: buffer[1 + TCP_SRC_PORT_L_P] = dstPort & 0xFF;
      000A5D 90r00r2C         [24] 2388 	mov	dptr,#(_buffer + 0x0024)
      000A60 ED               [12] 2389 	mov	a,r5
      000A61 F0               [24] 2390 	movx	@dptr,a
                                   2391 ;	trial_webserver.c:316: buffer[1 + TCP_DST_PORT_H_P] = srcPort >> 8;
      000A62 8E 05            [24] 2392 	mov	ar5,r6
      000A64 90r00r2D         [24] 2393 	mov	dptr,#(_buffer + 0x0025)
      000A67 ED               [12] 2394 	mov	a,r5
      000A68 F0               [24] 2395 	movx	@dptr,a
                                   2396 ;	trial_webserver.c:317: buffer[1 + TCP_DST_PORT_L_P] = srcPort & 0xFF;
      000A69 90r00r2E         [24] 2397 	mov	dptr,#(_buffer + 0x0026)
      000A6C EF               [12] 2398 	mov	a,r7
      000A6D F0               [24] 2399 	movx	@dptr,a
                                   2400 ;	trial_webserver.c:320: uint32_t serverSeqNum = prevSeq;
      000A6E 90r00r00         [24] 2401 	mov	dptr,#_prevSeq
      000A71 E0               [24] 2402 	movx	a,@dptr
      000A72 FC               [12] 2403 	mov	r4,a
      000A73 A3               [24] 2404 	inc	dptr
      000A74 E0               [24] 2405 	movx	a,@dptr
      000A75 FD               [12] 2406 	mov	r5,a
      000A76 A3               [24] 2407 	inc	dptr
      000A77 E0               [24] 2408 	movx	a,@dptr
      000A78 FE               [12] 2409 	mov	r6,a
      000A79 A3               [24] 2410 	inc	dptr
      000A7A E0               [24] 2411 	movx	a,@dptr
      000A7B FF               [12] 2412 	mov	r7,a
      000A7C 90r06r5C         [24] 2413 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_136
      000A7F EC               [12] 2414 	mov	a,r4
      000A80 F0               [24] 2415 	movx	@dptr,a
      000A81 ED               [12] 2416 	mov	a,r5
      000A82 A3               [24] 2417 	inc	dptr
      000A83 F0               [24] 2418 	movx	@dptr,a
      000A84 EE               [12] 2419 	mov	a,r6
      000A85 A3               [24] 2420 	inc	dptr
      000A86 F0               [24] 2421 	movx	@dptr,a
      000A87 EF               [12] 2422 	mov	a,r7
      000A88 A3               [24] 2423 	inc	dptr
      000A89 F0               [24] 2424 	movx	@dptr,a
                                   2425 ;	trial_webserver.c:321: uint32_t ackNum = prevAck;
      000A8A 90r00r04         [24] 2426 	mov	dptr,#_prevAck
      000A8D E0               [24] 2427 	movx	a,@dptr
      000A8E F8               [12] 2428 	mov	r0,a
      000A8F A3               [24] 2429 	inc	dptr
      000A90 E0               [24] 2430 	movx	a,@dptr
      000A91 F9               [12] 2431 	mov	r1,a
      000A92 A3               [24] 2432 	inc	dptr
      000A93 E0               [24] 2433 	movx	a,@dptr
      000A94 FA               [12] 2434 	mov	r2,a
      000A95 A3               [24] 2435 	inc	dptr
      000A96 E0               [24] 2436 	movx	a,@dptr
      000A97 FB               [12] 2437 	mov	r3,a
      000A98 90r06r60         [24] 2438 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_136
      000A9B E8               [12] 2439 	mov	a,r0
      000A9C F0               [24] 2440 	movx	@dptr,a
      000A9D E9               [12] 2441 	mov	a,r1
      000A9E A3               [24] 2442 	inc	dptr
      000A9F F0               [24] 2443 	movx	@dptr,a
      000AA0 EA               [12] 2444 	mov	a,r2
      000AA1 A3               [24] 2445 	inc	dptr
      000AA2 F0               [24] 2446 	movx	@dptr,a
      000AA3 EB               [12] 2447 	mov	a,r3
      000AA4 A3               [24] 2448 	inc	dptr
      000AA5 F0               [24] 2449 	movx	@dptr,a
                                   2450 ;	trial_webserver.c:323: buffer[1 + TCP_SEQ_H_P] = (serverSeqNum >> 24) & 0xFF;
      000AA6 8F 04            [24] 2451 	mov	ar4,r7
      000AA8 90r00r2F         [24] 2452 	mov	dptr,#(_buffer + 0x0027)
      000AAB EC               [12] 2453 	mov	a,r4
      000AAC F0               [24] 2454 	movx	@dptr,a
                                   2455 ;	trial_webserver.c:324: buffer[1 + TCP_SEQ_H_P + 1] = (serverSeqNum >> 16) & 0xFF;
      000AAD 90r06r5C         [24] 2456 	mov	dptr,#_makeTcpFinPshAck_serverSeqNum_10002_136
      000AB0 E0               [24] 2457 	movx	a,@dptr
      000AB1 FC               [12] 2458 	mov	r4,a
      000AB2 A3               [24] 2459 	inc	dptr
      000AB3 E0               [24] 2460 	movx	a,@dptr
      000AB4 FD               [12] 2461 	mov	r5,a
      000AB5 A3               [24] 2462 	inc	dptr
      000AB6 E0               [24] 2463 	movx	a,@dptr
      000AB7 FE               [12] 2464 	mov	r6,a
      000AB8 A3               [24] 2465 	inc	dptr
      000AB9 E0               [24] 2466 	movx	a,@dptr
      000ABA 8E 03            [24] 2467 	mov	ar3,r6
      000ABC 90r00r30         [24] 2468 	mov	dptr,#(_buffer + 0x0028)
      000ABF EB               [12] 2469 	mov	a,r3
      000AC0 F0               [24] 2470 	movx	@dptr,a
                                   2471 ;	trial_webserver.c:325: buffer[1 + TCP_SEQ_H_P + 2] = (serverSeqNum >> 8) & 0xFF;
      000AC1 8D 03            [24] 2472 	mov	ar3,r5
      000AC3 90r00r31         [24] 2473 	mov	dptr,#(_buffer + 0x0029)
      000AC6 EB               [12] 2474 	mov	a,r3
      000AC7 F0               [24] 2475 	movx	@dptr,a
                                   2476 ;	trial_webserver.c:326: buffer[1 + TCP_SEQ_H_P + 3] = serverSeqNum & 0xFF;
      000AC8 90r00r32         [24] 2477 	mov	dptr,#(_buffer + 0x002a)
      000ACB EC               [12] 2478 	mov	a,r4
      000ACC F0               [24] 2479 	movx	@dptr,a
                                   2480 ;	trial_webserver.c:327: buffer[1 + TCP_SEQ_H_P + 4] = (ackNum >> 24) & 0xFF;
      000ACD 90r06r60         [24] 2481 	mov	dptr,#_makeTcpFinPshAck_ackNum_10002_136
      000AD0 E0               [24] 2482 	movx	a,@dptr
      000AD1 FC               [12] 2483 	mov	r4,a
      000AD2 A3               [24] 2484 	inc	dptr
      000AD3 E0               [24] 2485 	movx	a,@dptr
      000AD4 FD               [12] 2486 	mov	r5,a
      000AD5 A3               [24] 2487 	inc	dptr
      000AD6 E0               [24] 2488 	movx	a,@dptr
      000AD7 FE               [12] 2489 	mov	r6,a
      000AD8 A3               [24] 2490 	inc	dptr
      000AD9 E0               [24] 2491 	movx	a,@dptr
      000ADA 90r00r33         [24] 2492 	mov	dptr,#(_buffer + 0x002b)
      000ADD F0               [24] 2493 	movx	@dptr,a
                                   2494 ;	trial_webserver.c:328: buffer[1 + TCP_SEQ_H_P + 5] = (ackNum >> 16) & 0xFF;
      000ADE 8E 03            [24] 2495 	mov	ar3,r6
      000AE0 90r00r34         [24] 2496 	mov	dptr,#(_buffer + 0x002c)
      000AE3 EB               [12] 2497 	mov	a,r3
      000AE4 F0               [24] 2498 	movx	@dptr,a
                                   2499 ;	trial_webserver.c:329: buffer[1 + TCP_SEQ_H_P + 6] = (ackNum >> 8) & 0xFF;
      000AE5 8D 03            [24] 2500 	mov	ar3,r5
      000AE7 90r00r35         [24] 2501 	mov	dptr,#(_buffer + 0x002d)
      000AEA EB               [12] 2502 	mov	a,r3
      000AEB F0               [24] 2503 	movx	@dptr,a
                                   2504 ;	trial_webserver.c:330: buffer[1 + TCP_SEQ_H_P + 7] = ackNum & 0xFF;
      000AEC 90r00r36         [24] 2505 	mov	dptr,#(_buffer + 0x002e)
      000AEF EC               [12] 2506 	mov	a,r4
      000AF0 F0               [24] 2507 	movx	@dptr,a
                                   2508 ;	trial_webserver.c:333: const char *html_payload =
                                   2509 ;	trial_webserver.c:356: uint16_t dataLength = strlen(html_payload);
      000AF1 90r00r36         [24] 2510 	mov	dptr,#___str_4
      000AF4 75 F0 80         [24] 2511 	mov	b, #0x80
      000AF7 12r00r00         [24] 2512 	lcall	_strlen
      000AFA AE 82            [24] 2513 	mov	r6, dpl
      000AFC AF 83            [24] 2514 	mov	r7, dph
                                   2515 ;	trial_webserver.c:359: uint16_t totalLength = IP_HEADER_LEN + TCP_HEADER_LEN + dataLength;
      000AFE 74 28            [12] 2516 	mov	a,#0x28
      000B00 2E               [12] 2517 	add	a, r6
      000B01 FC               [12] 2518 	mov	r4,a
      000B02 E4               [12] 2519 	clr	a
      000B03 3F               [12] 2520 	addc	a, r7
                                   2521 ;	trial_webserver.c:360: buffer[1 + IP_TOTLEN_H_P] = (totalLength >> 8) & 0xFF;
      000B04 90r00r19         [24] 2522 	mov	dptr,#(_buffer + 0x0011)
      000B07 F0               [24] 2523 	movx	@dptr,a
                                   2524 ;	trial_webserver.c:361: buffer[1 + IP_TOTLEN_L_P] = totalLength & 0xFF;
      000B08 90r00r1A         [24] 2525 	mov	dptr,#(_buffer + 0x0012)
      000B0B EC               [12] 2526 	mov	a,r4
      000B0C F0               [24] 2527 	movx	@dptr,a
                                   2528 ;	trial_webserver.c:364: buffer[1 + TCP_FLAGS_P] = TCP_FLAG_FIN | TCP_FLAG_PUSH | TCP_FLAG_ACK;
      000B0D 90r00r38         [24] 2529 	mov	dptr,#(_buffer + 0x0030)
      000B10 74 19            [12] 2530 	mov	a,#0x19
      000B12 F0               [24] 2531 	movx	@dptr,a
                                   2532 ;	trial_webserver.c:365: buffer[1 + TCP_WIN_SIZE_H_P] = 0xFF;
      000B13 90r00r39         [24] 2533 	mov	dptr,#(_buffer + 0x0031)
      000B16 74 FF            [12] 2534 	mov	a,#0xff
      000B18 F0               [24] 2535 	movx	@dptr,a
                                   2536 ;	trial_webserver.c:366: buffer[1 + TCP_WIN_SIZE_L_P] = 0xFF;
      000B19 90r00r3A         [24] 2537 	mov	dptr,#(_buffer + 0x0032)
      000B1C F0               [24] 2538 	movx	@dptr,a
                                   2539 ;	trial_webserver.c:367: buffer[1 + TCP_HEADER_LEN_P] = 0x50; // 20 bytes (5 words)
      000B1D 90r00r37         [24] 2540 	mov	dptr,#(_buffer + 0x002f)
      000B20 74 50            [12] 2541 	mov	a,#0x50
      000B22 F0               [24] 2542 	movx	@dptr,a
                                   2543 ;	trial_webserver.c:370: memcpy(&buffer[1 + TCP_DATA_START_P], html_payload, dataLength);
      000B23 90r00r00         [24] 2544 	mov	dptr,#___memcpy_PARM_2
      000B26 74r36            [12] 2545 	mov	a,#___str_4
      000B28 F0               [24] 2546 	movx	@dptr,a
      000B29 74s00            [12] 2547 	mov	a,#(___str_4 >> 8)
      000B2B A3               [24] 2548 	inc	dptr
      000B2C F0               [24] 2549 	movx	@dptr,a
      000B2D 74 80            [12] 2550 	mov	a,#0x80
      000B2F A3               [24] 2551 	inc	dptr
      000B30 F0               [24] 2552 	movx	@dptr,a
      000B31 90r00r00         [24] 2553 	mov	dptr,#___memcpy_PARM_3
      000B34 EE               [12] 2554 	mov	a,r6
      000B35 F0               [24] 2555 	movx	@dptr,a
      000B36 EF               [12] 2556 	mov	a,r7
      000B37 A3               [24] 2557 	inc	dptr
      000B38 F0               [24] 2558 	movx	@dptr,a
      000B39 90r00r3F         [24] 2559 	mov	dptr,#(_buffer + 0x0037)
      000B3C 75 F0 00         [24] 2560 	mov	b, #0x00
      000B3F C0 07            [24] 2561 	push	ar7
      000B41 C0 06            [24] 2562 	push	ar6
      000B43 12r00r00         [24] 2563 	lcall	___memcpy
                                   2564 ;	trial_webserver.c:373: calculateIPChecksum(&buffer[1]); // Pass the buffer to calculate the IP checksum
      000B46 90r00r09         [24] 2565 	mov	dptr,#(_buffer + 0x0001)
      000B49 75 F0 00         [24] 2566 	mov	b, #0x00
      000B4C 12r00r00         [24] 2567 	lcall	_calculateIPChecksum
                                   2568 ;	trial_webserver.c:374: calculateTcpChecksum(&buffer[1]); // Pass the buffer to calculate the TCP checksum
      000B4F 90r00r09         [24] 2569 	mov	dptr,#(_buffer + 0x0001)
      000B52 75 F0 00         [24] 2570 	mov	b, #0x00
      000B55 12r00r00         [24] 2571 	lcall	_calculateTcpChecksum
      000B58 D0 06            [24] 2572 	pop	ar6
      000B5A D0 07            [24] 2573 	pop	ar7
                                   2574 ;	trial_webserver.c:377: transmit_tcp_packet(buffer, 1 + TCP_DATA_START_P + dataLength);
      000B5C 74 37            [12] 2575 	mov	a,#0x37
      000B5E 2E               [12] 2576 	add	a, r6
      000B5F FE               [12] 2577 	mov	r6,a
      000B60 E4               [12] 2578 	clr	a
      000B61 3F               [12] 2579 	addc	a, r7
      000B62 FF               [12] 2580 	mov	r7,a
      000B63 90r00r00         [24] 2581 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000B66 EE               [12] 2582 	mov	a,r6
      000B67 F0               [24] 2583 	movx	@dptr,a
      000B68 EF               [12] 2584 	mov	a,r7
      000B69 A3               [24] 2585 	inc	dptr
      000B6A F0               [24] 2586 	movx	@dptr,a
      000B6B 90r00r08         [24] 2587 	mov	dptr,#_buffer
      000B6E 75 F0 00         [24] 2588 	mov	b, #0x00
      000B71 12r00r00         [24] 2589 	lcall	_transmit_tcp_packet
                                   2590 ;	trial_webserver.c:380: connectionState = FIN_WAIT;
      000B74 90r00r00         [24] 2591 	mov	dptr,#_connectionState
      000B77 74 03            [12] 2592 	mov	a,#0x03
      000B79 F0               [24] 2593 	movx	@dptr,a
                                   2594 ;	trial_webserver.c:381: }
      000B7A 22               [24] 2595 	ret
                                   2596 ;------------------------------------------------------------
                                   2597 ;Allocation info for local variables in function 'packetReceive'
                                   2598 ;------------------------------------------------------------
                                   2599 ;gNextPacketPtr            Allocated with name '_packetReceive_gNextPacketPtr_10000_138'
                                   2600 ;unreleasedPacket          Allocated with name '_packetReceive_unreleasedPacket_10000_138'
                                   2601 ;len                       Allocated with name '_packetReceive_len_10000_138'
                                   2602 ;RX_END                    Allocated with name '_packetReceive_RX_END_30000_140'
                                   2603 ;EPKTCNT                   Allocated with name '_packetReceive_EPKTCNT_10001_142'
                                   2604 ;header                    Allocated with name '_packetReceive_header_20002_144'
                                   2605 ;start                     Allocated with name '_packetReceive_start_20003_145'
                                   2606 ;ECON2                     Allocated with name '_packetReceive_ECON2_20004_146'
                                   2607 ;------------------------------------------------------------
                                   2608 ;	trial_webserver.c:386: uint16_t packetReceive()
                                   2609 ;	-----------------------------------------
                                   2610 ;	 function packetReceive
                                   2611 ;	-----------------------------------------
      000B7B                       2612 _packetReceive:
                                   2613 ;	trial_webserver.c:390: uint16_t len = 0;
      000B7B 90r06r67         [24] 2614 	mov	dptr,#_packetReceive_len_10000_138
      000B7E E4               [12] 2615 	clr	a
      000B7F F0               [24] 2616 	movx	@dptr,a
      000B80 A3               [24] 2617 	inc	dptr
      000B81 F0               [24] 2618 	movx	@dptr,a
                                   2619 ;	trial_webserver.c:393: if (unreleasedPacket) {
      000B82 90r06r66         [24] 2620 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      000B85 E0               [24] 2621 	movx	a,@dptr
      000B86 60 70            [24] 2622 	jz	00105$
                                   2623 ;	trial_webserver.c:394: if (gNextPacketPtr == 0) {
      000B88 90r06r64         [24] 2624 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000B8B E0               [24] 2625 	movx	a,@dptr
      000B8C FE               [12] 2626 	mov	r6,a
      000B8D A3               [24] 2627 	inc	dptr
      000B8E E0               [24] 2628 	movx	a,@dptr
      000B8F 90r06r64         [24] 2629 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000B92 E0               [24] 2630 	movx	a,@dptr
      000B93 F5 F0            [12] 2631 	mov	b,a
      000B95 A3               [24] 2632 	inc	dptr
      000B96 E0               [24] 2633 	movx	a,@dptr
      000B97 45 F0            [12] 2634 	orl	a,b
      000B99 70 26            [24] 2635 	jnz	00102$
                                   2636 ;	trial_webserver.c:396: spi_control_write(0, 0x0C, (uint8_t) (RX_END & 0xFF)); // Low byte
      000B9B 90r00r00         [24] 2637 	mov	dptr,#_spi_control_write_PARM_2
      000B9E 74 0C            [12] 2638 	mov	a,#0x0c
      000BA0 F0               [24] 2639 	movx	@dptr,a
      000BA1 90r00r00         [24] 2640 	mov	dptr,#_spi_control_write_PARM_3
      000BA4 74 FF            [12] 2641 	mov	a,#0xff
      000BA6 F0               [24] 2642 	movx	@dptr,a
      000BA7 75 82 00         [24] 2643 	mov	dpl, #0x00
      000BAA 12r00r00         [24] 2644 	lcall	_spi_control_write
                                   2645 ;	trial_webserver.c:397: spi_control_write(0, 0x0D, (uint8_t) ((RX_END >> 8) & 0xFF)); // High byte
      000BAD 90r00r00         [24] 2646 	mov	dptr,#_spi_control_write_PARM_2
      000BB0 74 0D            [12] 2647 	mov	a,#0x0d
      000BB2 F0               [24] 2648 	movx	@dptr,a
      000BB3 90r00r00         [24] 2649 	mov	dptr,#_spi_control_write_PARM_3
      000BB6 74 0B            [12] 2650 	mov	a,#0x0b
      000BB8 F0               [24] 2651 	movx	@dptr,a
      000BB9 75 82 00         [24] 2652 	mov	dpl, #0x00
      000BBC 12r00r00         [24] 2653 	lcall	_spi_control_write
      000BBF 80 32            [24] 2654 	sjmp	00103$
      000BC1                       2655 00102$:
                                   2656 ;	trial_webserver.c:399: spi_control_write(0, 0x0C, (uint8_t) ((gNextPacketPtr - 1) & 0xFF)); // Low byte
      000BC1 1E               [12] 2657 	dec	r6
      000BC2 90r00r00         [24] 2658 	mov	dptr,#_spi_control_write_PARM_2
      000BC5 74 0C            [12] 2659 	mov	a,#0x0c
      000BC7 F0               [24] 2660 	movx	@dptr,a
      000BC8 90r00r00         [24] 2661 	mov	dptr,#_spi_control_write_PARM_3
      000BCB EE               [12] 2662 	mov	a,r6
      000BCC F0               [24] 2663 	movx	@dptr,a
      000BCD 75 82 00         [24] 2664 	mov	dpl, #0x00
      000BD0 12r00r00         [24] 2665 	lcall	_spi_control_write
                                   2666 ;	trial_webserver.c:401: (uint8_t) (((gNextPacketPtr - 1) >> 8) & 0xFF)); // High byte
      000BD3 90r06r64         [24] 2667 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000BD6 E0               [24] 2668 	movx	a,@dptr
      000BD7 FE               [12] 2669 	mov	r6,a
      000BD8 A3               [24] 2670 	inc	dptr
      000BD9 E0               [24] 2671 	movx	a,@dptr
      000BDA FF               [12] 2672 	mov	r7,a
      000BDB 1E               [12] 2673 	dec	r6
      000BDC BE FF 01         [24] 2674 	cjne	r6,#0xff,00147$
      000BDF 1F               [12] 2675 	dec	r7
      000BE0                       2676 00147$:
      000BE0 8F 06            [24] 2677 	mov	ar6,r7
      000BE2 90r00r00         [24] 2678 	mov	dptr,#_spi_control_write_PARM_2
      000BE5 74 0D            [12] 2679 	mov	a,#0x0d
      000BE7 F0               [24] 2680 	movx	@dptr,a
      000BE8 90r00r00         [24] 2681 	mov	dptr,#_spi_control_write_PARM_3
      000BEB EE               [12] 2682 	mov	a,r6
      000BEC F0               [24] 2683 	movx	@dptr,a
      000BED 75 82 00         [24] 2684 	mov	dpl, #0x00
      000BF0 12r00r00         [24] 2685 	lcall	_spi_control_write
      000BF3                       2686 00103$:
                                   2687 ;	trial_webserver.c:403: unreleasedPacket = false;
      000BF3 90r06r66         [24] 2688 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      000BF6 E4               [12] 2689 	clr	a
      000BF7 F0               [24] 2690 	movx	@dptr,a
      000BF8                       2691 00105$:
                                   2692 ;	trial_webserver.c:406: uint8_t EPKTCNT = eth_spi_read(0x19, 1);
      000BF8 90r00r00         [24] 2693 	mov	dptr,#_eth_spi_read_PARM_2
      000BFB 74 01            [12] 2694 	mov	a,#0x01
      000BFD F0               [24] 2695 	movx	@dptr,a
      000BFE 75 82 19         [24] 2696 	mov	dpl, #0x19
      000C01 12r00r00         [24] 2697 	lcall	_eth_spi_read
      000C04 E5 82            [12] 2698 	mov	a, dpl
                                   2699 ;	trial_webserver.c:407: if (EPKTCNT > 0) {
      000C06 70 03            [24] 2700 	jnz	00148$
      000C08 02r0Dr29         [24] 2701 	ljmp	00112$
      000C0B                       2702 00148$:
                                   2703 ;	trial_webserver.c:408: spi_control_write(0, 0x00, (uint8_t) (gNextPacketPtr & 0xFF)); // Low byte
      000C0B 90r06r64         [24] 2704 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000C0E E0               [24] 2705 	movx	a,@dptr
      000C0F FE               [12] 2706 	mov	r6,a
      000C10 A3               [24] 2707 	inc	dptr
      000C11 E0               [24] 2708 	movx	a,@dptr
      000C12 90r00r00         [24] 2709 	mov	dptr,#_spi_control_write_PARM_2
      000C15 E4               [12] 2710 	clr	a
      000C16 F0               [24] 2711 	movx	@dptr,a
      000C17 90r00r00         [24] 2712 	mov	dptr,#_spi_control_write_PARM_3
      000C1A EE               [12] 2713 	mov	a,r6
      000C1B F0               [24] 2714 	movx	@dptr,a
      000C1C 75 82 00         [24] 2715 	mov	dpl, #0x00
      000C1F 12r00r00         [24] 2716 	lcall	_spi_control_write
                                   2717 ;	trial_webserver.c:409: spi_control_write(0, 0x01, (uint8_t) ((gNextPacketPtr >> 8) & 0xFF)); // High byte
      000C22 90r06r64         [24] 2718 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000C25 E0               [24] 2719 	movx	a,@dptr
      000C26 A3               [24] 2720 	inc	dptr
      000C27 E0               [24] 2721 	movx	a,@dptr
      000C28 FE               [12] 2722 	mov	r6,a
      000C29 90r00r00         [24] 2723 	mov	dptr,#_spi_control_write_PARM_2
      000C2C 74 01            [12] 2724 	mov	a,#0x01
      000C2E F0               [24] 2725 	movx	@dptr,a
      000C2F 90r00r00         [24] 2726 	mov	dptr,#_spi_control_write_PARM_3
      000C32 EE               [12] 2727 	mov	a,r6
      000C33 F0               [24] 2728 	movx	@dptr,a
      000C34 75 82 00         [24] 2729 	mov	dpl, #0x00
      000C37 12r00r00         [24] 2730 	lcall	_spi_control_write
                                   2731 ;	trial_webserver.c:418: spi_buffer_read(sizeof(PacketHeader), gNextPacketPtr,
      000C3A 90r06r64         [24] 2732 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000C3D E0               [24] 2733 	movx	a,@dptr
      000C3E FE               [12] 2734 	mov	r6,a
      000C3F A3               [24] 2735 	inc	dptr
      000C40 E0               [24] 2736 	movx	a,@dptr
      000C41 FF               [12] 2737 	mov	r7,a
                                   2738 ;	trial_webserver.c:419: (uint8_t*) &header);
      000C42 90r00r00         [24] 2739 	mov	dptr,#_spi_buffer_read_PARM_2
      000C45 EE               [12] 2740 	mov	a,r6
      000C46 F0               [24] 2741 	movx	@dptr,a
      000C47 EF               [12] 2742 	mov	a,r7
      000C48 A3               [24] 2743 	inc	dptr
      000C49 F0               [24] 2744 	movx	@dptr,a
      000C4A 90r00r00         [24] 2745 	mov	dptr,#_spi_buffer_read_PARM_3
      000C4D 74r69            [12] 2746 	mov	a,#_packetReceive_header_20002_144
      000C4F F0               [24] 2747 	movx	@dptr,a
      000C50 74s06            [12] 2748 	mov	a,#(_packetReceive_header_20002_144 >> 8)
      000C52 A3               [24] 2749 	inc	dptr
      000C53 F0               [24] 2750 	movx	@dptr,a
      000C54 E4               [12] 2751 	clr	a
      000C55 A3               [24] 2752 	inc	dptr
      000C56 F0               [24] 2753 	movx	@dptr,a
      000C57 90 00 06         [24] 2754 	mov	dptr,#0x0006
      000C5A 12r00r00         [24] 2755 	lcall	_spi_buffer_read
                                   2756 ;	trial_webserver.c:421: uint16_t start = gNextPacketPtr + sizeof(PacketHeader);
      000C5D 90r06r64         [24] 2757 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000C60 E0               [24] 2758 	movx	a,@dptr
      000C61 FE               [12] 2759 	mov	r6,a
      000C62 A3               [24] 2760 	inc	dptr
      000C63 E0               [24] 2761 	movx	a,@dptr
      000C64 FF               [12] 2762 	mov	r7,a
      000C65 74 06            [12] 2763 	mov	a,#0x06
      000C67 2E               [12] 2764 	add	a, r6
      000C68 FE               [12] 2765 	mov	r6,a
      000C69 E4               [12] 2766 	clr	a
      000C6A 3F               [12] 2767 	addc	a, r7
      000C6B FF               [12] 2768 	mov	r7,a
      000C6C 90r06r6F         [24] 2769 	mov	dptr,#_packetReceive_start_20003_145
      000C6F EE               [12] 2770 	mov	a,r6
      000C70 F0               [24] 2771 	movx	@dptr,a
      000C71 EF               [12] 2772 	mov	a,r7
      000C72 A3               [24] 2773 	inc	dptr
      000C73 F0               [24] 2774 	movx	@dptr,a
                                   2775 ;	trial_webserver.c:422: gNextPacketPtr = header.nextPacket;
      000C74 90r06r69         [24] 2776 	mov	dptr,#_packetReceive_header_20002_144
      000C77 E0               [24] 2777 	movx	a,@dptr
      000C78 FE               [12] 2778 	mov	r6,a
      000C79 A3               [24] 2779 	inc	dptr
      000C7A E0               [24] 2780 	movx	a,@dptr
      000C7B FF               [12] 2781 	mov	r7,a
      000C7C 90r06r64         [24] 2782 	mov	dptr,#_packetReceive_gNextPacketPtr_10000_138
      000C7F EE               [12] 2783 	mov	a,r6
      000C80 F0               [24] 2784 	movx	@dptr,a
      000C81 EF               [12] 2785 	mov	a,r7
      000C82 A3               [24] 2786 	inc	dptr
      000C83 F0               [24] 2787 	movx	@dptr,a
                                   2788 ;	trial_webserver.c:424: len = header.byteCount - 4; // Exclude CRC
      000C84 90r06r6B         [24] 2789 	mov	dptr,#(_packetReceive_header_20002_144 + 0x0002)
      000C87 E0               [24] 2790 	movx	a,@dptr
      000C88 FE               [12] 2791 	mov	r6,a
      000C89 A3               [24] 2792 	inc	dptr
      000C8A E0               [24] 2793 	movx	a,@dptr
      000C8B FF               [12] 2794 	mov	r7,a
      000C8C EE               [12] 2795 	mov	a,r6
      000C8D 24 FC            [12] 2796 	add	a,#0xfc
      000C8F FE               [12] 2797 	mov	r6,a
      000C90 EF               [12] 2798 	mov	a,r7
      000C91 34 FF            [12] 2799 	addc	a,#0xff
      000C93 FF               [12] 2800 	mov	r7,a
      000C94 90r06r67         [24] 2801 	mov	dptr,#_packetReceive_len_10000_138
      000C97 EE               [12] 2802 	mov	a,r6
      000C98 F0               [24] 2803 	movx	@dptr,a
      000C99 EF               [12] 2804 	mov	a,r7
      000C9A A3               [24] 2805 	inc	dptr
      000C9B F0               [24] 2806 	movx	@dptr,a
                                   2807 ;	trial_webserver.c:425: if (len > BUFFER_SIZE - 1)
      000C9C C3               [12] 2808 	clr	c
      000C9D 74 DB            [12] 2809 	mov	a,#0xdb
      000C9F 9E               [12] 2810 	subb	a,r6
      000CA0 74 05            [12] 2811 	mov	a,#0x05
      000CA2 9F               [12] 2812 	subb	a,r7
      000CA3 50 0A            [24] 2813 	jnc	00107$
                                   2814 ;	trial_webserver.c:426: len = BUFFER_SIZE - 1;
      000CA5 90r06r67         [24] 2815 	mov	dptr,#_packetReceive_len_10000_138
      000CA8 74 DB            [12] 2816 	mov	a,#0xdb
      000CAA F0               [24] 2817 	movx	@dptr,a
      000CAB 74 05            [12] 2818 	mov	a,#0x05
      000CAD A3               [24] 2819 	inc	dptr
      000CAE F0               [24] 2820 	movx	@dptr,a
      000CAF                       2821 00107$:
                                   2822 ;	trial_webserver.c:428: if ((header.status & 0x80) == 0)
      000CAF 90r06r6D         [24] 2823 	mov	dptr,#(_packetReceive_header_20002_144 + 0x0004)
      000CB2 E0               [24] 2824 	movx	a,@dptr
      000CB3 FE               [12] 2825 	mov	r6,a
      000CB4 A3               [24] 2826 	inc	dptr
      000CB5 E0               [24] 2827 	movx	a,@dptr
      000CB6 EE               [12] 2828 	mov	a,r6
      000CB7 20 E7 09         [24] 2829 	jb	acc.7,00109$
                                   2830 ;	trial_webserver.c:429: len = 0; // Invalid packet
      000CBA 90r06r67         [24] 2831 	mov	dptr,#_packetReceive_len_10000_138
      000CBD E4               [12] 2832 	clr	a
      000CBE F0               [24] 2833 	movx	@dptr,a
      000CBF A3               [24] 2834 	inc	dptr
      000CC0 F0               [24] 2835 	movx	@dptr,a
      000CC1 80 2C            [24] 2836 	sjmp	00110$
      000CC3                       2837 00109$:
                                   2838 ;	trial_webserver.c:431: spi_buffer_read(len, start, buffer);
      000CC3 90r06r67         [24] 2839 	mov	dptr,#_packetReceive_len_10000_138
      000CC6 E0               [24] 2840 	movx	a,@dptr
      000CC7 FE               [12] 2841 	mov	r6,a
      000CC8 A3               [24] 2842 	inc	dptr
      000CC9 E0               [24] 2843 	movx	a,@dptr
      000CCA FF               [12] 2844 	mov	r7,a
      000CCB 90r06r6F         [24] 2845 	mov	dptr,#_packetReceive_start_20003_145
      000CCE E0               [24] 2846 	movx	a,@dptr
      000CCF FC               [12] 2847 	mov	r4,a
      000CD0 A3               [24] 2848 	inc	dptr
      000CD1 E0               [24] 2849 	movx	a,@dptr
      000CD2 FD               [12] 2850 	mov	r5,a
      000CD3 90r00r00         [24] 2851 	mov	dptr,#_spi_buffer_read_PARM_2
      000CD6 EC               [12] 2852 	mov	a,r4
      000CD7 F0               [24] 2853 	movx	@dptr,a
      000CD8 ED               [12] 2854 	mov	a,r5
      000CD9 A3               [24] 2855 	inc	dptr
      000CDA F0               [24] 2856 	movx	@dptr,a
      000CDB 90r00r00         [24] 2857 	mov	dptr,#_spi_buffer_read_PARM_3
      000CDE 74r08            [12] 2858 	mov	a,#_buffer
      000CE0 F0               [24] 2859 	movx	@dptr,a
      000CE1 74s00            [12] 2860 	mov	a,#(_buffer >> 8)
      000CE3 A3               [24] 2861 	inc	dptr
      000CE4 F0               [24] 2862 	movx	@dptr,a
      000CE5 E4               [12] 2863 	clr	a
      000CE6 A3               [24] 2864 	inc	dptr
      000CE7 F0               [24] 2865 	movx	@dptr,a
      000CE8 8E 82            [24] 2866 	mov	dpl, r6
      000CEA 8F 83            [24] 2867 	mov	dph, r7
      000CEC 12r00r00         [24] 2868 	lcall	_spi_buffer_read
      000CEF                       2869 00110$:
                                   2870 ;	trial_webserver.c:433: buffer[len] = 0; // Null-terminate
      000CEF 90r06r67         [24] 2871 	mov	dptr,#_packetReceive_len_10000_138
      000CF2 E0               [24] 2872 	movx	a,@dptr
      000CF3 FE               [12] 2873 	mov	r6,a
      000CF4 A3               [24] 2874 	inc	dptr
      000CF5 E0               [24] 2875 	movx	a,@dptr
      000CF6 FF               [12] 2876 	mov	r7,a
      000CF7 EE               [12] 2877 	mov	a,r6
      000CF8 24r08            [12] 2878 	add	a, #_buffer
      000CFA F5 82            [12] 2879 	mov	dpl,a
      000CFC EF               [12] 2880 	mov	a,r7
      000CFD 34s00            [12] 2881 	addc	a, #(_buffer >> 8)
      000CFF F5 83            [12] 2882 	mov	dph,a
      000D01 E4               [12] 2883 	clr	a
      000D02 F0               [24] 2884 	movx	@dptr,a
                                   2885 ;	trial_webserver.c:434: unreleasedPacket = true;
      000D03 90r06r66         [24] 2886 	mov	dptr,#_packetReceive_unreleasedPacket_10000_138
      000D06 04               [12] 2887 	inc	a
      000D07 F0               [24] 2888 	movx	@dptr,a
                                   2889 ;	trial_webserver.c:436: uint8_t ECON2 = mac_spi_read(0x1E, 0);
      000D08 90r00r00         [24] 2890 	mov	dptr,#_mac_spi_read_PARM_2
      000D0B E4               [12] 2891 	clr	a
      000D0C F0               [24] 2892 	movx	@dptr,a
      000D0D 75 82 1E         [24] 2893 	mov	dpl, #0x1e
      000D10 12r00r00         [24] 2894 	lcall	_mac_spi_read
      000D13 E5 82            [12] 2895 	mov	a, dpl
                                   2896 ;	trial_webserver.c:437: spi_control_write(0, 0x1E, (ECON2 | (1 << 6))); // Enable MAC reception
      000D15 44 40            [12] 2897 	orl	a,#0x40
      000D17 FF               [12] 2898 	mov	r7,a
      000D18 90r00r00         [24] 2899 	mov	dptr,#_spi_control_write_PARM_2
      000D1B 74 1E            [12] 2900 	mov	a,#0x1e
      000D1D F0               [24] 2901 	movx	@dptr,a
      000D1E 90r00r00         [24] 2902 	mov	dptr,#_spi_control_write_PARM_3
      000D21 EF               [12] 2903 	mov	a,r7
      000D22 F0               [24] 2904 	movx	@dptr,a
      000D23 75 82 00         [24] 2905 	mov	dpl, #0x00
      000D26 12r00r00         [24] 2906 	lcall	_spi_control_write
      000D29                       2907 00112$:
                                   2908 ;	trial_webserver.c:440: return len;
      000D29 90r06r67         [24] 2909 	mov	dptr,#_packetReceive_len_10000_138
      000D2C E0               [24] 2910 	movx	a,@dptr
      000D2D FE               [12] 2911 	mov	r6,a
      000D2E A3               [24] 2912 	inc	dptr
      000D2F E0               [24] 2913 	movx	a,@dptr
                                   2914 ;	trial_webserver.c:441: }
      000D30 8E 82            [24] 2915 	mov	dpl,r6
      000D32 F5 83            [12] 2916 	mov	dph,a
      000D34 22               [24] 2917 	ret
                                   2918 ;------------------------------------------------------------
                                   2919 ;Allocation info for local variables in function 'packetLoop'
                                   2920 ;------------------------------------------------------------
                                   2921 ;plen                      Allocated with name '_packetLoop_plen_10000_148'
                                   2922 ;ethType                   Allocated with name '_packetLoop_ethType_20000_149'
                                   2923 ;tcpFlags                  Allocated with name '_packetLoop_tcpFlags_30000_152'
                                   2924 ;------------------------------------------------------------
                                   2925 ;	trial_webserver.c:443: void packetLoop(void)
                                   2926 ;	-----------------------------------------
                                   2927 ;	 function packetLoop
                                   2928 ;	-----------------------------------------
      000D35                       2929 _packetLoop:
                                   2930 ;	trial_webserver.c:445: uint16_t plen = packetReceive();
      000D35 12r0Br7B         [24] 2931 	lcall	_packetReceive
      000D38 AE 82            [24] 2932 	mov	r6, dpl
      000D3A AF 83            [24] 2933 	mov	r7, dph
                                   2934 ;	trial_webserver.c:448: if (plen > 0) {
      000D3C EE               [12] 2935 	mov	a,r6
      000D3D 4F               [12] 2936 	orl	a,r7
      000D3E 70 01            [24] 2937 	jnz	00219$
      000D40 22               [24] 2938 	ret
      000D41                       2939 00219$:
                                   2940 ;	trial_webserver.c:449: uint16_t ethType = (buffer[ETH_TYPE_H_P] << 8) | buffer[ETH_TYPE_L_P];
      000D41 90r00r14         [24] 2941 	mov	dptr,#(_buffer + 0x000c)
      000D44 E0               [24] 2942 	movx	a,@dptr
      000D45 FC               [12] 2943 	mov	r4,a
      000D46 7D 00            [12] 2944 	mov	r5,#0x00
      000D48 90r00r15         [24] 2945 	mov	dptr,#(_buffer + 0x000d)
      000D4B E0               [24] 2946 	movx	a,@dptr
      000D4C FB               [12] 2947 	mov	r3,a
      000D4D 7A 00            [12] 2948 	mov	r2,#0x00
      000D4F 42 05            [12] 2949 	orl	ar5,a
      000D51 EA               [12] 2950 	mov	a,r2
      000D52 42 04            [12] 2951 	orl	ar4,a
                                   2952 ;	trial_webserver.c:450: if (ethType == ETH_TYPE_ARP) {
      000D54 BD 06 0F         [24] 2953 	cjne	r5,#0x06,00104$
      000D57 BC 08 0C         [24] 2954 	cjne	r4,#0x08,00104$
                                   2955 ;	trial_webserver.c:451: if (buffer[21] == 0x01) {
      000D5A 90r00r1D         [24] 2956 	mov	dptr,#(_buffer + 0x0015)
      000D5D E0               [24] 2957 	movx	a,@dptr
      000D5E FB               [12] 2958 	mov	r3,a
      000D5F BB 01 03         [24] 2959 	cjne	r3,#0x01,00102$
                                   2960 ;	trial_webserver.c:452: makeArpReply();
                                   2961 ;	trial_webserver.c:454: return;
      000D62 02r00r00         [24] 2962 	ljmp	_makeArpReply
      000D65                       2963 00102$:
      000D65 22               [24] 2964 	ret
      000D66                       2965 00104$:
                                   2966 ;	trial_webserver.c:457: if (ethType == ETH_TYPE_IP && buffer[IP_PROTO_P] == IP_PROTO_TCP)
      000D66 BD 00 05         [24] 2967 	cjne	r5,#0x00,00224$
      000D69 BC 08 02         [24] 2968 	cjne	r4,#0x08,00224$
      000D6C 80 01            [24] 2969 	sjmp	00225$
      000D6E                       2970 00224$:
      000D6E 22               [24] 2971 	ret
      000D6F                       2972 00225$:
      000D6F 90r00r1F         [24] 2973 	mov	dptr,#(_buffer + 0x0017)
      000D72 E0               [24] 2974 	movx	a,@dptr
      000D73 FD               [12] 2975 	mov	r5,a
      000D74 BD 06 02         [24] 2976 	cjne	r5,#0x06,00226$
      000D77 80 01            [24] 2977 	sjmp	00227$
      000D79                       2978 00226$:
      000D79 22               [24] 2979 	ret
      000D7A                       2980 00227$:
                                   2981 ;	trial_webserver.c:459: uint8_t tcpFlags = buffer[TCP_FLAGS_P];
      000D7A 90r00r37         [24] 2982 	mov	dptr,#(_buffer + 0x002f)
      000D7D E0               [24] 2983 	movx	a,@dptr
                                   2984 ;	trial_webserver.c:462: if ((tcpFlags & TCP_FLAG_ACK) && (tcpFlags & TCP_FLAG_FIN)) {
      000D7E FD               [12] 2985 	mov	r5,a
      000D7F 30 E4 23         [24] 2986 	jnb	acc.4,00106$
      000D82 ED               [12] 2987 	mov	a,r5
      000D83 30 E0 1F         [24] 2988 	jnb	acc.0,00106$
                                   2989 ;	trial_webserver.c:463: printf("TCP(ACK_FIN) packet detected\n\r");
      000D86 74rC4            [12] 2990 	mov	a,#___str_6
      000D88 C0 E0            [24] 2991 	push	acc
      000D8A 74s03            [12] 2992 	mov	a,#(___str_6 >> 8)
      000D8C C0 E0            [24] 2993 	push	acc
      000D8E 74 80            [12] 2994 	mov	a,#0x80
      000D90 C0 E0            [24] 2995 	push	acc
      000D92 12r00r00         [24] 2996 	lcall	_printf
      000D95 15 81            [12] 2997 	dec	sp
      000D97 15 81            [12] 2998 	dec	sp
      000D99 15 81            [12] 2999 	dec	sp
                                   3000 ;	trial_webserver.c:464: makeTcpAck3(); // Send an acknowledgment
      000D9B 12r01r79         [24] 3001 	lcall	_makeTcpAck3
                                   3002 ;	trial_webserver.c:465: connectionState = CLOSED;
      000D9E 90r00r00         [24] 3003 	mov	dptr,#_connectionState
      000DA1 74 04            [12] 3004 	mov	a,#0x04
      000DA3 F0               [24] 3005 	movx	@dptr,a
                                   3006 ;	trial_webserver.c:467: return;
      000DA4 22               [24] 3007 	ret
      000DA5                       3008 00106$:
                                   3009 ;	trial_webserver.c:469: if ((tcpFlags & TCP_FLAG_SYN)) {
      000DA5 ED               [12] 3010 	mov	a,r5
      000DA6 30 E1 26         [24] 3011 	jnb	acc.1,00109$
                                   3012 ;	trial_webserver.c:470: printf("TCP(SYN) packet detected\n\r");
      000DA9 C0 07            [24] 3013 	push	ar7
      000DAB C0 06            [24] 3014 	push	ar6
      000DAD C0 05            [24] 3015 	push	ar5
      000DAF 74rE3            [12] 3016 	mov	a,#___str_7
      000DB1 C0 E0            [24] 3017 	push	acc
      000DB3 74s03            [12] 3018 	mov	a,#(___str_7 >> 8)
      000DB5 C0 E0            [24] 3019 	push	acc
      000DB7 74 80            [12] 3020 	mov	a,#0x80
      000DB9 C0 E0            [24] 3021 	push	acc
      000DBB 12r00r00         [24] 3022 	lcall	_printf
      000DBE 15 81            [12] 3023 	dec	sp
      000DC0 15 81            [12] 3024 	dec	sp
      000DC2 15 81            [12] 3025 	dec	sp
      000DC4 D0 05            [24] 3026 	pop	ar5
      000DC6 D0 06            [24] 3027 	pop	ar6
      000DC8 D0 07            [24] 3028 	pop	ar7
                                   3029 ;	trial_webserver.c:472: connectionState = LISTEN;
      000DCA 90r00r00         [24] 3030 	mov	dptr,#_connectionState
      000DCD E4               [12] 3031 	clr	a
      000DCE F0               [24] 3032 	movx	@dptr,a
      000DCF                       3033 00109$:
                                   3034 ;	trial_webserver.c:475: switch (connectionState) {
      000DCF 90r00r00         [24] 3035 	mov	dptr,#_connectionState
      000DD2 E0               [24] 3036 	movx	a,@dptr
      000DD3 FC               [12] 3037 	mov  r4,a
      000DD4 24 FA            [12] 3038 	add	a,#0xff - 0x05
      000DD6 50 01            [24] 3039 	jnc	00231$
      000DD8 22               [24] 3040 	ret
      000DD9                       3041 00231$:
      000DD9 EC               [12] 3042 	mov	a,r4
      000DDA 2C               [12] 3043 	add	a,r4
      000DDB 2C               [12] 3044 	add	a,r4
      000DDC 90r0DrE0         [24] 3045 	mov	dptr,#00232$
      000DDF 73               [24] 3046 	jmp	@a+dptr
      000DE0                       3047 00232$:
      000DE0 02r0DrF2         [24] 3048 	ljmp	00110$
      000DE3 02r0Er13         [24] 3049 	ljmp	00113$
      000DE6 02r0Er37         [24] 3050 	ljmp	00116$
      000DE9 02r0Er71         [24] 3051 	ljmp	00122$
      000DEC 02r0Er9E         [24] 3052 	ljmp	00133$
      000DEF 02r0Er95         [24] 3053 	ljmp	00125$
                                   3054 ;	trial_webserver.c:476: case LISTEN:
      000DF2                       3055 00110$:
                                   3056 ;	trial_webserver.c:477: printf("listen\n\r");
      000DF2 C0 05            [24] 3057 	push	ar5
      000DF4 74rFE            [12] 3058 	mov	a,#___str_8
      000DF6 C0 E0            [24] 3059 	push	acc
      000DF8 74s03            [12] 3060 	mov	a,#(___str_8 >> 8)
      000DFA C0 E0            [24] 3061 	push	acc
      000DFC 74 80            [12] 3062 	mov	a,#0x80
      000DFE C0 E0            [24] 3063 	push	acc
      000E00 12r00r00         [24] 3064 	lcall	_printf
      000E03 15 81            [12] 3065 	dec	sp
      000E05 15 81            [12] 3066 	dec	sp
      000E07 15 81            [12] 3067 	dec	sp
      000E09 D0 05            [24] 3068 	pop	ar5
                                   3069 ;	trial_webserver.c:478: if (tcpFlags & TCP_FLAG_SYN)
      000E0B ED               [12] 3070 	mov	a,r5
      000E0C 20 E1 01         [24] 3071 	jb	acc.1,00233$
      000E0F 22               [24] 3072 	ret
      000E10                       3073 00233$:
                                   3074 ;	trial_webserver.c:479: makeTcpSynAck();
                                   3075 ;	trial_webserver.c:480: break;
      000E10 02r06r46         [24] 3076 	ljmp	_makeTcpSynAck
                                   3077 ;	trial_webserver.c:481: case SYN_RECEIVED:
      000E13                       3078 00113$:
                                   3079 ;	trial_webserver.c:482: printf("syn received\n\r");
      000E13 C0 05            [24] 3080 	push	ar5
      000E15 74r07            [12] 3081 	mov	a,#___str_9
      000E17 C0 E0            [24] 3082 	push	acc
      000E19 74s04            [12] 3083 	mov	a,#(___str_9 >> 8)
      000E1B C0 E0            [24] 3084 	push	acc
      000E1D 74 80            [12] 3085 	mov	a,#0x80
      000E1F C0 E0            [24] 3086 	push	acc
      000E21 12r00r00         [24] 3087 	lcall	_printf
      000E24 15 81            [12] 3088 	dec	sp
      000E26 15 81            [12] 3089 	dec	sp
      000E28 15 81            [12] 3090 	dec	sp
      000E2A D0 05            [24] 3091 	pop	ar5
                                   3092 ;	trial_webserver.c:483: if (tcpFlags & TCP_FLAG_ACK)
      000E2C ED               [12] 3093 	mov	a,r5
      000E2D 30 E4 6E         [24] 3094 	jnb	acc.4,00133$
                                   3095 ;	trial_webserver.c:484: connectionState = ESTABLISHED;
      000E30 90r00r00         [24] 3096 	mov	dptr,#_connectionState
      000E33 74 02            [12] 3097 	mov	a,#0x02
      000E35 F0               [24] 3098 	movx	@dptr,a
                                   3099 ;	trial_webserver.c:485: break;
                                   3100 ;	trial_webserver.c:486: case ESTABLISHED:
      000E36 22               [24] 3101 	ret
      000E37                       3102 00116$:
                                   3103 ;	trial_webserver.c:487: printf("established\n\r");
      000E37 C0 07            [24] 3104 	push	ar7
      000E39 C0 06            [24] 3105 	push	ar6
      000E3B C0 05            [24] 3106 	push	ar5
      000E3D 74r16            [12] 3107 	mov	a,#___str_10
      000E3F C0 E0            [24] 3108 	push	acc
      000E41 74s04            [12] 3109 	mov	a,#(___str_10 >> 8)
      000E43 C0 E0            [24] 3110 	push	acc
      000E45 74 80            [12] 3111 	mov	a,#0x80
      000E47 C0 E0            [24] 3112 	push	acc
      000E49 12r00r00         [24] 3113 	lcall	_printf
      000E4C 15 81            [12] 3114 	dec	sp
      000E4E 15 81            [12] 3115 	dec	sp
      000E50 15 81            [12] 3116 	dec	sp
      000E52 D0 05            [24] 3117 	pop	ar5
      000E54 D0 06            [24] 3118 	pop	ar6
      000E56 D0 07            [24] 3119 	pop	ar7
                                   3120 ;	trial_webserver.c:488: if (tcpFlags & TCP_FLAG_FIN) {
      000E58 ED               [12] 3121 	mov	a,r5
      000E59 30 E0 0A         [24] 3122 	jnb	acc.0,00120$
                                   3123 ;	trial_webserver.c:489: makeTcpAck();
      000E5C 12r08r47         [24] 3124 	lcall	_makeTcpAck
                                   3125 ;	trial_webserver.c:490: connectionState = FIN_WAIT;
      000E5F 90r00r00         [24] 3126 	mov	dptr,#_connectionState
      000E62 74 03            [12] 3127 	mov	a,#0x03
      000E64 F0               [24] 3128 	movx	@dptr,a
      000E65 22               [24] 3129 	ret
      000E66                       3130 00120$:
                                   3131 ;	trial_webserver.c:491: } else if (plen > TCP_DATA_START_P) {
      000E66 C3               [12] 3132 	clr	c
      000E67 74 36            [12] 3133 	mov	a,#0x36
      000E69 9E               [12] 3134 	subb	a,r6
      000E6A E4               [12] 3135 	clr	a
      000E6B 9F               [12] 3136 	subb	a,r7
      000E6C 50 30            [24] 3137 	jnc	00133$
                                   3138 ;	trial_webserver.c:492: makeTcpAck2();
                                   3139 ;	trial_webserver.c:495: break;
                                   3140 ;	trial_webserver.c:496: case FIN_WAIT:
      000E6E 02r03rC0         [24] 3141 	ljmp	_makeTcpAck2
      000E71                       3142 00122$:
                                   3143 ;	trial_webserver.c:497: printf("fin wait\n\r");
      000E71 C0 05            [24] 3144 	push	ar5
      000E73 74r24            [12] 3145 	mov	a,#___str_11
      000E75 C0 E0            [24] 3146 	push	acc
      000E77 74s04            [12] 3147 	mov	a,#(___str_11 >> 8)
      000E79 C0 E0            [24] 3148 	push	acc
      000E7B 74 80            [12] 3149 	mov	a,#0x80
      000E7D C0 E0            [24] 3150 	push	acc
      000E7F 12r00r00         [24] 3151 	lcall	_printf
      000E82 15 81            [12] 3152 	dec	sp
      000E84 15 81            [12] 3153 	dec	sp
      000E86 15 81            [12] 3154 	dec	sp
      000E88 D0 05            [24] 3155 	pop	ar5
                                   3156 ;	trial_webserver.c:498: if (tcpFlags & TCP_FLAG_ACK)
      000E8A ED               [12] 3157 	mov	a,r5
      000E8B 30 E4 10         [24] 3158 	jnb	acc.4,00133$
                                   3159 ;	trial_webserver.c:499: connectionState = CLOSED;
      000E8E 90r00r00         [24] 3160 	mov	dptr,#_connectionState
      000E91 74 04            [12] 3161 	mov	a,#0x04
      000E93 F0               [24] 3162 	movx	@dptr,a
                                   3163 ;	trial_webserver.c:500: break;
                                   3164 ;	trial_webserver.c:501: case ACK_SENT:
      000E94 22               [24] 3165 	ret
      000E95                       3166 00125$:
                                   3167 ;	trial_webserver.c:502: makeTcpFinPshAck();
      000E95 12r09r0C         [24] 3168 	lcall	_makeTcpFinPshAck
                                   3169 ;	trial_webserver.c:503: connectionState = CLOSED;
      000E98 90r00r00         [24] 3170 	mov	dptr,#_connectionState
      000E9B 74 04            [12] 3171 	mov	a,#0x04
      000E9D F0               [24] 3172 	movx	@dptr,a
                                   3173 ;	trial_webserver.c:507: }
      000E9E                       3174 00133$:
                                   3175 ;	trial_webserver.c:513: }
      000E9E 22               [24] 3176 	ret
                                   3177 	.area CSEG    (CODE)
                                   3178 	.area CONST   (CODE)
                                   3179 	.area CONST   (CODE)
      000000                       3180 ___str_0:
      000000 74 72 69 61 6C 61 72  3181 	.ascii "trialarpreply"
             70 72 65 70 6C 79
      00000D 0A                    3182 	.db 0x0a
      00000E 0D                    3183 	.db 0x0d
      00000F 00                    3184 	.db 0x00
                                   3185 	.area CSEG    (CODE)
                                   3186 	.area CONST   (CODE)
      000010                       3187 ___str_1:
      000010 6D 61 6B 65 54 63 70  3188 	.ascii "makeTcpAck"
             41 63 6B
      00001A 0A                    3189 	.db 0x0a
      00001B 0D                    3190 	.db 0x0d
      00001C 00                    3191 	.db 0x00
                                   3192 	.area CSEG    (CODE)
                                   3193 	.area CONST   (CODE)
      00001D                       3194 ___str_2:
      00001D 6D 61 6B 65 54 63 70  3195 	.ascii "makeTcpSynAck"
             53 79 6E 41 63 6B
      00002A 0A                    3196 	.db 0x0a
      00002B 0D                    3197 	.db 0x0d
      00002C 00                    3198 	.db 0x00
                                   3199 	.area CSEG    (CODE)
                                   3200 	.area CONST   (CODE)
      00002D                       3201 ___str_3:
      00002D 74 63 70 61 63 6B     3202 	.ascii "tcpack"
      000033 0A                    3203 	.db 0x0a
      000034 0D                    3204 	.db 0x0d
      000035 00                    3205 	.db 0x00
                                   3206 	.area CSEG    (CODE)
                                   3207 	.area CONST   (CODE)
      000036                       3208 ___str_4:
      000036 48 54 54 50 2F 31 2E  3209 	.ascii "HTTP/1.1 200 OK"
             31 20 32 30 30 20 4F
             4B
      000045 0D                    3210 	.db 0x0d
      000046 0A                    3211 	.db 0x0a
      000047 43 6F 6E 74 65 6E 74  3212 	.ascii "Content-Type: text/html"
             2D 54 79 70 65 3A 20
             74 65 78 74 2F 68 74
             6D 6C
      00005E 0D                    3213 	.db 0x0d
      00005F 0A                    3214 	.db 0x0a
      000060 43 6F 6E 74 65 6E 74  3215 	.ascii "Content-Length: 530"
             2D 4C 65 6E 67 74 68
             3A 20 35 33 30
      000073 0D                    3216 	.db 0x0d
      000074 0A                    3217 	.db 0x0a
      000075 0D                    3218 	.db 0x0d
      000076 0A                    3219 	.db 0x0a
      000077 3C 21 44 4F 43 54 59  3220 	.ascii "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><"
             50 45 20 68 74 6D 6C
             3E 3C 68 74 6D 6C 20
             6C 61 6E 67 3D 27 65
             6E 27 3E 3C 68 65 61
             64 3E 3C 6D 65 74 61
             20 63 68 61 72 73 65
             74 3D 27 55 54 46 2D
             38 27 3E 3C
      0000B3 6D 65 74 61 20 6E 61  3221 	.ascii "meta name='viewport' content='width=device-width, initial-sc"
             6D 65 3D 27 76 69 65
             77 70 6F 72 74 27 20
             63 6F 6E 74 65 6E 74
             3D 27 77 69 64 74 68
             3D 64 65 76 69 63 65
             2D 77 69 64 74 68 2C
             20 69 6E 69 74 69 61
             6C 2D 73 63
      0000EF 61 6C 65 3D 31 2E 30  3222 	.ascii "ale=1.0'><title>Ethernet Web Server</title><style>body {font"
             27 3E 3C 74 69 74 6C
             65 3E 45 74 68 65 72
             6E 65 74 20 57 65 62
             20 53 65 72 76 65 72
             3C 2F 74 69 74 6C 65
             3E 3C 73 74 79 6C 65
             3E 62 6F 64 79 20 7B
             66 6F 6E 74
      00012B 2D 66 61 6D 69 6C 79  3223 	.ascii "-family: Arial, sans-serif; background-color: #f0f0f0; text-"
             3A 20 41 72 69 61 6C
             2C 20 73 61 6E 73 2D
             73 65 72 69 66 3B 20
             62 61 63 6B 67 72 6F
             75 6E 64 2D 63 6F 6C
             6F 72 3A 20 23 66 30
             66 30 66 30 3B 20 74
             65 78 74 2D
      000167 61 6C 69 67 6E 3A 20  3224 	.ascii "align: center; padding: 20px;}h1 {color: #333333;}p {color: "
             63 65 6E 74 65 72 3B
             20 70 61 64 64 69 6E
             67 3A 20 32 30 70 78
             3B 7D 68 31 20 7B 63
             6F 6C 6F 72 3A 20 23
             33 33 33 33 33 33 3B
             7D 70 20 7B 63 6F 6C
             6F 72 3A 20
      0001A3 23 36 36 36 36 36 36  3225 	.ascii "#666666;}</style></head><body><h1>ESD FALL 2024</h1><p>Ether"
             3B 7D 3C 2F 73 74 79
             6C 65 3E 3C 2F 68 65
             61 64 3E 3C 62 6F 64
             79 3E 3C 68 31 3E 45
             53 44 20 46 41 4C 4C
             20 32 30 32 34 3C 2F
             68 31 3E 3C 70 3E 45
             74 68 65 72
      0001DF 6E 65 74 20 62 61 73  3226 	.ascii "net based Web Server for Embedded Systems - NADGIR and KOPPA"
             65 64 20 57 65 62 20
             53 65 72 76 65 72 20
             66 6F 72 20 45 6D 62
             65 64 64 65 64 20 53
             79 73 74 65 6D 73 20
             2D 20 4E 41 44 47 49
             52 20 61 6E 64 20 4B
             4F 50 50 41
      00021B 20 6D 61 64 65 20 69  3227 	.ascii " made itttt, lessgoooo!!! This web server showcases the powe"
             74 74 74 74 2C 20 6C
             65 73 73 67 6F 6F 6F
             6F 21 21 21 20 54 68
             69 73 20 77 65 62 20
             73 65 72 76 65 72 20
             73 68 6F 77 63 61 73
             65 73 20 74 68 65 20
             70 6F 77 65
      000257 72 20 6F 66 20 6D 69  3228 	.ascii "r of microcontrollers and Ethernet communication. By leverag"
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 73
             20 61 6E 64 20 45 74
             68 65 72 6E 65 74 20
             63 6F 6D 6D 75 6E 69
             63 61 74 69 6F 6E 2E
             20 42 79 20 6C 65 76
             65 72 61 67
      000293 69 6E 67 20 74 68 65  3229 	.ascii "ing the AT89C51RC2 microcontroller and the ENC28J60 Ethernet"
             20 41 54 38 39 43 35
             31 52 43 32 20 6D 69
             63 72 6F 63 6F 6E 74
             72 6F 6C 6C 65 72 20
             61 6E 64 20 74 68 65
             20 45 4E 43 32 38 4A
             36 30 20 45 74 68 65
             72 6E 65 74
      0002CF 20 63 6F 6E 74 72 6F  3230 	.ascii " controller, we can serve dynamic web pages and control embe"
             6C 6C 65 72 2C 20 77
             65 20 63 61 6E 20 73
             65 72 76 65 20 64 79
             6E 61 6D 69 63 20 77
             65 62 20 70 61 67 65
             73 20 61 6E 64 20 63
             6F 6E 74 72 6F 6C 20
             65 6D 62 65
      00030B 64 64 65 64 20 64 65  3231 	.ascii "dded devices remotely. The server allows seamless communicat"
             76 69 63 65 73 20 72
             65 6D 6F 74 65 6C 79
             2E 20 54 68 65 20 73
             65 72 76 65 72 20 61
             6C 6C 6F 77 73 20 73
             65 61 6D 6C 65 73 73
             20 63 6F 6D 6D 75 6E
             69 63 61 74
      000347 69 6F 6E 20 62 65 74  3232 	.ascii "ion between hardware and software, enabling real-time data e"
             77 65 65 6E 20 68 61
             72 64 77 61 72 65 20
             61 6E 64 20 73 6F 66
             74 77 61 72 65 2C 20
             65 6E 61 62 6C 69 6E
             67 20 72 65 61 6C 2D
             74 69 6D 65 20 64 61
             74 61 20 65
      000383 78 63 68 61 6E 67 65  3233 	.ascii "xchange across the network.</p></body></html>"
             20 61 63 72 6F 73 73
             20 74 68 65 20 6E 65
             74 77 6F 72 6B 2E 3C
             2F 70 3E 3C 2F 62 6F
             64 79 3E 3C 2F 68 74
             6D 6C 3E
      0003B0 00                    3234 	.db 0x00
                                   3235 	.area CSEG    (CODE)
                                   3236 	.area CONST   (CODE)
      0003B1                       3237 ___str_5:
      0003B1 6D 61 6B 65 54 63 70  3238 	.ascii "makeTcpFinPshAck"
             46 69 6E 50 73 68 41
             63 6B
      0003C1 0A                    3239 	.db 0x0a
      0003C2 0D                    3240 	.db 0x0d
      0003C3 00                    3241 	.db 0x00
                                   3242 	.area CSEG    (CODE)
                                   3243 	.area CONST   (CODE)
      0003C4                       3244 ___str_6:
      0003C4 54 43 50 28 41 43 4B  3245 	.ascii "TCP(ACK_FIN) packet detected"
             5F 46 49 4E 29 20 70
             61 63 6B 65 74 20 64
             65 74 65 63 74 65 64
      0003E0 0A                    3246 	.db 0x0a
      0003E1 0D                    3247 	.db 0x0d
      0003E2 00                    3248 	.db 0x00
                                   3249 	.area CSEG    (CODE)
                                   3250 	.area CONST   (CODE)
      0003E3                       3251 ___str_7:
      0003E3 54 43 50 28 53 59 4E  3252 	.ascii "TCP(SYN) packet detected"
             29 20 70 61 63 6B 65
             74 20 64 65 74 65 63
             74 65 64
      0003FB 0A                    3253 	.db 0x0a
      0003FC 0D                    3254 	.db 0x0d
      0003FD 00                    3255 	.db 0x00
                                   3256 	.area CSEG    (CODE)
                                   3257 	.area CONST   (CODE)
      0003FE                       3258 ___str_8:
      0003FE 6C 69 73 74 65 6E     3259 	.ascii "listen"
      000404 0A                    3260 	.db 0x0a
      000405 0D                    3261 	.db 0x0d
      000406 00                    3262 	.db 0x00
                                   3263 	.area CSEG    (CODE)
                                   3264 	.area CONST   (CODE)
      000407                       3265 ___str_9:
      000407 73 79 6E 20 72 65 63  3266 	.ascii "syn received"
             65 69 76 65 64
      000413 0A                    3267 	.db 0x0a
      000414 0D                    3268 	.db 0x0d
      000415 00                    3269 	.db 0x00
                                   3270 	.area CSEG    (CODE)
                                   3271 	.area CONST   (CODE)
      000416                       3272 ___str_10:
      000416 65 73 74 61 62 6C 69  3273 	.ascii "established"
             73 68 65 64
      000421 0A                    3274 	.db 0x0a
      000422 0D                    3275 	.db 0x0d
      000423 00                    3276 	.db 0x00
                                   3277 	.area CSEG    (CODE)
                                   3278 	.area CONST   (CODE)
      000424                       3279 ___str_11:
      000424 66 69 6E 20 77 61 69  3280 	.ascii "fin wait"
             74
      00042C 0A                    3281 	.db 0x0a
      00042D 0D                    3282 	.db 0x0d
      00042E 00                    3283 	.db 0x00
                                   3284 	.area CSEG    (CODE)
                                   3285 	.area XINIT   (CODE)
      000000                       3286 __xinit__connectionState:
      000000 00                    3287 	.db #0x00	; 0
                                   3288 	.area CABS    (ABS,CODE)
