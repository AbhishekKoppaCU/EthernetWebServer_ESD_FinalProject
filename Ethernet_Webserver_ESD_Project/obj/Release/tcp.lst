                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module tcp
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _wait_for_transmission_complete
                                     12 	.globl _enc28j60_set_transmit_pointers
                                     13 	.globl _spi_buffer_write
                                     14 	.globl _spi_buffer_read
                                     15 	.globl _free
                                     16 	.globl _malloc
                                     17 	.globl _printf
                                     18 	.globl ___memcpy
                                     19 	.globl _memset
                                     20 	.globl _TF1
                                     21 	.globl _TR1
                                     22 	.globl _TF0
                                     23 	.globl _TR0
                                     24 	.globl _IE1
                                     25 	.globl _IT1
                                     26 	.globl _IE0
                                     27 	.globl _IT0
                                     28 	.globl _SM0
                                     29 	.globl _SM1
                                     30 	.globl _SM2
                                     31 	.globl _REN
                                     32 	.globl _TB8
                                     33 	.globl _RB8
                                     34 	.globl _TI
                                     35 	.globl _RI
                                     36 	.globl _CY
                                     37 	.globl _AC
                                     38 	.globl _F0
                                     39 	.globl _RS1
                                     40 	.globl _RS0
                                     41 	.globl _OV
                                     42 	.globl _F1
                                     43 	.globl _P
                                     44 	.globl _RD
                                     45 	.globl _WR
                                     46 	.globl _T1
                                     47 	.globl _T0
                                     48 	.globl _INT1
                                     49 	.globl _INT0
                                     50 	.globl _TXD0
                                     51 	.globl _TXD
                                     52 	.globl _RXD0
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _P2_7
                                     63 	.globl _P2_6
                                     64 	.globl _P2_5
                                     65 	.globl _P2_4
                                     66 	.globl _P2_3
                                     67 	.globl _P2_2
                                     68 	.globl _P2_1
                                     69 	.globl _P2_0
                                     70 	.globl _P1_7
                                     71 	.globl _P1_6
                                     72 	.globl _P1_5
                                     73 	.globl _P1_4
                                     74 	.globl _P1_3
                                     75 	.globl _P1_2
                                     76 	.globl _P1_1
                                     77 	.globl _P1_0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _PS
                                     87 	.globl _PT1
                                     88 	.globl _PX1
                                     89 	.globl _PT0
                                     90 	.globl _PX0
                                     91 	.globl _EA
                                     92 	.globl _ES
                                     93 	.globl _ET1
                                     94 	.globl _EX1
                                     95 	.globl _ET0
                                     96 	.globl _EX0
                                     97 	.globl _BREG_F7
                                     98 	.globl _BREG_F6
                                     99 	.globl _BREG_F5
                                    100 	.globl _BREG_F4
                                    101 	.globl _BREG_F3
                                    102 	.globl _BREG_F2
                                    103 	.globl _BREG_F1
                                    104 	.globl _BREG_F0
                                    105 	.globl _P5_7
                                    106 	.globl _P5_6
                                    107 	.globl _P5_5
                                    108 	.globl _P5_4
                                    109 	.globl _P5_3
                                    110 	.globl _P5_2
                                    111 	.globl _P5_1
                                    112 	.globl _P5_0
                                    113 	.globl _P4_7
                                    114 	.globl _P4_6
                                    115 	.globl _P4_5
                                    116 	.globl _P4_4
                                    117 	.globl _P4_3
                                    118 	.globl _P4_2
                                    119 	.globl _P4_1
                                    120 	.globl _P4_0
                                    121 	.globl _PX0L
                                    122 	.globl _PT0L
                                    123 	.globl _PX1L
                                    124 	.globl _PT1L
                                    125 	.globl _PSL
                                    126 	.globl _PT2L
                                    127 	.globl _PPCL
                                    128 	.globl _EC
                                    129 	.globl _CCF0
                                    130 	.globl _CCF1
                                    131 	.globl _CCF2
                                    132 	.globl _CCF3
                                    133 	.globl _CCF4
                                    134 	.globl _CR
                                    135 	.globl _CF
                                    136 	.globl _TF2
                                    137 	.globl _EXF2
                                    138 	.globl _RCLK
                                    139 	.globl _TCLK
                                    140 	.globl _EXEN2
                                    141 	.globl _TR2
                                    142 	.globl _C_T2
                                    143 	.globl _CP_RL2
                                    144 	.globl _T2CON_7
                                    145 	.globl _T2CON_6
                                    146 	.globl _T2CON_5
                                    147 	.globl _T2CON_4
                                    148 	.globl _T2CON_3
                                    149 	.globl _T2CON_2
                                    150 	.globl _T2CON_1
                                    151 	.globl _T2CON_0
                                    152 	.globl _PT2
                                    153 	.globl _ET2
                                    154 	.globl _TMOD
                                    155 	.globl _TL1
                                    156 	.globl _TL0
                                    157 	.globl _TH1
                                    158 	.globl _TH0
                                    159 	.globl _TCON
                                    160 	.globl _SP
                                    161 	.globl _SCON
                                    162 	.globl _SBUF0
                                    163 	.globl _SBUF
                                    164 	.globl _PSW
                                    165 	.globl _PCON
                                    166 	.globl _P3
                                    167 	.globl _P2
                                    168 	.globl _P1
                                    169 	.globl _P0
                                    170 	.globl _IP
                                    171 	.globl _IE
                                    172 	.globl _DP0L
                                    173 	.globl _DPL
                                    174 	.globl _DP0H
                                    175 	.globl _DPH
                                    176 	.globl _B
                                    177 	.globl _ACC
                                    178 	.globl _EECON
                                    179 	.globl _KBF
                                    180 	.globl _KBE
                                    181 	.globl _KBLS
                                    182 	.globl _BRL
                                    183 	.globl _BDRCON
                                    184 	.globl _T2MOD
                                    185 	.globl _SPDAT
                                    186 	.globl _SPSTA
                                    187 	.globl _SPCON
                                    188 	.globl _SADEN
                                    189 	.globl _SADDR
                                    190 	.globl _WDTPRG
                                    191 	.globl _WDTRST
                                    192 	.globl _P5
                                    193 	.globl _P4
                                    194 	.globl _IPH1
                                    195 	.globl _IPL1
                                    196 	.globl _IPH0
                                    197 	.globl _IPL0
                                    198 	.globl _IEN1
                                    199 	.globl _IEN0
                                    200 	.globl _CMOD
                                    201 	.globl _CL
                                    202 	.globl _CH
                                    203 	.globl _CCON
                                    204 	.globl _CCAPM4
                                    205 	.globl _CCAPM3
                                    206 	.globl _CCAPM2
                                    207 	.globl _CCAPM1
                                    208 	.globl _CCAPM0
                                    209 	.globl _CCAP4L
                                    210 	.globl _CCAP3L
                                    211 	.globl _CCAP2L
                                    212 	.globl _CCAP1L
                                    213 	.globl _CCAP0L
                                    214 	.globl _CCAP4H
                                    215 	.globl _CCAP3H
                                    216 	.globl _CCAP2H
                                    217 	.globl _CCAP1H
                                    218 	.globl _CCAP0H
                                    219 	.globl _CKCON1
                                    220 	.globl _CKCON0
                                    221 	.globl _CKRL
                                    222 	.globl _AUXR1
                                    223 	.globl _AUXR
                                    224 	.globl _TH2
                                    225 	.globl _TL2
                                    226 	.globl _RCAP2H
                                    227 	.globl _RCAP2L
                                    228 	.globl _T2CON
                                    229 	.globl _transmit_tcp_packet_PARM_2
                                    230 	.globl _print_hexdump_PARM_2
                                    231 	.globl _process_tcp_packet_PARM_3
                                    232 	.globl _process_tcp_packet_PARM_2
                                    233 	.globl _calculate_checksum_PARM_2
                                    234 	.globl _calculateIPChecksum
                                    235 	.globl _calculateTcpChecksum
                                    236 	.globl _calculate_checksum
                                    237 	.globl _process_tcp_packet
                                    238 	.globl _print_hexdump
                                    239 	.globl _process_packet_from_buffer
                                    240 	.globl _transmit_tcp_packet
                                    241 ;--------------------------------------------------------
                                    242 ; special function registers
                                    243 ;--------------------------------------------------------
                                    244 	.area RSEG    (ABS,DATA)
      000000                        245 	.org 0x0000
                           0000C8   246 _T2CON	=	0x00c8
                           0000CA   247 _RCAP2L	=	0x00ca
                           0000CB   248 _RCAP2H	=	0x00cb
                           0000CC   249 _TL2	=	0x00cc
                           0000CD   250 _TH2	=	0x00cd
                           00008E   251 _AUXR	=	0x008e
                           0000A2   252 _AUXR1	=	0x00a2
                           000097   253 _CKRL	=	0x0097
                           00008F   254 _CKCON0	=	0x008f
                           0000AF   255 _CKCON1	=	0x00af
                           0000FA   256 _CCAP0H	=	0x00fa
                           0000FB   257 _CCAP1H	=	0x00fb
                           0000FC   258 _CCAP2H	=	0x00fc
                           0000FD   259 _CCAP3H	=	0x00fd
                           0000FE   260 _CCAP4H	=	0x00fe
                           0000EA   261 _CCAP0L	=	0x00ea
                           0000EB   262 _CCAP1L	=	0x00eb
                           0000EC   263 _CCAP2L	=	0x00ec
                           0000ED   264 _CCAP3L	=	0x00ed
                           0000EE   265 _CCAP4L	=	0x00ee
                           0000DA   266 _CCAPM0	=	0x00da
                           0000DB   267 _CCAPM1	=	0x00db
                           0000DC   268 _CCAPM2	=	0x00dc
                           0000DD   269 _CCAPM3	=	0x00dd
                           0000DE   270 _CCAPM4	=	0x00de
                           0000D8   271 _CCON	=	0x00d8
                           0000F9   272 _CH	=	0x00f9
                           0000E9   273 _CL	=	0x00e9
                           0000D9   274 _CMOD	=	0x00d9
                           0000A8   275 _IEN0	=	0x00a8
                           0000B1   276 _IEN1	=	0x00b1
                           0000B8   277 _IPL0	=	0x00b8
                           0000B7   278 _IPH0	=	0x00b7
                           0000B2   279 _IPL1	=	0x00b2
                           0000B3   280 _IPH1	=	0x00b3
                           0000C0   281 _P4	=	0x00c0
                           0000E8   282 _P5	=	0x00e8
                           0000A6   283 _WDTRST	=	0x00a6
                           0000A7   284 _WDTPRG	=	0x00a7
                           0000A9   285 _SADDR	=	0x00a9
                           0000B9   286 _SADEN	=	0x00b9
                           0000C3   287 _SPCON	=	0x00c3
                           0000C4   288 _SPSTA	=	0x00c4
                           0000C5   289 _SPDAT	=	0x00c5
                           0000C9   290 _T2MOD	=	0x00c9
                           00009B   291 _BDRCON	=	0x009b
                           00009A   292 _BRL	=	0x009a
                           00009C   293 _KBLS	=	0x009c
                           00009D   294 _KBE	=	0x009d
                           00009E   295 _KBF	=	0x009e
                           0000D2   296 _EECON	=	0x00d2
                           0000E0   297 _ACC	=	0x00e0
                           0000F0   298 _B	=	0x00f0
                           000083   299 _DPH	=	0x0083
                           000083   300 _DP0H	=	0x0083
                           000082   301 _DPL	=	0x0082
                           000082   302 _DP0L	=	0x0082
                           0000A8   303 _IE	=	0x00a8
                           0000B8   304 _IP	=	0x00b8
                           000080   305 _P0	=	0x0080
                           000090   306 _P1	=	0x0090
                           0000A0   307 _P2	=	0x00a0
                           0000B0   308 _P3	=	0x00b0
                           000087   309 _PCON	=	0x0087
                           0000D0   310 _PSW	=	0x00d0
                           000099   311 _SBUF	=	0x0099
                           000099   312 _SBUF0	=	0x0099
                           000098   313 _SCON	=	0x0098
                           000081   314 _SP	=	0x0081
                           000088   315 _TCON	=	0x0088
                           00008C   316 _TH0	=	0x008c
                           00008D   317 _TH1	=	0x008d
                           00008A   318 _TL0	=	0x008a
                           00008B   319 _TL1	=	0x008b
                           000089   320 _TMOD	=	0x0089
                                    321 ;--------------------------------------------------------
                                    322 ; special function bits
                                    323 ;--------------------------------------------------------
                                    324 	.area RSEG    (ABS,DATA)
      000000                        325 	.org 0x0000
                           0000AD   326 _ET2	=	0x00ad
                           0000BD   327 _PT2	=	0x00bd
                           0000C8   328 _T2CON_0	=	0x00c8
                           0000C9   329 _T2CON_1	=	0x00c9
                           0000CA   330 _T2CON_2	=	0x00ca
                           0000CB   331 _T2CON_3	=	0x00cb
                           0000CC   332 _T2CON_4	=	0x00cc
                           0000CD   333 _T2CON_5	=	0x00cd
                           0000CE   334 _T2CON_6	=	0x00ce
                           0000CF   335 _T2CON_7	=	0x00cf
                           0000C8   336 _CP_RL2	=	0x00c8
                           0000C9   337 _C_T2	=	0x00c9
                           0000CA   338 _TR2	=	0x00ca
                           0000CB   339 _EXEN2	=	0x00cb
                           0000CC   340 _TCLK	=	0x00cc
                           0000CD   341 _RCLK	=	0x00cd
                           0000CE   342 _EXF2	=	0x00ce
                           0000CF   343 _TF2	=	0x00cf
                           0000DF   344 _CF	=	0x00df
                           0000DE   345 _CR	=	0x00de
                           0000DC   346 _CCF4	=	0x00dc
                           0000DB   347 _CCF3	=	0x00db
                           0000DA   348 _CCF2	=	0x00da
                           0000D9   349 _CCF1	=	0x00d9
                           0000D8   350 _CCF0	=	0x00d8
                           0000AE   351 _EC	=	0x00ae
                           0000BE   352 _PPCL	=	0x00be
                           0000BD   353 _PT2L	=	0x00bd
                           0000BC   354 _PSL	=	0x00bc
                           0000BB   355 _PT1L	=	0x00bb
                           0000BA   356 _PX1L	=	0x00ba
                           0000B9   357 _PT0L	=	0x00b9
                           0000B8   358 _PX0L	=	0x00b8
                           0000C0   359 _P4_0	=	0x00c0
                           0000C1   360 _P4_1	=	0x00c1
                           0000C2   361 _P4_2	=	0x00c2
                           0000C3   362 _P4_3	=	0x00c3
                           0000C4   363 _P4_4	=	0x00c4
                           0000C5   364 _P4_5	=	0x00c5
                           0000C6   365 _P4_6	=	0x00c6
                           0000C7   366 _P4_7	=	0x00c7
                           0000E8   367 _P5_0	=	0x00e8
                           0000E9   368 _P5_1	=	0x00e9
                           0000EA   369 _P5_2	=	0x00ea
                           0000EB   370 _P5_3	=	0x00eb
                           0000EC   371 _P5_4	=	0x00ec
                           0000ED   372 _P5_5	=	0x00ed
                           0000EE   373 _P5_6	=	0x00ee
                           0000EF   374 _P5_7	=	0x00ef
                           0000F0   375 _BREG_F0	=	0x00f0
                           0000F1   376 _BREG_F1	=	0x00f1
                           0000F2   377 _BREG_F2	=	0x00f2
                           0000F3   378 _BREG_F3	=	0x00f3
                           0000F4   379 _BREG_F4	=	0x00f4
                           0000F5   380 _BREG_F5	=	0x00f5
                           0000F6   381 _BREG_F6	=	0x00f6
                           0000F7   382 _BREG_F7	=	0x00f7
                           0000A8   383 _EX0	=	0x00a8
                           0000A9   384 _ET0	=	0x00a9
                           0000AA   385 _EX1	=	0x00aa
                           0000AB   386 _ET1	=	0x00ab
                           0000AC   387 _ES	=	0x00ac
                           0000AF   388 _EA	=	0x00af
                           0000B8   389 _PX0	=	0x00b8
                           0000B9   390 _PT0	=	0x00b9
                           0000BA   391 _PX1	=	0x00ba
                           0000BB   392 _PT1	=	0x00bb
                           0000BC   393 _PS	=	0x00bc
                           000080   394 _P0_0	=	0x0080
                           000081   395 _P0_1	=	0x0081
                           000082   396 _P0_2	=	0x0082
                           000083   397 _P0_3	=	0x0083
                           000084   398 _P0_4	=	0x0084
                           000085   399 _P0_5	=	0x0085
                           000086   400 _P0_6	=	0x0086
                           000087   401 _P0_7	=	0x0087
                           000090   402 _P1_0	=	0x0090
                           000091   403 _P1_1	=	0x0091
                           000092   404 _P1_2	=	0x0092
                           000093   405 _P1_3	=	0x0093
                           000094   406 _P1_4	=	0x0094
                           000095   407 _P1_5	=	0x0095
                           000096   408 _P1_6	=	0x0096
                           000097   409 _P1_7	=	0x0097
                           0000A0   410 _P2_0	=	0x00a0
                           0000A1   411 _P2_1	=	0x00a1
                           0000A2   412 _P2_2	=	0x00a2
                           0000A3   413 _P2_3	=	0x00a3
                           0000A4   414 _P2_4	=	0x00a4
                           0000A5   415 _P2_5	=	0x00a5
                           0000A6   416 _P2_6	=	0x00a6
                           0000A7   417 _P2_7	=	0x00a7
                           0000B0   418 _P3_0	=	0x00b0
                           0000B1   419 _P3_1	=	0x00b1
                           0000B2   420 _P3_2	=	0x00b2
                           0000B3   421 _P3_3	=	0x00b3
                           0000B4   422 _P3_4	=	0x00b4
                           0000B5   423 _P3_5	=	0x00b5
                           0000B6   424 _P3_6	=	0x00b6
                           0000B7   425 _P3_7	=	0x00b7
                           0000B0   426 _RXD	=	0x00b0
                           0000B0   427 _RXD0	=	0x00b0
                           0000B1   428 _TXD	=	0x00b1
                           0000B1   429 _TXD0	=	0x00b1
                           0000B2   430 _INT0	=	0x00b2
                           0000B3   431 _INT1	=	0x00b3
                           0000B4   432 _T0	=	0x00b4
                           0000B5   433 _T1	=	0x00b5
                           0000B6   434 _WR	=	0x00b6
                           0000B7   435 _RD	=	0x00b7
                           0000D0   436 _P	=	0x00d0
                           0000D1   437 _F1	=	0x00d1
                           0000D2   438 _OV	=	0x00d2
                           0000D3   439 _RS0	=	0x00d3
                           0000D4   440 _RS1	=	0x00d4
                           0000D5   441 _F0	=	0x00d5
                           0000D6   442 _AC	=	0x00d6
                           0000D7   443 _CY	=	0x00d7
                           000098   444 _RI	=	0x0098
                           000099   445 _TI	=	0x0099
                           00009A   446 _RB8	=	0x009a
                           00009B   447 _TB8	=	0x009b
                           00009C   448 _REN	=	0x009c
                           00009D   449 _SM2	=	0x009d
                           00009E   450 _SM1	=	0x009e
                           00009F   451 _SM0	=	0x009f
                           000088   452 _IT0	=	0x0088
                           000089   453 _IE0	=	0x0089
                           00008A   454 _IT1	=	0x008a
                           00008B   455 _IE1	=	0x008b
                           00008C   456 _TR0	=	0x008c
                           00008D   457 _TF0	=	0x008d
                           00008E   458 _TR1	=	0x008e
                           00008F   459 _TF1	=	0x008f
                                    460 ;--------------------------------------------------------
                                    461 ; overlayable register banks
                                    462 ;--------------------------------------------------------
                                    463 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        464 	.ds 8
                                    465 ;--------------------------------------------------------
                                    466 ; internal ram data
                                    467 ;--------------------------------------------------------
                                    468 	.area DSEG    (DATA)
      000000                        469 _process_tcp_packet_sloc0_1_0:
      000000                        470 	.ds 3
      000003                        471 _process_packet_from_buffer_sloc0_1_0:
      000003                        472 	.ds 3
                                    473 ;--------------------------------------------------------
                                    474 ; overlayable items in internal ram
                                    475 ;--------------------------------------------------------
                                    476 	.area	OSEG    (OVR,DATA)
      000000                        477 _calculateIPChecksum_sloc0_1_0:
      000000                        478 	.ds 2
      000002                        479 _calculateIPChecksum_sloc1_1_0:
      000002                        480 	.ds 4
                                    481 	.area	OSEG    (OVR,DATA)
      000000                        482 _calculateTcpChecksum_sloc0_1_0:
      000000                        483 	.ds 2
      000002                        484 _calculateTcpChecksum_sloc1_1_0:
      000002                        485 	.ds 2
      000004                        486 _calculateTcpChecksum_sloc2_1_0:
      000004                        487 	.ds 4
      000008                        488 _calculateTcpChecksum_sloc3_1_0:
      000008                        489 	.ds 4
      00000C                        490 _calculateTcpChecksum_sloc4_1_0:
      00000C                        491 	.ds 4
                                    492 	.area	OSEG    (OVR,DATA)
      000000                        493 _calculate_checksum_sloc0_1_0:
      000000                        494 	.ds 2
      000002                        495 _calculate_checksum_sloc1_1_0:
      000002                        496 	.ds 4
      000006                        497 _calculate_checksum_sloc2_1_0:
      000006                        498 	.ds 4
                                    499 ;--------------------------------------------------------
                                    500 ; indirectly addressable internal ram data
                                    501 ;--------------------------------------------------------
                                    502 	.area ISEG    (DATA)
                                    503 ;--------------------------------------------------------
                                    504 ; absolute internal ram data
                                    505 ;--------------------------------------------------------
                                    506 	.area IABS    (ABS,DATA)
                                    507 	.area IABS    (ABS,DATA)
                                    508 ;--------------------------------------------------------
                                    509 ; bit data
                                    510 ;--------------------------------------------------------
                                    511 	.area BSEG    (BIT)
                                    512 ;--------------------------------------------------------
                                    513 ; paged external ram data
                                    514 ;--------------------------------------------------------
                                    515 	.area PSEG    (PAG,XDATA)
                                    516 ;--------------------------------------------------------
                                    517 ; uninitialized external ram data
                                    518 ;--------------------------------------------------------
                                    519 	.area XSEG    (XDATA)
      000000                        520 _calculateIPChecksum_buffer_10000_118:
      000000                        521 	.ds 3
      000003                        522 _calculateIPChecksum_sum_10001_120:
      000003                        523 	.ds 4
      000007                        524 _calculateIPChecksum_i_20001_121:
      000007                        525 	.ds 2
      000009                        526 _calculateTcpChecksum_buffer_10000_125:
      000009                        527 	.ds 3
      00000C                        528 _calculateTcpChecksum_sum_10001_127:
      00000C                        529 	.ds 4
      000010                        530 _calculateTcpChecksum_i_20001_128:
      000010                        531 	.ds 1
      000011                        532 _calculateTcpChecksum_i_20001_130:
      000011                        533 	.ds 1
      000012                        534 _calculateTcpChecksum_i_20001_132:
      000012                        535 	.ds 2
      000014                        536 _calculate_checksum_PARM_2:
      000014                        537 	.ds 2
      000016                        538 _calculate_checksum_data_10000_136:
      000016                        539 	.ds 3
      000019                        540 _calculate_checksum_sum_10000_137:
      000019                        541 	.ds 4
      00001D                        542 _calculate_checksum_i_20000_138:
      00001D                        543 	.ds 2
      00001F                        544 _process_tcp_packet_PARM_2:
      00001F                        545 	.ds 2
      000021                        546 _process_tcp_packet_PARM_3:
      000021                        547 	.ds 3
      000024                        548 _process_tcp_packet_packet_10000_141:
      000024                        549 	.ds 3
      000027                        550 _process_tcp_packet_response_10000_142:
      000027                        551 	.ds 1501
      000604                        552 _print_hexdump_PARM_2:
      000604                        553 	.ds 2
      000606                        554 _print_hexdump_data_10000_148:
      000606                        555 	.ds 3
      000609                        556 _process_packet_from_buffer_start_address_10000_154:
      000609                        557 	.ds 2
      00060B                        558 _process_packet_from_buffer_next_packet_start_10001_157:
      00060B                        559 	.ds 2
      00060D                        560 _process_packet_from_buffer_response_size_10001_157:
      00060D                        561 	.ds 2
      00060F                        562 _transmit_tcp_packet_PARM_2:
      00060F                        563 	.ds 2
      000611                        564 _transmit_tcp_packet_packet_10000_166:
      000611                        565 	.ds 3
                                    566 ;--------------------------------------------------------
                                    567 ; absolute external ram data
                                    568 ;--------------------------------------------------------
                                    569 	.area XABS    (ABS,XDATA)
                                    570 ;--------------------------------------------------------
                                    571 ; initialized external ram data
                                    572 ;--------------------------------------------------------
                                    573 	.area XISEG   (XDATA)
                                    574 	.area HOME    (CODE)
                                    575 	.area GSINIT0 (CODE)
                                    576 	.area GSINIT1 (CODE)
                                    577 	.area GSINIT2 (CODE)
                                    578 	.area GSINIT3 (CODE)
                                    579 	.area GSINIT4 (CODE)
                                    580 	.area GSINIT5 (CODE)
                                    581 	.area GSINIT  (CODE)
                                    582 	.area GSFINAL (CODE)
                                    583 	.area CSEG    (CODE)
                                    584 ;--------------------------------------------------------
                                    585 ; global & static initialisations
                                    586 ;--------------------------------------------------------
                                    587 	.area HOME    (CODE)
                                    588 	.area GSINIT  (CODE)
                                    589 	.area GSFINAL (CODE)
                                    590 	.area GSINIT  (CODE)
                                    591 ;--------------------------------------------------------
                                    592 ; Home
                                    593 ;--------------------------------------------------------
                                    594 	.area HOME    (CODE)
                                    595 	.area HOME    (CODE)
                                    596 ;--------------------------------------------------------
                                    597 ; code
                                    598 ;--------------------------------------------------------
                                    599 	.area CSEG    (CODE)
                                    600 ;------------------------------------------------------------
                                    601 ;Allocation info for local variables in function 'calculateIPChecksum'
                                    602 ;------------------------------------------------------------
                                    603 ;buffer                    Allocated with name '_calculateIPChecksum_buffer_10000_118'
                                    604 ;length                    Allocated with name '_calculateIPChecksum_length_10001_120'
                                    605 ;sum                       Allocated with name '_calculateIPChecksum_sum_10001_120'
                                    606 ;i                         Allocated with name '_calculateIPChecksum_i_20001_121'
                                    607 ;word                      Allocated with name '_calculateIPChecksum_word_30001_122'
                                    608 ;checksum                  Allocated with name '_calculateIPChecksum_checksum_10002_124'
                                    609 ;sloc0                     Allocated with name '_calculateIPChecksum_sloc0_1_0'
                                    610 ;sloc1                     Allocated with name '_calculateIPChecksum_sloc1_1_0'
                                    611 ;------------------------------------------------------------
                                    612 ;	tcp.c:11: void calculateIPChecksum(uint8_t *buffer) {
                                    613 ;	-----------------------------------------
                                    614 ;	 function calculateIPChecksum
                                    615 ;	-----------------------------------------
      000000                        616 _calculateIPChecksum:
                           000007   617 	ar7 = 0x07
                           000006   618 	ar6 = 0x06
                           000005   619 	ar5 = 0x05
                           000004   620 	ar4 = 0x04
                           000003   621 	ar3 = 0x03
                           000002   622 	ar2 = 0x02
                           000001   623 	ar1 = 0x01
                           000000   624 	ar0 = 0x00
      000000 AF F0            [24]  625 	mov	r7,b
      000002 AE 83            [24]  626 	mov	r6,dph
      000004 E5 82            [12]  627 	mov	a,dpl
      000006 90r00r00         [24]  628 	mov	dptr,#_calculateIPChecksum_buffer_10000_118
      000009 F0               [24]  629 	movx	@dptr,a
      00000A EE               [12]  630 	mov	a,r6
      00000B A3               [24]  631 	inc	dptr
      00000C F0               [24]  632 	movx	@dptr,a
      00000D EF               [12]  633 	mov	a,r7
      00000E A3               [24]  634 	inc	dptr
      00000F F0               [24]  635 	movx	@dptr,a
                                    636 ;	tcp.c:13: buffer[IP_CHECKSUM_P] = 0;
      000010 90r00r00         [24]  637 	mov	dptr,#_calculateIPChecksum_buffer_10000_118
      000013 E0               [24]  638 	movx	a,@dptr
      000014 FD               [12]  639 	mov	r5,a
      000015 A3               [24]  640 	inc	dptr
      000016 E0               [24]  641 	movx	a,@dptr
      000017 FE               [12]  642 	mov	r6,a
      000018 A3               [24]  643 	inc	dptr
      000019 E0               [24]  644 	movx	a,@dptr
      00001A FF               [12]  645 	mov	r7,a
      00001B 74 18            [12]  646 	mov	a,#0x18
      00001D 2D               [12]  647 	add	a, r5
      00001E FA               [12]  648 	mov	r2,a
      00001F E4               [12]  649 	clr	a
      000020 3E               [12]  650 	addc	a, r6
      000021 FB               [12]  651 	mov	r3,a
      000022 8F 04            [24]  652 	mov	ar4,r7
      000024 8A 82            [24]  653 	mov	dpl,r2
      000026 8B 83            [24]  654 	mov	dph,r3
      000028 8C F0            [24]  655 	mov	b,r4
      00002A E4               [12]  656 	clr	a
      00002B 12r00r00         [24]  657 	lcall	__gptrput
                                    658 ;	tcp.c:14: buffer[IP_CHECKSUM_P + 1] = 0;
      00002E 74 19            [12]  659 	mov	a,#0x19
      000030 2D               [12]  660 	add	a, r5
      000031 FA               [12]  661 	mov	r2,a
      000032 E4               [12]  662 	clr	a
      000033 3E               [12]  663 	addc	a, r6
      000034 FB               [12]  664 	mov	r3,a
      000035 8F 04            [24]  665 	mov	ar4,r7
      000037 8A 82            [24]  666 	mov	dpl,r2
      000039 8B 83            [24]  667 	mov	dph,r3
      00003B 8C F0            [24]  668 	mov	b,r4
      00003D E4               [12]  669 	clr	a
      00003E 12r00r00         [24]  670 	lcall	__gptrput
                                    671 ;	tcp.c:18: uint32_t sum = 0;
      000041 90r00r03         [24]  672 	mov	dptr,#_calculateIPChecksum_sum_10001_120
      000044 F0               [24]  673 	movx	@dptr,a
      000045 A3               [24]  674 	inc	dptr
      000046 F0               [24]  675 	movx	@dptr,a
      000047 A3               [24]  676 	inc	dptr
      000048 F0               [24]  677 	movx	@dptr,a
      000049 A3               [24]  678 	inc	dptr
      00004A F0               [24]  679 	movx	@dptr,a
                                    680 ;	tcp.c:21: for (uint16_t i = IP_P; i < IP_P + length; i += 2) {
      00004B 90r00r07         [24]  681 	mov	dptr,#_calculateIPChecksum_i_20001_121
      00004E 74 0E            [12]  682 	mov	a,#0x0e
      000050 F0               [24]  683 	movx	@dptr,a
      000051 E4               [12]  684 	clr	a
      000052 A3               [24]  685 	inc	dptr
      000053 F0               [24]  686 	movx	@dptr,a
      000054                        687 00106$:
      000054 90r00r07         [24]  688 	mov	dptr,#_calculateIPChecksum_i_20001_121
      000057 E0               [24]  689 	movx	a,@dptr
      000058 FB               [12]  690 	mov	r3,a
      000059 A3               [24]  691 	inc	dptr
      00005A E0               [24]  692 	movx	a,@dptr
      00005B FC               [12]  693 	mov	r4,a
      00005C 8B 01            [24]  694 	mov	ar1,r3
      00005E 8C 02            [24]  695 	mov	ar2,r4
      000060 C3               [12]  696 	clr	c
      000061 E9               [12]  697 	mov	a,r1
      000062 94 22            [12]  698 	subb	a,#0x22
      000064 EA               [12]  699 	mov	a,r2
      000065 94 00            [12]  700 	subb	a,#0x00
      000067 40 03            [24]  701 	jc	00134$
      000069 02r00rED         [24]  702 	ljmp	00102$
      00006C                        703 00134$:
                                    704 ;	tcp.c:22: uint16_t word = (buffer[i] << 8) | buffer[i + 1];
      00006C EB               [12]  705 	mov	a,r3
      00006D 2D               [12]  706 	add	a, r5
      00006E FB               [12]  707 	mov	r3,a
      00006F EC               [12]  708 	mov	a,r4
      000070 3E               [12]  709 	addc	a, r6
      000071 F8               [12]  710 	mov	r0,a
      000072 8F 04            [24]  711 	mov	ar4,r7
      000074 8B 82            [24]  712 	mov	dpl,r3
      000076 88 83            [24]  713 	mov	dph,r0
      000078 8C F0            [24]  714 	mov	b,r4
      00007A 12r00r00         [24]  715 	lcall	__gptrget
      00007D FB               [12]  716 	mov	r3,a
      00007E 7C 00            [12]  717 	mov	r4,#0x00
      000080 8B*01            [24]  718 	mov	(_calculateIPChecksum_sloc0_1_0 + 1),r3
      000082 8C*00            [24]  719 	mov	_calculateIPChecksum_sloc0_1_0,r4
      000084 74 01            [12]  720 	mov	a,#0x01
      000086 29               [12]  721 	add	a, r1
      000087 F8               [12]  722 	mov	r0,a
      000088 E4               [12]  723 	clr	a
      000089 3A               [12]  724 	addc	a, r2
      00008A FC               [12]  725 	mov	r4,a
      00008B E8               [12]  726 	mov	a,r0
      00008C 2D               [12]  727 	add	a, r5
      00008D F8               [12]  728 	mov	r0,a
      00008E EC               [12]  729 	mov	a,r4
      00008F 3E               [12]  730 	addc	a, r6
      000090 FC               [12]  731 	mov	r4,a
      000091 8F 03            [24]  732 	mov	ar3,r7
      000093 88 82            [24]  733 	mov	dpl,r0
      000095 8C 83            [24]  734 	mov	dph,r4
      000097 8B F0            [24]  735 	mov	b,r3
      000099 12r00r00         [24]  736 	lcall	__gptrget
      00009C F8               [12]  737 	mov	r0,a
      00009D 7C 00            [12]  738 	mov	r4,#0x00
      00009F E5*01            [12]  739 	mov	a,(_calculateIPChecksum_sloc0_1_0 + 1)
      0000A1 42 04            [12]  740 	orl	ar4,a
                                    741 ;	tcp.c:23: sum += word;
      0000A3 C0 05            [24]  742 	push	ar5
      0000A5 C0 06            [24]  743 	push	ar6
      0000A7 C0 07            [24]  744 	push	ar7
      0000A9 90r00r03         [24]  745 	mov	dptr,#_calculateIPChecksum_sum_10001_120
      0000AC E0               [24]  746 	movx	a,@dptr
      0000AD F5*02            [12]  747 	mov	_calculateIPChecksum_sloc1_1_0,a
      0000AF A3               [24]  748 	inc	dptr
      0000B0 E0               [24]  749 	movx	a,@dptr
      0000B1 F5*03            [12]  750 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),a
      0000B3 A3               [24]  751 	inc	dptr
      0000B4 E0               [24]  752 	movx	a,@dptr
      0000B5 F5*04            [12]  753 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),a
      0000B7 A3               [24]  754 	inc	dptr
      0000B8 E0               [24]  755 	movx	a,@dptr
      0000B9 F5*05            [12]  756 	mov	(_calculateIPChecksum_sloc1_1_0 + 3),a
      0000BB 7E 00            [12]  757 	mov	r6,#0x00
      0000BD 7F 00            [12]  758 	mov	r7,#0x00
      0000BF 90r00r03         [24]  759 	mov	dptr,#_calculateIPChecksum_sum_10001_120
      0000C2 E8               [12]  760 	mov	a,r0
      0000C3 25*02            [12]  761 	add	a, _calculateIPChecksum_sloc1_1_0
      0000C5 F0               [24]  762 	movx	@dptr,a
      0000C6 EC               [12]  763 	mov	a,r4
      0000C7 35*03            [12]  764 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 1)
      0000C9 A3               [24]  765 	inc	dptr
      0000CA F0               [24]  766 	movx	@dptr,a
      0000CB EE               [12]  767 	mov	a,r6
      0000CC 35*04            [12]  768 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 2)
      0000CE A3               [24]  769 	inc	dptr
      0000CF F0               [24]  770 	movx	@dptr,a
      0000D0 EF               [12]  771 	mov	a,r7
      0000D1 35*05            [12]  772 	addc	a, (_calculateIPChecksum_sloc1_1_0 + 3)
      0000D3 A3               [24]  773 	inc	dptr
      0000D4 F0               [24]  774 	movx	@dptr,a
                                    775 ;	tcp.c:21: for (uint16_t i = IP_P; i < IP_P + length; i += 2) {
      0000D5 74 02            [12]  776 	mov	a,#0x02
      0000D7 29               [12]  777 	add	a, r1
      0000D8 F9               [12]  778 	mov	r1,a
      0000D9 E4               [12]  779 	clr	a
      0000DA 3A               [12]  780 	addc	a, r2
      0000DB FA               [12]  781 	mov	r2,a
      0000DC 90r00r07         [24]  782 	mov	dptr,#_calculateIPChecksum_i_20001_121
      0000DF E9               [12]  783 	mov	a,r1
      0000E0 F0               [24]  784 	movx	@dptr,a
      0000E1 EA               [12]  785 	mov	a,r2
      0000E2 A3               [24]  786 	inc	dptr
      0000E3 F0               [24]  787 	movx	@dptr,a
      0000E4 D0 07            [24]  788 	pop	ar7
      0000E6 D0 06            [24]  789 	pop	ar6
      0000E8 D0 05            [24]  790 	pop	ar5
      0000EA 02r00r54         [24]  791 	ljmp	00106$
                                    792 ;	tcp.c:27: while (sum >> 16) {
      0000ED                        793 00102$:
      0000ED 90r00r03         [24]  794 	mov	dptr,#_calculateIPChecksum_sum_10001_120
      0000F0 E0               [24]  795 	movx	a,@dptr
      0000F1 FC               [12]  796 	mov	r4,a
      0000F2 A3               [24]  797 	inc	dptr
      0000F3 E0               [24]  798 	movx	a,@dptr
      0000F4 FD               [12]  799 	mov	r5,a
      0000F5 A3               [24]  800 	inc	dptr
      0000F6 E0               [24]  801 	movx	a,@dptr
      0000F7 FE               [12]  802 	mov	r6,a
      0000F8 A3               [24]  803 	inc	dptr
      0000F9 E0               [24]  804 	movx	a,@dptr
      0000FA FF               [12]  805 	mov	r7,a
      0000FB 8E*02            [24]  806 	mov	_calculateIPChecksum_sloc1_1_0,r6
      0000FD 8F*03            [24]  807 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),r7
      0000FF E4               [12]  808 	clr	a
      000100 F5*04            [12]  809 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),a
      000102 F5*05            [12]  810 	mov	(_calculateIPChecksum_sloc1_1_0 + 3),a
      000104 E5*02            [12]  811 	mov	a,_calculateIPChecksum_sloc1_1_0
      000106 45*03            [12]  812 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 1)
      000108 45*04            [12]  813 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 2)
      00010A 45*05            [12]  814 	orl	a,(_calculateIPChecksum_sloc1_1_0 + 3)
      00010C 60 20            [24]  815 	jz	00104$
                                    816 ;	tcp.c:28: sum = (sum & 0xFFFF) + (sum >> 16);
      00010E 8C 00            [24]  817 	mov	ar0,r4
      000110 8D 01            [24]  818 	mov	ar1,r5
      000112 7A 00            [12]  819 	mov	r2,#0x00
      000114 7B 00            [12]  820 	mov	r3,#0x00
      000116 90r00r03         [24]  821 	mov	dptr,#_calculateIPChecksum_sum_10001_120
      000119 E5*02            [12]  822 	mov	a,_calculateIPChecksum_sloc1_1_0
      00011B 28               [12]  823 	add	a, r0
      00011C F0               [24]  824 	movx	@dptr,a
      00011D E5*03            [12]  825 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 1)
      00011F 39               [12]  826 	addc	a, r1
      000120 A3               [24]  827 	inc	dptr
      000121 F0               [24]  828 	movx	@dptr,a
      000122 E5*04            [12]  829 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 2)
      000124 3A               [12]  830 	addc	a, r2
      000125 A3               [24]  831 	inc	dptr
      000126 F0               [24]  832 	movx	@dptr,a
      000127 E5*05            [12]  833 	mov	a,(_calculateIPChecksum_sloc1_1_0 + 3)
      000129 3B               [12]  834 	addc	a, r3
      00012A A3               [24]  835 	inc	dptr
      00012B F0               [24]  836 	movx	@dptr,a
      00012C 80 BF            [24]  837 	sjmp	00102$
      00012E                        838 00104$:
                                    839 ;	tcp.c:32: uint16_t checksum = ~((uint16_t) sum);
      00012E EC               [12]  840 	mov	a,r4
      00012F F4               [12]  841 	cpl	a
      000130 FC               [12]  842 	mov	r4,a
      000131 ED               [12]  843 	mov	a,r5
      000132 F4               [12]  844 	cpl	a
      000133 FD               [12]  845 	mov	r5,a
                                    846 ;	tcp.c:33: buffer[IP_CHECKSUM_P] = (checksum >> 8) & 0xFF;
      000134 90r00r00         [24]  847 	mov	dptr,#_calculateIPChecksum_buffer_10000_118
      000137 E0               [24]  848 	movx	a,@dptr
      000138 FB               [12]  849 	mov	r3,a
      000139 A3               [24]  850 	inc	dptr
      00013A E0               [24]  851 	movx	a,@dptr
      00013B FE               [12]  852 	mov	r6,a
      00013C A3               [24]  853 	inc	dptr
      00013D E0               [24]  854 	movx	a,@dptr
      00013E FF               [12]  855 	mov	r7,a
      00013F 74 18            [12]  856 	mov	a,#0x18
      000141 2B               [12]  857 	add	a, r3
      000142 F5*02            [12]  858 	mov	_calculateIPChecksum_sloc1_1_0,a
      000144 E4               [12]  859 	clr	a
      000145 3E               [12]  860 	addc	a, r6
      000146 F5*03            [12]  861 	mov	(_calculateIPChecksum_sloc1_1_0 + 1),a
      000148 8F*04            [24]  862 	mov	(_calculateIPChecksum_sloc1_1_0 + 2),r7
      00014A 8D 02            [24]  863 	mov	ar2,r5
      00014C 85*02 82         [24]  864 	mov	dpl,_calculateIPChecksum_sloc1_1_0
      00014F 85*03 83         [24]  865 	mov	dph,(_calculateIPChecksum_sloc1_1_0 + 1)
      000152 85*04 F0         [24]  866 	mov	b,(_calculateIPChecksum_sloc1_1_0 + 2)
      000155 EA               [12]  867 	mov	a,r2
      000156 12r00r00         [24]  868 	lcall	__gptrput
                                    869 ;	tcp.c:34: buffer[IP_CHECKSUM_P + 1] = checksum & 0xFF;
      000159 74 19            [12]  870 	mov	a,#0x19
      00015B 2B               [12]  871 	add	a, r3
      00015C FB               [12]  872 	mov	r3,a
      00015D E4               [12]  873 	clr	a
      00015E 3E               [12]  874 	addc	a, r6
      00015F FE               [12]  875 	mov	r6,a
      000160 8B 82            [24]  876 	mov	dpl,r3
      000162 8E 83            [24]  877 	mov	dph,r6
      000164 8F F0            [24]  878 	mov	b,r7
      000166 EC               [12]  879 	mov	a,r4
                                    880 ;	tcp.c:35: }
      000167 02r00r00         [24]  881 	ljmp	__gptrput
                                    882 ;------------------------------------------------------------
                                    883 ;Allocation info for local variables in function 'calculateTcpChecksum'
                                    884 ;------------------------------------------------------------
                                    885 ;buffer                    Allocated with name '_calculateTcpChecksum_buffer_10000_125'
                                    886 ;tcpLength                 Allocated with name '_calculateTcpChecksum_tcpLength_10001_127'
                                    887 ;sum                       Allocated with name '_calculateTcpChecksum_sum_10001_127'
                                    888 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_128'
                                    889 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_130'
                                    890 ;i                         Allocated with name '_calculateTcpChecksum_i_20001_132'
                                    891 ;word                      Allocated with name '_calculateTcpChecksum_word_30001_133'
                                    892 ;checksum                  Allocated with name '_calculateTcpChecksum_checksum_10002_135'
                                    893 ;sloc0                     Allocated with name '_calculateTcpChecksum_sloc0_1_0'
                                    894 ;sloc1                     Allocated with name '_calculateTcpChecksum_sloc1_1_0'
                                    895 ;sloc2                     Allocated with name '_calculateTcpChecksum_sloc2_1_0'
                                    896 ;sloc3                     Allocated with name '_calculateTcpChecksum_sloc3_1_0'
                                    897 ;sloc4                     Allocated with name '_calculateTcpChecksum_sloc4_1_0'
                                    898 ;------------------------------------------------------------
                                    899 ;	tcp.c:37: void calculateTcpChecksum(uint8_t *buffer) {
                                    900 ;	-----------------------------------------
                                    901 ;	 function calculateTcpChecksum
                                    902 ;	-----------------------------------------
      00016A                        903 _calculateTcpChecksum:
      00016A AF F0            [24]  904 	mov	r7,b
      00016C AE 83            [24]  905 	mov	r6,dph
      00016E E5 82            [12]  906 	mov	a,dpl
      000170 90r00r09         [24]  907 	mov	dptr,#_calculateTcpChecksum_buffer_10000_125
      000173 F0               [24]  908 	movx	@dptr,a
      000174 EE               [12]  909 	mov	a,r6
      000175 A3               [24]  910 	inc	dptr
      000176 F0               [24]  911 	movx	@dptr,a
      000177 EF               [12]  912 	mov	a,r7
      000178 A3               [24]  913 	inc	dptr
      000179 F0               [24]  914 	movx	@dptr,a
                                    915 ;	tcp.c:39: buffer[TCP_CHECKSUM_H_P] = 0;
      00017A 90r00r09         [24]  916 	mov	dptr,#_calculateTcpChecksum_buffer_10000_125
      00017D E0               [24]  917 	movx	a,@dptr
      00017E FD               [12]  918 	mov	r5,a
      00017F A3               [24]  919 	inc	dptr
      000180 E0               [24]  920 	movx	a,@dptr
      000181 FE               [12]  921 	mov	r6,a
      000182 A3               [24]  922 	inc	dptr
      000183 E0               [24]  923 	movx	a,@dptr
      000184 FF               [12]  924 	mov	r7,a
      000185 74 32            [12]  925 	mov	a,#0x32
      000187 2D               [12]  926 	add	a, r5
      000188 FA               [12]  927 	mov	r2,a
      000189 E4               [12]  928 	clr	a
      00018A 3E               [12]  929 	addc	a, r6
      00018B FB               [12]  930 	mov	r3,a
      00018C 8F 04            [24]  931 	mov	ar4,r7
      00018E 8A 82            [24]  932 	mov	dpl,r2
      000190 8B 83            [24]  933 	mov	dph,r3
      000192 8C F0            [24]  934 	mov	b,r4
      000194 E4               [12]  935 	clr	a
      000195 12r00r00         [24]  936 	lcall	__gptrput
                                    937 ;	tcp.c:40: buffer[TCP_CHECKSUM_L_P] = 0;
      000198 74 33            [12]  938 	mov	a,#0x33
      00019A 2D               [12]  939 	add	a, r5
      00019B FA               [12]  940 	mov	r2,a
      00019C E4               [12]  941 	clr	a
      00019D 3E               [12]  942 	addc	a, r6
      00019E FB               [12]  943 	mov	r3,a
      00019F 8F 04            [24]  944 	mov	ar4,r7
      0001A1 8A 82            [24]  945 	mov	dpl,r2
      0001A3 8B 83            [24]  946 	mov	dph,r3
      0001A5 8C F0            [24]  947 	mov	b,r4
      0001A7 E4               [12]  948 	clr	a
      0001A8 12r00r00         [24]  949 	lcall	__gptrput
                                    950 ;	tcp.c:43: uint16_t tcpLength = (((buffer[IP_TOTLEN_H_P] << 8) | buffer[IP_TOTLEN_L_P])
      0001AB 74 10            [12]  951 	mov	a,#0x10
      0001AD 2D               [12]  952 	add	a, r5
      0001AE FA               [12]  953 	mov	r2,a
      0001AF E4               [12]  954 	clr	a
      0001B0 3E               [12]  955 	addc	a, r6
      0001B1 FB               [12]  956 	mov	r3,a
      0001B2 8F 04            [24]  957 	mov	ar4,r7
      0001B4 8A 82            [24]  958 	mov	dpl,r2
      0001B6 8B 83            [24]  959 	mov	dph,r3
      0001B8 8C F0            [24]  960 	mov	b,r4
      0001BA 12r00r00         [24]  961 	lcall	__gptrget
      0001BD FC               [12]  962 	mov	r4,a
      0001BE 7A 00            [12]  963 	mov	r2,#0x00
      0001C0 74 11            [12]  964 	mov	a,#0x11
      0001C2 2D               [12]  965 	add	a, r5
      0001C3 F8               [12]  966 	mov	r0,a
      0001C4 E4               [12]  967 	clr	a
      0001C5 3E               [12]  968 	addc	a, r6
      0001C6 F9               [12]  969 	mov	r1,a
      0001C7 8F 03            [24]  970 	mov	ar3,r7
      0001C9 88 82            [24]  971 	mov	dpl,r0
      0001CB 89 83            [24]  972 	mov	dph,r1
      0001CD 8B F0            [24]  973 	mov	b,r3
      0001CF 12r00r00         [24]  974 	lcall	__gptrget
      0001D2 7B 00            [12]  975 	mov	r3,#0x00
      0001D4 42 02            [12]  976 	orl	ar2,a
      0001D6 EB               [12]  977 	mov	a,r3
      0001D7 42 04            [12]  978 	orl	ar4,a
      0001D9 EA               [12]  979 	mov	a,r2
      0001DA 24 EC            [12]  980 	add	a,#0xec
      0001DC FA               [12]  981 	mov	r2,a
      0001DD EC               [12]  982 	mov	a,r4
      0001DE 34 FF            [12]  983 	addc	a,#0xff
      0001E0 FC               [12]  984 	mov	r4,a
                                    985 ;	tcp.c:45: uint32_t sum = 0;
      0001E1 90r00r0C         [24]  986 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      0001E4 E4               [12]  987 	clr	a
      0001E5 F0               [24]  988 	movx	@dptr,a
      0001E6 A3               [24]  989 	inc	dptr
      0001E7 F0               [24]  990 	movx	@dptr,a
      0001E8 A3               [24]  991 	inc	dptr
      0001E9 F0               [24]  992 	movx	@dptr,a
      0001EA A3               [24]  993 	inc	dptr
      0001EB F0               [24]  994 	movx	@dptr,a
                                    995 ;	tcp.c:48: for (uint8_t i = 0; i < 4; i++) {
      0001EC 90r00r10         [24]  996 	mov	dptr,#_calculateTcpChecksum_i_20001_128
      0001EF F0               [24]  997 	movx	@dptr,a
      0001F0                        998 00108$:
      0001F0 90r00r10         [24]  999 	mov	dptr,#_calculateTcpChecksum_i_20001_128
      0001F3 E0               [24] 1000 	movx	a,@dptr
      0001F4 FB               [12] 1001 	mov	r3,a
      0001F5 BB 04 00         [24] 1002 	cjne	r3,#0x04,00166$
      0001F8                       1003 00166$:
      0001F8 40 03            [24] 1004 	jc	00167$
      0001FA 02r02r8B         [24] 1005 	ljmp	00101$
      0001FD                       1006 00167$:
                                   1007 ;	tcp.c:49: sum += (buffer[IP_SRC_P + i] << 8) | buffer[IP_SRC_P + i + 1];
      0001FD C0 02            [24] 1008 	push	ar2
      0001FF C0 04            [24] 1009 	push	ar4
      000201 8B*00            [24] 1010 	mov	_calculateTcpChecksum_sloc0_1_0,r3
      000203 75*01 00         [24] 1011 	mov	(_calculateTcpChecksum_sloc0_1_0 + 1),#0x00
      000206 74 1A            [12] 1012 	mov	a,#0x1a
      000208 25*00            [12] 1013 	add	a, _calculateTcpChecksum_sloc0_1_0
      00020A FA               [12] 1014 	mov	r2,a
      00020B E4               [12] 1015 	clr	a
      00020C 35*01            [12] 1016 	addc	a, (_calculateTcpChecksum_sloc0_1_0 + 1)
      00020E FC               [12] 1017 	mov	r4,a
      00020F EA               [12] 1018 	mov	a,r2
      000210 2D               [12] 1019 	add	a, r5
      000211 FA               [12] 1020 	mov	r2,a
      000212 EC               [12] 1021 	mov	a,r4
      000213 3E               [12] 1022 	addc	a, r6
      000214 F9               [12] 1023 	mov	r1,a
      000215 8F 04            [24] 1024 	mov	ar4,r7
      000217 8A 82            [24] 1025 	mov	dpl,r2
      000219 89 83            [24] 1026 	mov	dph,r1
      00021B 8C F0            [24] 1027 	mov	b,r4
      00021D 12r00r00         [24] 1028 	lcall	__gptrget
      000220 FA               [12] 1029 	mov	r2,a
      000221 7C 00            [12] 1030 	mov	r4,#0x00
      000223 8A*03            [24] 1031 	mov	(_calculateTcpChecksum_sloc1_1_0 + 1),r2
      000225 8C*02            [24] 1032 	mov	_calculateTcpChecksum_sloc1_1_0,r4
      000227 74 1B            [12] 1033 	mov	a,#0x1b
      000229 25*00            [12] 1034 	add	a, _calculateTcpChecksum_sloc0_1_0
      00022B F8               [12] 1035 	mov	r0,a
      00022C E4               [12] 1036 	clr	a
      00022D 35*01            [12] 1037 	addc	a, (_calculateTcpChecksum_sloc0_1_0 + 1)
      00022F F9               [12] 1038 	mov	r1,a
      000230 E8               [12] 1039 	mov	a,r0
      000231 2D               [12] 1040 	add	a, r5
      000232 F8               [12] 1041 	mov	r0,a
      000233 E9               [12] 1042 	mov	a,r1
      000234 3E               [12] 1043 	addc	a, r6
      000235 F9               [12] 1044 	mov	r1,a
      000236 8F 04            [24] 1045 	mov	ar4,r7
      000238 88 82            [24] 1046 	mov	dpl,r0
      00023A 89 83            [24] 1047 	mov	dph,r1
      00023C 8C F0            [24] 1048 	mov	b,r4
      00023E 12r00r00         [24] 1049 	lcall	__gptrget
      000241 7C 00            [12] 1050 	mov	r4,#0x00
      000243 42*02            [12] 1051 	orl	_calculateTcpChecksum_sloc1_1_0,a
      000245 EC               [12] 1052 	mov	a,r4
      000246 42*03            [12] 1053 	orl	(_calculateTcpChecksum_sloc1_1_0 + 1),a
      000248 90r00r0C         [24] 1054 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      00024B E0               [24] 1055 	movx	a,@dptr
      00024C F5*04            [12] 1056 	mov	_calculateTcpChecksum_sloc2_1_0,a
      00024E A3               [24] 1057 	inc	dptr
      00024F E0               [24] 1058 	movx	a,@dptr
      000250 F5*05            [12] 1059 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),a
      000252 A3               [24] 1060 	inc	dptr
      000253 E0               [24] 1061 	movx	a,@dptr
      000254 F5*06            [12] 1062 	mov	(_calculateTcpChecksum_sloc2_1_0 + 2),a
      000256 A3               [24] 1063 	inc	dptr
      000257 E0               [24] 1064 	movx	a,@dptr
      000258 F5*07            [12] 1065 	mov	(_calculateTcpChecksum_sloc2_1_0 + 3),a
      00025A A8*02            [24] 1066 	mov	r0,_calculateTcpChecksum_sloc1_1_0
      00025C E5*03            [12] 1067 	mov	a,(_calculateTcpChecksum_sloc1_1_0 + 1)
      00025E F9               [12] 1068 	mov	r1,a
      00025F 33               [12] 1069 	rlc	a
      000260 95 E0            [12] 1070 	subb	a,acc
      000262 FA               [12] 1071 	mov	r2,a
      000263 FC               [12] 1072 	mov	r4,a
      000264 90r00r0C         [24] 1073 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000267 E8               [12] 1074 	mov	a,r0
      000268 25*04            [12] 1075 	add	a, _calculateTcpChecksum_sloc2_1_0
      00026A F0               [24] 1076 	movx	@dptr,a
      00026B E9               [12] 1077 	mov	a,r1
      00026C 35*05            [12] 1078 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      00026E A3               [24] 1079 	inc	dptr
      00026F F0               [24] 1080 	movx	@dptr,a
      000270 EA               [12] 1081 	mov	a,r2
      000271 35*06            [12] 1082 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 2)
      000273 A3               [24] 1083 	inc	dptr
      000274 F0               [24] 1084 	movx	@dptr,a
      000275 EC               [12] 1085 	mov	a,r4
      000276 35*07            [12] 1086 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 3)
      000278 A3               [24] 1087 	inc	dptr
      000279 F0               [24] 1088 	movx	@dptr,a
                                   1089 ;	tcp.c:50: i++;
      00027A 90r00r10         [24] 1090 	mov	dptr,#_calculateTcpChecksum_i_20001_128
      00027D EB               [12] 1091 	mov	a,r3
      00027E 04               [12] 1092 	inc	a
      00027F F0               [24] 1093 	movx	@dptr,a
                                   1094 ;	tcp.c:48: for (uint8_t i = 0; i < 4; i++) {
      000280 E0               [24] 1095 	movx	a,@dptr
      000281 24 01            [12] 1096 	add	a, #0x01
      000283 F0               [24] 1097 	movx	@dptr,a
      000284 D0 04            [24] 1098 	pop	ar4
      000286 D0 02            [24] 1099 	pop	ar2
      000288 02r01rF0         [24] 1100 	ljmp	00108$
      00028B                       1101 00101$:
                                   1102 ;	tcp.c:54: for (uint8_t i = 0; i < 4; i++) {
      00028B 90r00r11         [24] 1103 	mov	dptr,#_calculateTcpChecksum_i_20001_130
      00028E E4               [12] 1104 	clr	a
      00028F F0               [24] 1105 	movx	@dptr,a
      000290 90r00r09         [24] 1106 	mov	dptr,#_calculateTcpChecksum_buffer_10000_125
      000293 E0               [24] 1107 	movx	a,@dptr
      000294 FD               [12] 1108 	mov	r5,a
      000295 A3               [24] 1109 	inc	dptr
      000296 E0               [24] 1110 	movx	a,@dptr
      000297 FE               [12] 1111 	mov	r6,a
      000298 A3               [24] 1112 	inc	dptr
      000299 E0               [24] 1113 	movx	a,@dptr
      00029A FF               [12] 1114 	mov	r7,a
      00029B                       1115 00111$:
      00029B 90r00r11         [24] 1116 	mov	dptr,#_calculateTcpChecksum_i_20001_130
      00029E E0               [24] 1117 	movx	a,@dptr
      00029F FB               [12] 1118 	mov	r3,a
      0002A0 BB 04 00         [24] 1119 	cjne	r3,#0x04,00168$
      0002A3                       1120 00168$:
      0002A3 40 03            [24] 1121 	jc	00169$
      0002A5 02r03r3A         [24] 1122 	ljmp	00102$
      0002A8                       1123 00169$:
                                   1124 ;	tcp.c:55: sum += (buffer[IP_DST_P + i] << 8) | buffer[IP_DST_P + i + 1];
      0002A8 C0 02            [24] 1125 	push	ar2
      0002AA C0 04            [24] 1126 	push	ar4
      0002AC 8B*04            [24] 1127 	mov	_calculateTcpChecksum_sloc2_1_0,r3
      0002AE 75*05 00         [24] 1128 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),#0x00
      0002B1 74 1E            [12] 1129 	mov	a,#0x1e
      0002B3 25*04            [12] 1130 	add	a, _calculateTcpChecksum_sloc2_1_0
      0002B5 FA               [12] 1131 	mov	r2,a
      0002B6 E4               [12] 1132 	clr	a
      0002B7 35*05            [12] 1133 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      0002B9 FC               [12] 1134 	mov	r4,a
      0002BA EA               [12] 1135 	mov	a,r2
      0002BB 2D               [12] 1136 	add	a, r5
      0002BC FA               [12] 1137 	mov	r2,a
      0002BD EC               [12] 1138 	mov	a,r4
      0002BE 3E               [12] 1139 	addc	a, r6
      0002BF F9               [12] 1140 	mov	r1,a
      0002C0 8F 04            [24] 1141 	mov	ar4,r7
      0002C2 8A 82            [24] 1142 	mov	dpl,r2
      0002C4 89 83            [24] 1143 	mov	dph,r1
      0002C6 8C F0            [24] 1144 	mov	b,r4
      0002C8 12r00r00         [24] 1145 	lcall	__gptrget
      0002CB FA               [12] 1146 	mov	r2,a
      0002CC 7C 00            [12] 1147 	mov	r4,#0x00
      0002CE 8A*03            [24] 1148 	mov	(_calculateTcpChecksum_sloc1_1_0 + 1),r2
      0002D0 8C*02            [24] 1149 	mov	_calculateTcpChecksum_sloc1_1_0,r4
      0002D2 74 1F            [12] 1150 	mov	a,#0x1f
      0002D4 25*04            [12] 1151 	add	a, _calculateTcpChecksum_sloc2_1_0
      0002D6 F8               [12] 1152 	mov	r0,a
      0002D7 E4               [12] 1153 	clr	a
      0002D8 35*05            [12] 1154 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      0002DA F9               [12] 1155 	mov	r1,a
      0002DB E8               [12] 1156 	mov	a,r0
      0002DC 2D               [12] 1157 	add	a, r5
      0002DD F8               [12] 1158 	mov	r0,a
      0002DE E9               [12] 1159 	mov	a,r1
      0002DF 3E               [12] 1160 	addc	a, r6
      0002E0 F9               [12] 1161 	mov	r1,a
      0002E1 8F 04            [24] 1162 	mov	ar4,r7
      0002E3 88 82            [24] 1163 	mov	dpl,r0
      0002E5 89 83            [24] 1164 	mov	dph,r1
      0002E7 8C F0            [24] 1165 	mov	b,r4
      0002E9 12r00r00         [24] 1166 	lcall	__gptrget
      0002EC 7C 00            [12] 1167 	mov	r4,#0x00
      0002EE 45*02            [12] 1168 	orl	a,_calculateTcpChecksum_sloc1_1_0
      0002F0 F5*04            [12] 1169 	mov	_calculateTcpChecksum_sloc2_1_0,a
      0002F2 EC               [12] 1170 	mov	a,r4
      0002F3 45*03            [12] 1171 	orl	a,(_calculateTcpChecksum_sloc1_1_0 + 1)
      0002F5 F5*05            [12] 1172 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),a
      0002F7 90r00r0C         [24] 1173 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      0002FA E0               [24] 1174 	movx	a,@dptr
      0002FB F5*08            [12] 1175 	mov	_calculateTcpChecksum_sloc3_1_0,a
      0002FD A3               [24] 1176 	inc	dptr
      0002FE E0               [24] 1177 	movx	a,@dptr
      0002FF F5*09            [12] 1178 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      000301 A3               [24] 1179 	inc	dptr
      000302 E0               [24] 1180 	movx	a,@dptr
      000303 F5*0A            [12] 1181 	mov	(_calculateTcpChecksum_sloc3_1_0 + 2),a
      000305 A3               [24] 1182 	inc	dptr
      000306 E0               [24] 1183 	movx	a,@dptr
      000307 F5*0B            [12] 1184 	mov	(_calculateTcpChecksum_sloc3_1_0 + 3),a
      000309 A8*04            [24] 1185 	mov	r0,_calculateTcpChecksum_sloc2_1_0
      00030B E5*05            [12] 1186 	mov	a,(_calculateTcpChecksum_sloc2_1_0 + 1)
      00030D F9               [12] 1187 	mov	r1,a
      00030E 33               [12] 1188 	rlc	a
      00030F 95 E0            [12] 1189 	subb	a,acc
      000311 FA               [12] 1190 	mov	r2,a
      000312 FC               [12] 1191 	mov	r4,a
      000313 90r00r0C         [24] 1192 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000316 E8               [12] 1193 	mov	a,r0
      000317 25*08            [12] 1194 	add	a, _calculateTcpChecksum_sloc3_1_0
      000319 F0               [24] 1195 	movx	@dptr,a
      00031A E9               [12] 1196 	mov	a,r1
      00031B 35*09            [12] 1197 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 1)
      00031D A3               [24] 1198 	inc	dptr
      00031E F0               [24] 1199 	movx	@dptr,a
      00031F EA               [12] 1200 	mov	a,r2
      000320 35*0A            [12] 1201 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 2)
      000322 A3               [24] 1202 	inc	dptr
      000323 F0               [24] 1203 	movx	@dptr,a
      000324 EC               [12] 1204 	mov	a,r4
      000325 35*0B            [12] 1205 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 3)
      000327 A3               [24] 1206 	inc	dptr
      000328 F0               [24] 1207 	movx	@dptr,a
                                   1208 ;	tcp.c:56: i++;
      000329 90r00r11         [24] 1209 	mov	dptr,#_calculateTcpChecksum_i_20001_130
      00032C EB               [12] 1210 	mov	a,r3
      00032D 04               [12] 1211 	inc	a
      00032E F0               [24] 1212 	movx	@dptr,a
                                   1213 ;	tcp.c:54: for (uint8_t i = 0; i < 4; i++) {
      00032F E0               [24] 1214 	movx	a,@dptr
      000330 24 01            [12] 1215 	add	a, #0x01
      000332 F0               [24] 1216 	movx	@dptr,a
      000333 D0 04            [24] 1217 	pop	ar4
      000335 D0 02            [24] 1218 	pop	ar2
      000337 02r02r9B         [24] 1219 	ljmp	00111$
      00033A                       1220 00102$:
                                   1221 ;	tcp.c:60: sum += (uint16_t) IP_PROTO_TCP;
      00033A 90r00r0C         [24] 1222 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      00033D E0               [24] 1223 	movx	a,@dptr
      00033E FB               [12] 1224 	mov	r3,a
      00033F A3               [24] 1225 	inc	dptr
      000340 E0               [24] 1226 	movx	a,@dptr
      000341 FD               [12] 1227 	mov	r5,a
      000342 A3               [24] 1228 	inc	dptr
      000343 E0               [24] 1229 	movx	a,@dptr
      000344 FE               [12] 1230 	mov	r6,a
      000345 A3               [24] 1231 	inc	dptr
      000346 E0               [24] 1232 	movx	a,@dptr
      000347 FF               [12] 1233 	mov	r7,a
      000348 90r00r0C         [24] 1234 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      00034B 74 06            [12] 1235 	mov	a,#0x06
      00034D 2B               [12] 1236 	add	a, r3
      00034E F0               [24] 1237 	movx	@dptr,a
      00034F E4               [12] 1238 	clr	a
      000350 3D               [12] 1239 	addc	a, r5
      000351 A3               [24] 1240 	inc	dptr
      000352 F0               [24] 1241 	movx	@dptr,a
      000353 E4               [12] 1242 	clr	a
      000354 3E               [12] 1243 	addc	a, r6
      000355 A3               [24] 1244 	inc	dptr
      000356 F0               [24] 1245 	movx	@dptr,a
      000357 E4               [12] 1246 	clr	a
      000358 3F               [12] 1247 	addc	a, r7
      000359 A3               [24] 1248 	inc	dptr
      00035A F0               [24] 1249 	movx	@dptr,a
                                   1250 ;	tcp.c:61: sum += tcpLength;
      00035B 90r00r0C         [24] 1251 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      00035E E0               [24] 1252 	movx	a,@dptr
      00035F F5*08            [12] 1253 	mov	_calculateTcpChecksum_sloc3_1_0,a
      000361 A3               [24] 1254 	inc	dptr
      000362 E0               [24] 1255 	movx	a,@dptr
      000363 F5*09            [12] 1256 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      000365 A3               [24] 1257 	inc	dptr
      000366 E0               [24] 1258 	movx	a,@dptr
      000367 F5*0A            [12] 1259 	mov	(_calculateTcpChecksum_sloc3_1_0 + 2),a
      000369 A3               [24] 1260 	inc	dptr
      00036A E0               [24] 1261 	movx	a,@dptr
      00036B F5*0B            [12] 1262 	mov	(_calculateTcpChecksum_sloc3_1_0 + 3),a
      00036D 8A 00            [24] 1263 	mov	ar0,r2
      00036F 8C 01            [24] 1264 	mov	ar1,r4
      000371 7E 00            [12] 1265 	mov	r6,#0x00
      000373 7F 00            [12] 1266 	mov	r7,#0x00
      000375 90r00r0C         [24] 1267 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000378 E8               [12] 1268 	mov	a,r0
      000379 25*08            [12] 1269 	add	a, _calculateTcpChecksum_sloc3_1_0
      00037B F0               [24] 1270 	movx	@dptr,a
      00037C E9               [12] 1271 	mov	a,r1
      00037D 35*09            [12] 1272 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 1)
      00037F A3               [24] 1273 	inc	dptr
      000380 F0               [24] 1274 	movx	@dptr,a
      000381 EE               [12] 1275 	mov	a,r6
      000382 35*0A            [12] 1276 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 2)
      000384 A3               [24] 1277 	inc	dptr
      000385 F0               [24] 1278 	movx	@dptr,a
      000386 EF               [12] 1279 	mov	a,r7
      000387 35*0B            [12] 1280 	addc	a, (_calculateTcpChecksum_sloc3_1_0 + 3)
      000389 A3               [24] 1281 	inc	dptr
      00038A F0               [24] 1282 	movx	@dptr,a
                                   1283 ;	tcp.c:64: for (uint16_t i = TCP_SRC_PORT_H_P; i < TCP_SRC_PORT_H_P + tcpLength; i +=
      00038B 90r00r12         [24] 1284 	mov	dptr,#_calculateTcpChecksum_i_20001_132
      00038E 74 22            [12] 1285 	mov	a,#0x22
      000390 F0               [24] 1286 	movx	@dptr,a
      000391 E4               [12] 1287 	clr	a
      000392 A3               [24] 1288 	inc	dptr
      000393 F0               [24] 1289 	movx	@dptr,a
      000394 90r00r09         [24] 1290 	mov	dptr,#_calculateTcpChecksum_buffer_10000_125
      000397 E0               [24] 1291 	movx	a,@dptr
      000398 FD               [12] 1292 	mov	r5,a
      000399 A3               [24] 1293 	inc	dptr
      00039A E0               [24] 1294 	movx	a,@dptr
      00039B FE               [12] 1295 	mov	r6,a
      00039C A3               [24] 1296 	inc	dptr
      00039D E0               [24] 1297 	movx	a,@dptr
      00039E FF               [12] 1298 	mov	r7,a
      00039F                       1299 00114$:
      00039F 8A 01            [24] 1300 	mov	ar1,r2
      0003A1 8C 03            [24] 1301 	mov	ar3,r4
      0003A3 74 22            [12] 1302 	mov	a,#0x22
      0003A5 29               [12] 1303 	add	a, r1
      0003A6 F9               [12] 1304 	mov	r1,a
      0003A7 E4               [12] 1305 	clr	a
      0003A8 3B               [12] 1306 	addc	a, r3
      0003A9 FB               [12] 1307 	mov	r3,a
      0003AA 90r00r12         [24] 1308 	mov	dptr,#_calculateTcpChecksum_i_20001_132
      0003AD E0               [24] 1309 	movx	a,@dptr
      0003AE F5*08            [12] 1310 	mov	_calculateTcpChecksum_sloc3_1_0,a
      0003B0 A3               [24] 1311 	inc	dptr
      0003B1 E0               [24] 1312 	movx	a,@dptr
      0003B2 F5*09            [12] 1313 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),a
      0003B4 85*08*04         [24] 1314 	mov	_calculateTcpChecksum_sloc2_1_0,_calculateTcpChecksum_sloc3_1_0
      0003B7 85*09*05         [24] 1315 	mov	(_calculateTcpChecksum_sloc2_1_0 + 1),(_calculateTcpChecksum_sloc3_1_0 + 1)
      0003BA C3               [12] 1316 	clr	c
      0003BB E5*04            [12] 1317 	mov	a,_calculateTcpChecksum_sloc2_1_0
      0003BD 99               [12] 1318 	subb	a,r1
      0003BE E5*05            [12] 1319 	mov	a,(_calculateTcpChecksum_sloc2_1_0 + 1)
      0003C0 9B               [12] 1320 	subb	a,r3
      0003C1 40 03            [24] 1321 	jc	00170$
      0003C3 02r04r4D         [24] 1322 	ljmp	00104$
      0003C6                       1323 00170$:
                                   1324 ;	tcp.c:66: uint16_t word = (buffer[i] << 8) | buffer[i + 1];
      0003C6 C0 02            [24] 1325 	push	ar2
      0003C8 C0 04            [24] 1326 	push	ar4
      0003CA E5*08            [12] 1327 	mov	a,_calculateTcpChecksum_sloc3_1_0
      0003CC 2D               [12] 1328 	add	a, r5
      0003CD F8               [12] 1329 	mov	r0,a
      0003CE E5*09            [12] 1330 	mov	a,(_calculateTcpChecksum_sloc3_1_0 + 1)
      0003D0 3E               [12] 1331 	addc	a, r6
      0003D1 F9               [12] 1332 	mov	r1,a
      0003D2 8F 03            [24] 1333 	mov	ar3,r7
      0003D4 88 82            [24] 1334 	mov	dpl,r0
      0003D6 89 83            [24] 1335 	mov	dph,r1
      0003D8 8B F0            [24] 1336 	mov	b,r3
      0003DA 12r00r00         [24] 1337 	lcall	__gptrget
      0003DD FB               [12] 1338 	mov	r3,a
      0003DE 78 00            [12] 1339 	mov	r0,#0x00
      0003E0 74 01            [12] 1340 	mov	a,#0x01
      0003E2 25*04            [12] 1341 	add	a, _calculateTcpChecksum_sloc2_1_0
      0003E4 F9               [12] 1342 	mov	r1,a
      0003E5 E4               [12] 1343 	clr	a
      0003E6 35*05            [12] 1344 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      0003E8 FC               [12] 1345 	mov	r4,a
      0003E9 E9               [12] 1346 	mov	a,r1
      0003EA 2D               [12] 1347 	add	a, r5
      0003EB F9               [12] 1348 	mov	r1,a
      0003EC EC               [12] 1349 	mov	a,r4
      0003ED 3E               [12] 1350 	addc	a, r6
      0003EE FC               [12] 1351 	mov	r4,a
      0003EF 8F 02            [24] 1352 	mov	ar2,r7
      0003F1 89 82            [24] 1353 	mov	dpl,r1
      0003F3 8C 83            [24] 1354 	mov	dph,r4
      0003F5 8A F0            [24] 1355 	mov	b,r2
      0003F7 12r00r00         [24] 1356 	lcall	__gptrget
      0003FA 7C 00            [12] 1357 	mov	r4,#0x00
      0003FC 42 00            [12] 1358 	orl	ar0,a
      0003FE EC               [12] 1359 	mov	a,r4
      0003FF 42 03            [12] 1360 	orl	ar3,a
      000401 88*08            [24] 1361 	mov	_calculateTcpChecksum_sloc3_1_0,r0
      000403 8B*09            [24] 1362 	mov	(_calculateTcpChecksum_sloc3_1_0 + 1),r3
                                   1363 ;	tcp.c:67: sum += word;
      000405 90r00r0C         [24] 1364 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000408 E0               [24] 1365 	movx	a,@dptr
      000409 F5*0C            [12] 1366 	mov	_calculateTcpChecksum_sloc4_1_0,a
      00040B A3               [24] 1367 	inc	dptr
      00040C E0               [24] 1368 	movx	a,@dptr
      00040D F5*0D            [12] 1369 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),a
      00040F A3               [24] 1370 	inc	dptr
      000410 E0               [24] 1371 	movx	a,@dptr
      000411 F5*0E            [12] 1372 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),a
      000413 A3               [24] 1373 	inc	dptr
      000414 E0               [24] 1374 	movx	a,@dptr
      000415 F5*0F            [12] 1375 	mov	(_calculateTcpChecksum_sloc4_1_0 + 3),a
      000417 A8*08            [24] 1376 	mov	r0,_calculateTcpChecksum_sloc3_1_0
      000419 AA*09            [24] 1377 	mov	r2,(_calculateTcpChecksum_sloc3_1_0 + 1)
      00041B 7B 00            [12] 1378 	mov	r3,#0x00
      00041D 7C 00            [12] 1379 	mov	r4,#0x00
      00041F 90r00r0C         [24] 1380 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000422 E8               [12] 1381 	mov	a,r0
      000423 25*0C            [12] 1382 	add	a, _calculateTcpChecksum_sloc4_1_0
      000425 F0               [24] 1383 	movx	@dptr,a
      000426 EA               [12] 1384 	mov	a,r2
      000427 35*0D            [12] 1385 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 1)
      000429 A3               [24] 1386 	inc	dptr
      00042A F0               [24] 1387 	movx	@dptr,a
      00042B EB               [12] 1388 	mov	a,r3
      00042C 35*0E            [12] 1389 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 2)
      00042E A3               [24] 1390 	inc	dptr
      00042F F0               [24] 1391 	movx	@dptr,a
      000430 EC               [12] 1392 	mov	a,r4
      000431 35*0F            [12] 1393 	addc	a, (_calculateTcpChecksum_sloc4_1_0 + 3)
      000433 A3               [24] 1394 	inc	dptr
      000434 F0               [24] 1395 	movx	@dptr,a
                                   1396 ;	tcp.c:65: 2) {
      000435 74 02            [12] 1397 	mov	a,#0x02
      000437 25*04            [12] 1398 	add	a, _calculateTcpChecksum_sloc2_1_0
      000439 FB               [12] 1399 	mov	r3,a
      00043A E4               [12] 1400 	clr	a
      00043B 35*05            [12] 1401 	addc	a, (_calculateTcpChecksum_sloc2_1_0 + 1)
      00043D FC               [12] 1402 	mov	r4,a
      00043E 90r00r12         [24] 1403 	mov	dptr,#_calculateTcpChecksum_i_20001_132
      000441 EB               [12] 1404 	mov	a,r3
      000442 F0               [24] 1405 	movx	@dptr,a
      000443 EC               [12] 1406 	mov	a,r4
      000444 A3               [24] 1407 	inc	dptr
      000445 F0               [24] 1408 	movx	@dptr,a
      000446 D0 04            [24] 1409 	pop	ar4
      000448 D0 02            [24] 1410 	pop	ar2
      00044A 02r03r9F         [24] 1411 	ljmp	00114$
                                   1412 ;	tcp.c:71: while (sum >> 16) {
      00044D                       1413 00104$:
      00044D 90r00r0C         [24] 1414 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000450 E0               [24] 1415 	movx	a,@dptr
      000451 FC               [12] 1416 	mov	r4,a
      000452 A3               [24] 1417 	inc	dptr
      000453 E0               [24] 1418 	movx	a,@dptr
      000454 FD               [12] 1419 	mov	r5,a
      000455 A3               [24] 1420 	inc	dptr
      000456 E0               [24] 1421 	movx	a,@dptr
      000457 FE               [12] 1422 	mov	r6,a
      000458 A3               [24] 1423 	inc	dptr
      000459 E0               [24] 1424 	movx	a,@dptr
      00045A FF               [12] 1425 	mov	r7,a
      00045B 8E*0C            [24] 1426 	mov	_calculateTcpChecksum_sloc4_1_0,r6
      00045D 8F*0D            [24] 1427 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),r7
      00045F E4               [12] 1428 	clr	a
      000460 F5*0E            [12] 1429 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),a
      000462 F5*0F            [12] 1430 	mov	(_calculateTcpChecksum_sloc4_1_0 + 3),a
      000464 E5*0C            [12] 1431 	mov	a,_calculateTcpChecksum_sloc4_1_0
      000466 45*0D            [12] 1432 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 1)
      000468 45*0E            [12] 1433 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 2)
      00046A 45*0F            [12] 1434 	orl	a,(_calculateTcpChecksum_sloc4_1_0 + 3)
      00046C 60 20            [24] 1435 	jz	00106$
                                   1436 ;	tcp.c:72: sum = (sum & 0xFFFF) + (sum >> 16);
      00046E 8C 00            [24] 1437 	mov	ar0,r4
      000470 8D 01            [24] 1438 	mov	ar1,r5
      000472 7A 00            [12] 1439 	mov	r2,#0x00
      000474 7B 00            [12] 1440 	mov	r3,#0x00
      000476 90r00r0C         [24] 1441 	mov	dptr,#_calculateTcpChecksum_sum_10001_127
      000479 E5*0C            [12] 1442 	mov	a,_calculateTcpChecksum_sloc4_1_0
      00047B 28               [12] 1443 	add	a, r0
      00047C F0               [24] 1444 	movx	@dptr,a
      00047D E5*0D            [12] 1445 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 1)
      00047F 39               [12] 1446 	addc	a, r1
      000480 A3               [24] 1447 	inc	dptr
      000481 F0               [24] 1448 	movx	@dptr,a
      000482 E5*0E            [12] 1449 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 2)
      000484 3A               [12] 1450 	addc	a, r2
      000485 A3               [24] 1451 	inc	dptr
      000486 F0               [24] 1452 	movx	@dptr,a
      000487 E5*0F            [12] 1453 	mov	a,(_calculateTcpChecksum_sloc4_1_0 + 3)
      000489 3B               [12] 1454 	addc	a, r3
      00048A A3               [24] 1455 	inc	dptr
      00048B F0               [24] 1456 	movx	@dptr,a
      00048C 80 BF            [24] 1457 	sjmp	00104$
      00048E                       1458 00106$:
                                   1459 ;	tcp.c:76: uint16_t checksum = ~((uint16_t) sum);
      00048E EC               [12] 1460 	mov	a,r4
      00048F F4               [12] 1461 	cpl	a
      000490 FC               [12] 1462 	mov	r4,a
      000491 ED               [12] 1463 	mov	a,r5
      000492 F4               [12] 1464 	cpl	a
      000493 FD               [12] 1465 	mov	r5,a
                                   1466 ;	tcp.c:77: buffer[TCP_CHECKSUM_H_P] = (checksum >> 8) & 0xFF;
      000494 90r00r09         [24] 1467 	mov	dptr,#_calculateTcpChecksum_buffer_10000_125
      000497 E0               [24] 1468 	movx	a,@dptr
      000498 FB               [12] 1469 	mov	r3,a
      000499 A3               [24] 1470 	inc	dptr
      00049A E0               [24] 1471 	movx	a,@dptr
      00049B FE               [12] 1472 	mov	r6,a
      00049C A3               [24] 1473 	inc	dptr
      00049D E0               [24] 1474 	movx	a,@dptr
      00049E FF               [12] 1475 	mov	r7,a
      00049F 74 32            [12] 1476 	mov	a,#0x32
      0004A1 2B               [12] 1477 	add	a, r3
      0004A2 F5*0C            [12] 1478 	mov	_calculateTcpChecksum_sloc4_1_0,a
      0004A4 E4               [12] 1479 	clr	a
      0004A5 3E               [12] 1480 	addc	a, r6
      0004A6 F5*0D            [12] 1481 	mov	(_calculateTcpChecksum_sloc4_1_0 + 1),a
      0004A8 8F*0E            [24] 1482 	mov	(_calculateTcpChecksum_sloc4_1_0 + 2),r7
      0004AA 8D 02            [24] 1483 	mov	ar2,r5
      0004AC 85*0C 82         [24] 1484 	mov	dpl,_calculateTcpChecksum_sloc4_1_0
      0004AF 85*0D 83         [24] 1485 	mov	dph,(_calculateTcpChecksum_sloc4_1_0 + 1)
      0004B2 85*0E F0         [24] 1486 	mov	b,(_calculateTcpChecksum_sloc4_1_0 + 2)
      0004B5 EA               [12] 1487 	mov	a,r2
      0004B6 12r00r00         [24] 1488 	lcall	__gptrput
                                   1489 ;	tcp.c:78: buffer[TCP_CHECKSUM_L_P] = checksum & 0xFF;
      0004B9 74 33            [12] 1490 	mov	a,#0x33
      0004BB 2B               [12] 1491 	add	a, r3
      0004BC FB               [12] 1492 	mov	r3,a
      0004BD E4               [12] 1493 	clr	a
      0004BE 3E               [12] 1494 	addc	a, r6
      0004BF FE               [12] 1495 	mov	r6,a
      0004C0 8B 82            [24] 1496 	mov	dpl,r3
      0004C2 8E 83            [24] 1497 	mov	dph,r6
      0004C4 8F F0            [24] 1498 	mov	b,r7
      0004C6 EC               [12] 1499 	mov	a,r4
                                   1500 ;	tcp.c:79: }
      0004C7 02r00r00         [24] 1501 	ljmp	__gptrput
                                   1502 ;------------------------------------------------------------
                                   1503 ;Allocation info for local variables in function 'calculate_checksum'
                                   1504 ;------------------------------------------------------------
                                   1505 ;length                    Allocated with name '_calculate_checksum_PARM_2'
                                   1506 ;data                      Allocated with name '_calculate_checksum_data_10000_136'
                                   1507 ;sum                       Allocated with name '_calculate_checksum_sum_10000_137'
                                   1508 ;i                         Allocated with name '_calculate_checksum_i_20000_138'
                                   1509 ;word                      Allocated with name '_calculate_checksum_word_30000_139'
                                   1510 ;sloc0                     Allocated with name '_calculate_checksum_sloc0_1_0'
                                   1511 ;sloc1                     Allocated with name '_calculate_checksum_sloc1_1_0'
                                   1512 ;sloc2                     Allocated with name '_calculate_checksum_sloc2_1_0'
                                   1513 ;------------------------------------------------------------
                                   1514 ;	tcp.c:82: uint16_t calculate_checksum(uint8_t *data, uint16_t length) {
                                   1515 ;	-----------------------------------------
                                   1516 ;	 function calculate_checksum
                                   1517 ;	-----------------------------------------
      0004CA                       1518 _calculate_checksum:
      0004CA AF F0            [24] 1519 	mov	r7,b
      0004CC AE 83            [24] 1520 	mov	r6,dph
      0004CE E5 82            [12] 1521 	mov	a,dpl
      0004D0 90r00r16         [24] 1522 	mov	dptr,#_calculate_checksum_data_10000_136
      0004D3 F0               [24] 1523 	movx	@dptr,a
      0004D4 EE               [12] 1524 	mov	a,r6
      0004D5 A3               [24] 1525 	inc	dptr
      0004D6 F0               [24] 1526 	movx	@dptr,a
      0004D7 EF               [12] 1527 	mov	a,r7
      0004D8 A3               [24] 1528 	inc	dptr
      0004D9 F0               [24] 1529 	movx	@dptr,a
                                   1530 ;	tcp.c:83: uint32_t sum = 0;
      0004DA 90r00r19         [24] 1531 	mov	dptr,#_calculate_checksum_sum_10000_137
      0004DD E4               [12] 1532 	clr	a
      0004DE F0               [24] 1533 	movx	@dptr,a
      0004DF A3               [24] 1534 	inc	dptr
      0004E0 F0               [24] 1535 	movx	@dptr,a
      0004E1 A3               [24] 1536 	inc	dptr
      0004E2 F0               [24] 1537 	movx	@dptr,a
      0004E3 A3               [24] 1538 	inc	dptr
      0004E4 F0               [24] 1539 	movx	@dptr,a
                                   1540 ;	tcp.c:86: for (uint16_t i = 0; i < length; i += 2) {
      0004E5 90r00r1D         [24] 1541 	mov	dptr,#_calculate_checksum_i_20000_138
      0004E8 F0               [24] 1542 	movx	@dptr,a
      0004E9 A3               [24] 1543 	inc	dptr
      0004EA F0               [24] 1544 	movx	@dptr,a
      0004EB 90r00r16         [24] 1545 	mov	dptr,#_calculate_checksum_data_10000_136
      0004EE E0               [24] 1546 	movx	a,@dptr
      0004EF FD               [12] 1547 	mov	r5,a
      0004F0 A3               [24] 1548 	inc	dptr
      0004F1 E0               [24] 1549 	movx	a,@dptr
      0004F2 FE               [12] 1550 	mov	r6,a
      0004F3 A3               [24] 1551 	inc	dptr
      0004F4 E0               [24] 1552 	movx	a,@dptr
      0004F5 FF               [12] 1553 	mov	r7,a
      0004F6 90r00r14         [24] 1554 	mov	dptr,#_calculate_checksum_PARM_2
      0004F9 E0               [24] 1555 	movx	a,@dptr
      0004FA F5*00            [12] 1556 	mov	_calculate_checksum_sloc0_1_0,a
      0004FC A3               [24] 1557 	inc	dptr
      0004FD E0               [24] 1558 	movx	a,@dptr
      0004FE F5*01            [12] 1559 	mov	(_calculate_checksum_sloc0_1_0 + 1),a
      000500                       1560 00105$:
      000500 90r00r1D         [24] 1561 	mov	dptr,#_calculate_checksum_i_20000_138
      000503 E0               [24] 1562 	movx	a,@dptr
      000504 F9               [12] 1563 	mov	r1,a
      000505 A3               [24] 1564 	inc	dptr
      000506 E0               [24] 1565 	movx	a,@dptr
      000507 FA               [12] 1566 	mov	r2,a
      000508 C3               [12] 1567 	clr	c
      000509 E9               [12] 1568 	mov	a,r1
      00050A 95*00            [12] 1569 	subb	a,_calculate_checksum_sloc0_1_0
      00050C EA               [12] 1570 	mov	a,r2
      00050D 95*01            [12] 1571 	subb	a,(_calculate_checksum_sloc0_1_0 + 1)
      00050F 40 03            [24] 1572 	jc	00135$
      000511 02r06r00         [24] 1573 	ljmp	00103$
      000514                       1574 00135$:
                                   1575 ;	tcp.c:87: uint16_t word = (data[i] << 8) + (i + 1 < length ? data[i + 1] : 0);
      000514 E9               [12] 1576 	mov	a,r1
      000515 2D               [12] 1577 	add	a, r5
      000516 F8               [12] 1578 	mov	r0,a
      000517 EA               [12] 1579 	mov	a,r2
      000518 3E               [12] 1580 	addc	a, r6
      000519 FB               [12] 1581 	mov	r3,a
      00051A 8F 04            [24] 1582 	mov	ar4,r7
      00051C 88 82            [24] 1583 	mov	dpl,r0
      00051E 8B 83            [24] 1584 	mov	dph,r3
      000520 8C F0            [24] 1585 	mov	b,r4
      000522 12r00r00         [24] 1586 	lcall	__gptrget
      000525 FC               [12] 1587 	mov	r4,a
      000526 7B 00            [12] 1588 	mov	r3,#0x00
      000528 C0 05            [24] 1589 	push	ar5
      00052A C0 06            [24] 1590 	push	ar6
      00052C C0 07            [24] 1591 	push	ar7
      00052E 74 01            [12] 1592 	mov	a,#0x01
      000530 29               [12] 1593 	add	a, r1
      000531 F8               [12] 1594 	mov	r0,a
      000532 E4               [12] 1595 	clr	a
      000533 3A               [12] 1596 	addc	a, r2
      000534 FF               [12] 1597 	mov	r7,a
      000535 C3               [12] 1598 	clr	c
      000536 E8               [12] 1599 	mov	a,r0
      000537 95*00            [12] 1600 	subb	a,_calculate_checksum_sloc0_1_0
      000539 EF               [12] 1601 	mov	a,r7
      00053A 95*01            [12] 1602 	subb	a,(_calculate_checksum_sloc0_1_0 + 1)
      00053C D0 07            [24] 1603 	pop	ar7
      00053E D0 06            [24] 1604 	pop	ar6
      000540 D0 05            [24] 1605 	pop	ar5
      000542 50 1B            [24] 1606 	jnc	00109$
      000544 09               [12] 1607 	inc	r1
      000545 B9 00 01         [24] 1608 	cjne	r1,#0x00,00137$
      000548 0A               [12] 1609 	inc	r2
      000549                       1610 00137$:
      000549 E9               [12] 1611 	mov	a,r1
      00054A 2D               [12] 1612 	add	a, r5
      00054B F9               [12] 1613 	mov	r1,a
      00054C EA               [12] 1614 	mov	a,r2
      00054D 3E               [12] 1615 	addc	a, r6
      00054E F8               [12] 1616 	mov	r0,a
      00054F 8F 02            [24] 1617 	mov	ar2,r7
      000551 89 82            [24] 1618 	mov	dpl,r1
      000553 88 83            [24] 1619 	mov	dph,r0
      000555 8A F0            [24] 1620 	mov	b,r2
      000557 12r00r00         [24] 1621 	lcall	__gptrget
      00055A F9               [12] 1622 	mov	r1,a
      00055B 7A 00            [12] 1623 	mov	r2,#0x00
      00055D 80 04            [24] 1624 	sjmp	00110$
      00055F                       1625 00109$:
      00055F 79 00            [12] 1626 	mov	r1,#0x00
      000561 7A 00            [12] 1627 	mov	r2,#0x00
      000563                       1628 00110$:
      000563 C0 05            [24] 1629 	push	ar5
      000565 C0 06            [24] 1630 	push	ar6
      000567 C0 07            [24] 1631 	push	ar7
      000569 E9               [12] 1632 	mov	a,r1
      00056A 2B               [12] 1633 	add	a, r3
      00056B FB               [12] 1634 	mov	r3,a
      00056C EA               [12] 1635 	mov	a,r2
      00056D 3C               [12] 1636 	addc	a, r4
      00056E FC               [12] 1637 	mov	r4,a
                                   1638 ;	tcp.c:88: sum += word;
      00056F 90r00r19         [24] 1639 	mov	dptr,#_calculate_checksum_sum_10000_137
      000572 E0               [24] 1640 	movx	a,@dptr
      000573 F8               [12] 1641 	mov	r0,a
      000574 A3               [24] 1642 	inc	dptr
      000575 E0               [24] 1643 	movx	a,@dptr
      000576 F9               [12] 1644 	mov	r1,a
      000577 A3               [24] 1645 	inc	dptr
      000578 E0               [24] 1646 	movx	a,@dptr
      000579 FA               [12] 1647 	mov	r2,a
      00057A A3               [24] 1648 	inc	dptr
      00057B E0               [24] 1649 	movx	a,@dptr
      00057C FF               [12] 1650 	mov	r7,a
      00057D 7E 00            [12] 1651 	mov	r6,#0x00
      00057F 7D 00            [12] 1652 	mov	r5,#0x00
      000581 90r00r19         [24] 1653 	mov	dptr,#_calculate_checksum_sum_10000_137
      000584 EB               [12] 1654 	mov	a,r3
      000585 28               [12] 1655 	add	a, r0
      000586 F0               [24] 1656 	movx	@dptr,a
      000587 EC               [12] 1657 	mov	a,r4
      000588 39               [12] 1658 	addc	a, r1
      000589 A3               [24] 1659 	inc	dptr
      00058A F0               [24] 1660 	movx	@dptr,a
      00058B EE               [12] 1661 	mov	a,r6
      00058C 3A               [12] 1662 	addc	a, r2
      00058D A3               [24] 1663 	inc	dptr
      00058E F0               [24] 1664 	movx	@dptr,a
      00058F ED               [12] 1665 	mov	a,r5
      000590 3F               [12] 1666 	addc	a, r7
      000591 A3               [24] 1667 	inc	dptr
      000592 F0               [24] 1668 	movx	@dptr,a
                                   1669 ;	tcp.c:91: if (sum > 0xFFFF) {
      000593 90r00r19         [24] 1670 	mov	dptr,#_calculate_checksum_sum_10000_137
      000596 E0               [24] 1671 	movx	a,@dptr
      000597 F5*02            [12] 1672 	mov	_calculate_checksum_sloc1_1_0,a
      000599 A3               [24] 1673 	inc	dptr
      00059A E0               [24] 1674 	movx	a,@dptr
      00059B F5*03            [12] 1675 	mov	(_calculate_checksum_sloc1_1_0 + 1),a
      00059D A3               [24] 1676 	inc	dptr
      00059E E0               [24] 1677 	movx	a,@dptr
      00059F F5*04            [12] 1678 	mov	(_calculate_checksum_sloc1_1_0 + 2),a
      0005A1 A3               [24] 1679 	inc	dptr
      0005A2 E0               [24] 1680 	movx	a,@dptr
      0005A3 F5*05            [12] 1681 	mov	(_calculate_checksum_sloc1_1_0 + 3),a
      0005A5 C3               [12] 1682 	clr	c
      0005A6 74 FF            [12] 1683 	mov	a,#0xff
      0005A8 95*02            [12] 1684 	subb	a,_calculate_checksum_sloc1_1_0
      0005AA 74 FF            [12] 1685 	mov	a,#0xff
      0005AC 95*03            [12] 1686 	subb	a,(_calculate_checksum_sloc1_1_0 + 1)
      0005AE E4               [12] 1687 	clr	a
      0005AF 95*04            [12] 1688 	subb	a,(_calculate_checksum_sloc1_1_0 + 2)
      0005B1 E4               [12] 1689 	clr	a
      0005B2 95*05            [12] 1690 	subb	a,(_calculate_checksum_sloc1_1_0 + 3)
      0005B4 D0 07            [24] 1691 	pop	ar7
      0005B6 D0 06            [24] 1692 	pop	ar6
      0005B8 D0 05            [24] 1693 	pop	ar5
      0005BA 50 2A            [24] 1694 	jnc	00106$
                                   1695 ;	tcp.c:92: sum = (sum & 0xFFFF) + (sum >> 16);
      0005BC 85*02*06         [24] 1696 	mov	_calculate_checksum_sloc2_1_0,_calculate_checksum_sloc1_1_0
      0005BF 85*03*07         [24] 1697 	mov	(_calculate_checksum_sloc2_1_0 + 1),(_calculate_checksum_sloc1_1_0 + 1)
      0005C2 75*08 00         [24] 1698 	mov	(_calculate_checksum_sloc2_1_0 + 2),#0x00
      0005C5 75*09 00         [24] 1699 	mov	(_calculate_checksum_sloc2_1_0 + 3),#0x00
      0005C8 A8*04            [24] 1700 	mov	r0,(_calculate_checksum_sloc1_1_0 + 2)
      0005CA AA*05            [24] 1701 	mov	r2,(_calculate_checksum_sloc1_1_0 + 3)
      0005CC 7B 00            [12] 1702 	mov	r3,#0x00
      0005CE 7C 00            [12] 1703 	mov	r4,#0x00
      0005D0 90r00r19         [24] 1704 	mov	dptr,#_calculate_checksum_sum_10000_137
      0005D3 E8               [12] 1705 	mov	a,r0
      0005D4 25*06            [12] 1706 	add	a, _calculate_checksum_sloc2_1_0
      0005D6 F0               [24] 1707 	movx	@dptr,a
      0005D7 EA               [12] 1708 	mov	a,r2
      0005D8 35*07            [12] 1709 	addc	a, (_calculate_checksum_sloc2_1_0 + 1)
      0005DA A3               [24] 1710 	inc	dptr
      0005DB F0               [24] 1711 	movx	@dptr,a
      0005DC EB               [12] 1712 	mov	a,r3
      0005DD 35*08            [12] 1713 	addc	a, (_calculate_checksum_sloc2_1_0 + 2)
      0005DF A3               [24] 1714 	inc	dptr
      0005E0 F0               [24] 1715 	movx	@dptr,a
      0005E1 EC               [12] 1716 	mov	a,r4
      0005E2 35*09            [12] 1717 	addc	a, (_calculate_checksum_sloc2_1_0 + 3)
      0005E4 A3               [24] 1718 	inc	dptr
      0005E5 F0               [24] 1719 	movx	@dptr,a
      0005E6                       1720 00106$:
                                   1721 ;	tcp.c:86: for (uint16_t i = 0; i < length; i += 2) {
      0005E6 90r00r1D         [24] 1722 	mov	dptr,#_calculate_checksum_i_20000_138
      0005E9 E0               [24] 1723 	movx	a,@dptr
      0005EA FB               [12] 1724 	mov	r3,a
      0005EB A3               [24] 1725 	inc	dptr
      0005EC E0               [24] 1726 	movx	a,@dptr
      0005ED FC               [12] 1727 	mov	r4,a
      0005EE 74 02            [12] 1728 	mov	a,#0x02
      0005F0 2B               [12] 1729 	add	a, r3
      0005F1 FB               [12] 1730 	mov	r3,a
      0005F2 E4               [12] 1731 	clr	a
      0005F3 3C               [12] 1732 	addc	a, r4
      0005F4 FC               [12] 1733 	mov	r4,a
      0005F5 90r00r1D         [24] 1734 	mov	dptr,#_calculate_checksum_i_20000_138
      0005F8 EB               [12] 1735 	mov	a,r3
      0005F9 F0               [24] 1736 	movx	@dptr,a
      0005FA EC               [12] 1737 	mov	a,r4
      0005FB A3               [24] 1738 	inc	dptr
      0005FC F0               [24] 1739 	movx	@dptr,a
      0005FD 02r05r00         [24] 1740 	ljmp	00105$
      000600                       1741 00103$:
                                   1742 ;	tcp.c:97: sum = (sum & 0xFFFF) + (sum >> 16);
      000600 90r00r19         [24] 1743 	mov	dptr,#_calculate_checksum_sum_10000_137
      000603 E0               [24] 1744 	movx	a,@dptr
      000604 FC               [12] 1745 	mov	r4,a
      000605 A3               [24] 1746 	inc	dptr
      000606 E0               [24] 1747 	movx	a,@dptr
      000607 FD               [12] 1748 	mov	r5,a
      000608 A3               [24] 1749 	inc	dptr
      000609 E0               [24] 1750 	movx	a,@dptr
      00060A FE               [12] 1751 	mov	r6,a
      00060B A3               [24] 1752 	inc	dptr
      00060C E0               [24] 1753 	movx	a,@dptr
      00060D FF               [12] 1754 	mov	r7,a
      00060E 8C 00            [24] 1755 	mov	ar0,r4
      000610 8D 01            [24] 1756 	mov	ar1,r5
      000612 7A 00            [12] 1757 	mov	r2,#0x00
      000614 7B 00            [12] 1758 	mov	r3,#0x00
      000616 8E 04            [24] 1759 	mov	ar4,r6
      000618 8F 05            [24] 1760 	mov	ar5,r7
      00061A 7E 00            [12] 1761 	mov	r6,#0x00
      00061C 7F 00            [12] 1762 	mov	r7,#0x00
      00061E 90r00r19         [24] 1763 	mov	dptr,#_calculate_checksum_sum_10000_137
      000621 EC               [12] 1764 	mov	a,r4
      000622 28               [12] 1765 	add	a, r0
      000623 F0               [24] 1766 	movx	@dptr,a
      000624 ED               [12] 1767 	mov	a,r5
      000625 39               [12] 1768 	addc	a, r1
      000626 A3               [24] 1769 	inc	dptr
      000627 F0               [24] 1770 	movx	@dptr,a
      000628 EE               [12] 1771 	mov	a,r6
      000629 3A               [12] 1772 	addc	a, r2
      00062A A3               [24] 1773 	inc	dptr
      00062B F0               [24] 1774 	movx	@dptr,a
      00062C EF               [12] 1775 	mov	a,r7
      00062D 3B               [12] 1776 	addc	a, r3
      00062E A3               [24] 1777 	inc	dptr
      00062F F0               [24] 1778 	movx	@dptr,a
                                   1779 ;	tcp.c:100: return ~sum;
      000630 90r00r19         [24] 1780 	mov	dptr,#_calculate_checksum_sum_10000_137
      000633 E0               [24] 1781 	movx	a,@dptr
      000634 FC               [12] 1782 	mov	r4,a
      000635 A3               [24] 1783 	inc	dptr
      000636 E0               [24] 1784 	movx	a,@dptr
      000637 FD               [12] 1785 	mov	r5,a
      000638 A3               [24] 1786 	inc	dptr
      000639 E0               [24] 1787 	movx	a,@dptr
      00063A FE               [12] 1788 	mov	r6,a
      00063B A3               [24] 1789 	inc	dptr
      00063C E0               [24] 1790 	movx	a,@dptr
      00063D FF               [12] 1791 	mov	r7,a
      00063E EC               [12] 1792 	mov	a,r4
      00063F F4               [12] 1793 	cpl	a
      000640 FC               [12] 1794 	mov	r4,a
      000641 ED               [12] 1795 	mov	a,r5
      000642 F4               [12] 1796 	cpl	a
      000643 FD               [12] 1797 	mov	r5,a
      000644 EE               [12] 1798 	mov	a,r6
      000645 F4               [12] 1799 	cpl	a
      000646 EF               [12] 1800 	mov	a,r7
      000647 F4               [12] 1801 	cpl	a
      000648 8C 82            [24] 1802 	mov	dpl, r4
      00064A 8D 83            [24] 1803 	mov	dph, r5
                                   1804 ;	tcp.c:101: }
      00064C 22               [24] 1805 	ret
                                   1806 ;------------------------------------------------------------
                                   1807 ;Allocation info for local variables in function 'process_tcp_packet'
                                   1808 ;------------------------------------------------------------
                                   1809 ;sloc0                     Allocated with name '_process_tcp_packet_sloc0_1_0'
                                   1810 ;packet_size               Allocated with name '_process_tcp_packet_PARM_2'
                                   1811 ;response_size             Allocated with name '_process_tcp_packet_PARM_3'
                                   1812 ;packet                    Allocated with name '_process_tcp_packet_packet_10000_141'
                                   1813 ;response                  Allocated with name '_process_tcp_packet_response_10000_142'
                                   1814 ;data_start                Allocated with name '_process_tcp_packet_data_start_10001_143'
                                   1815 ;ethernet_header           Allocated with name '_process_tcp_packet_ethernet_header_10001_143'
                                   1816 ;response_ethernet_header  Allocated with name '_process_tcp_packet_response_ethernet_header_10001_143'
                                   1817 ;ip_header                 Allocated with name '_process_tcp_packet_ip_header_10002_144'
                                   1818 ;response_ip_header        Allocated with name '_process_tcp_packet_response_ip_header_10002_144'
                                   1819 ;tcp_header                Allocated with name '_process_tcp_packet_tcp_header_10003_145'
                                   1820 ;response_tcp_header       Allocated with name '_process_tcp_packet_response_tcp_header_10003_145'
                                   1821 ;SYN_SEQ3                  Allocated with name '_process_tcp_packet_SYN_SEQ3_10004_146'
                                   1822 ;SYN_SEQ2                  Allocated with name '_process_tcp_packet_SYN_SEQ2_10004_146'
                                   1823 ;SYN_SEQ1                  Allocated with name '_process_tcp_packet_SYN_SEQ1_10004_146'
                                   1824 ;SYN_SEQ0                  Allocated with name '_process_tcp_packet_SYN_SEQ0_10004_146'
                                   1825 ;tcp_length                Allocated with name '_process_tcp_packet_tcp_length_10005_147'
                                   1826 ;ip_total_length           Allocated with name '_process_tcp_packet_ip_total_length_10005_147'
                                   1827 ;------------------------------------------------------------
                                   1828 ;	tcp.c:102: uint8_t* process_tcp_packet(uint8_t *packet, uint16_t packet_size, uint16_t *response_size) {
                                   1829 ;	-----------------------------------------
                                   1830 ;	 function process_tcp_packet
                                   1831 ;	-----------------------------------------
      00064D                       1832 _process_tcp_packet:
      00064D AF F0            [24] 1833 	mov	r7,b
      00064F AE 83            [24] 1834 	mov	r6,dph
      000651 E5 82            [12] 1835 	mov	a,dpl
      000653 90r00r24         [24] 1836 	mov	dptr,#_process_tcp_packet_packet_10000_141
      000656 F0               [24] 1837 	movx	@dptr,a
      000657 EE               [12] 1838 	mov	a,r6
      000658 A3               [24] 1839 	inc	dptr
      000659 F0               [24] 1840 	movx	@dptr,a
      00065A EF               [12] 1841 	mov	a,r7
      00065B A3               [24] 1842 	inc	dptr
      00065C F0               [24] 1843 	movx	@dptr,a
                                   1844 ;	tcp.c:104: memset(response, 0, MAX_PACKET_SIZE + 1);      // Clear the response buffer
      00065D 90r00r00         [24] 1845 	mov	dptr,#_memset_PARM_2
      000660 E4               [12] 1846 	clr	a
      000661 F0               [24] 1847 	movx	@dptr,a
      000662 90r00r00         [24] 1848 	mov	dptr,#_memset_PARM_3
      000665 74 DD            [12] 1849 	mov	a,#0xdd
      000667 F0               [24] 1850 	movx	@dptr,a
      000668 74 05            [12] 1851 	mov	a,#0x05
      00066A A3               [24] 1852 	inc	dptr
      00066B F0               [24] 1853 	movx	@dptr,a
      00066C 90r00r27         [24] 1854 	mov	dptr,#_process_tcp_packet_response_10000_142
      00066F 75 F0 00         [24] 1855 	mov	b, #0x00
      000672 12r00r00         [24] 1856 	lcall	_memset
                                   1857 ;	tcp.c:106: response[0] = 0x0E;  // Ensure the first byte of the response is always 0x0E
      000675 90r00r27         [24] 1858 	mov	dptr,#_process_tcp_packet_response_10000_142
      000678 74 0E            [12] 1859 	mov	a,#0x0e
      00067A F0               [24] 1860 	movx	@dptr,a
                                   1861 ;	tcp.c:109: uint8_t *data_start = response + 1;
                                   1862 ;	tcp.c:112: uint8_t *ethernet_header = packet;
      00067B 90r00r24         [24] 1863 	mov	dptr,#_process_tcp_packet_packet_10000_141
      00067E E0               [24] 1864 	movx	a,@dptr
      00067F FD               [12] 1865 	mov	r5,a
      000680 A3               [24] 1866 	inc	dptr
      000681 E0               [24] 1867 	movx	a,@dptr
      000682 FE               [12] 1868 	mov	r6,a
      000683 A3               [24] 1869 	inc	dptr
      000684 E0               [24] 1870 	movx	a,@dptr
      000685 FF               [12] 1871 	mov	r7,a
                                   1872 ;	tcp.c:114: memcpy(response_ethernet_header, ethernet_header, ETHERNET_HEADER_SIZE);
      000686 8D 02            [24] 1873 	mov	ar2,r5
      000688 8E 03            [24] 1874 	mov	ar3,r6
      00068A 8F 04            [24] 1875 	mov	ar4,r7
      00068C 90r00r00         [24] 1876 	mov	dptr,#___memcpy_PARM_2
      00068F EA               [12] 1877 	mov	a,r2
      000690 F0               [24] 1878 	movx	@dptr,a
      000691 EB               [12] 1879 	mov	a,r3
      000692 A3               [24] 1880 	inc	dptr
      000693 F0               [24] 1881 	movx	@dptr,a
      000694 EC               [12] 1882 	mov	a,r4
      000695 A3               [24] 1883 	inc	dptr
      000696 F0               [24] 1884 	movx	@dptr,a
      000697 90r00r00         [24] 1885 	mov	dptr,#___memcpy_PARM_3
      00069A 74 0E            [12] 1886 	mov	a,#0x0e
      00069C F0               [24] 1887 	movx	@dptr,a
      00069D E4               [12] 1888 	clr	a
      00069E A3               [24] 1889 	inc	dptr
      00069F F0               [24] 1890 	movx	@dptr,a
      0006A0 90r00r28         [24] 1891 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0001)
      0006A3 F5 F0            [12] 1892 	mov	b,a
      0006A5 C0 07            [24] 1893 	push	ar7
      0006A7 C0 06            [24] 1894 	push	ar6
      0006A9 C0 05            [24] 1895 	push	ar5
      0006AB 12r00r00         [24] 1896 	lcall	___memcpy
      0006AE D0 05            [24] 1897 	pop	ar5
      0006B0 D0 06            [24] 1898 	pop	ar6
      0006B2 D0 07            [24] 1899 	pop	ar7
                                   1900 ;	tcp.c:117: memcpy(response_ethernet_header, ethernet_header + 6, 6);  // Destination MAC
      0006B4 74 06            [12] 1901 	mov	a,#0x06
      0006B6 2D               [12] 1902 	add	a, r5
      0006B7 FA               [12] 1903 	mov	r2,a
      0006B8 E4               [12] 1904 	clr	a
      0006B9 3E               [12] 1905 	addc	a, r6
      0006BA FB               [12] 1906 	mov	r3,a
      0006BB 8F 04            [24] 1907 	mov	ar4,r7
      0006BD 90r00r00         [24] 1908 	mov	dptr,#___memcpy_PARM_2
      0006C0 EA               [12] 1909 	mov	a,r2
      0006C1 F0               [24] 1910 	movx	@dptr,a
      0006C2 EB               [12] 1911 	mov	a,r3
      0006C3 A3               [24] 1912 	inc	dptr
      0006C4 F0               [24] 1913 	movx	@dptr,a
      0006C5 EC               [12] 1914 	mov	a,r4
      0006C6 A3               [24] 1915 	inc	dptr
      0006C7 F0               [24] 1916 	movx	@dptr,a
      0006C8 90r00r00         [24] 1917 	mov	dptr,#___memcpy_PARM_3
      0006CB 74 06            [12] 1918 	mov	a,#0x06
      0006CD F0               [24] 1919 	movx	@dptr,a
      0006CE E4               [12] 1920 	clr	a
      0006CF A3               [24] 1921 	inc	dptr
      0006D0 F0               [24] 1922 	movx	@dptr,a
      0006D1 90r00r28         [24] 1923 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0001)
      0006D4 F5 F0            [12] 1924 	mov	b,a
      0006D6 C0 07            [24] 1925 	push	ar7
      0006D8 C0 06            [24] 1926 	push	ar6
      0006DA C0 05            [24] 1927 	push	ar5
      0006DC 12r00r00         [24] 1928 	lcall	___memcpy
      0006DF D0 05            [24] 1929 	pop	ar5
      0006E1 D0 06            [24] 1930 	pop	ar6
      0006E3 D0 07            [24] 1931 	pop	ar7
                                   1932 ;	tcp.c:118: memcpy(response_ethernet_header + 6, ethernet_header, 6);  // Source MAC
      0006E5 8D 02            [24] 1933 	mov	ar2,r5
      0006E7 8E 03            [24] 1934 	mov	ar3,r6
      0006E9 8F 04            [24] 1935 	mov	ar4,r7
      0006EB 90r00r00         [24] 1936 	mov	dptr,#___memcpy_PARM_2
      0006EE EA               [12] 1937 	mov	a,r2
      0006EF F0               [24] 1938 	movx	@dptr,a
      0006F0 EB               [12] 1939 	mov	a,r3
      0006F1 A3               [24] 1940 	inc	dptr
      0006F2 F0               [24] 1941 	movx	@dptr,a
      0006F3 EC               [12] 1942 	mov	a,r4
      0006F4 A3               [24] 1943 	inc	dptr
      0006F5 F0               [24] 1944 	movx	@dptr,a
      0006F6 90r00r00         [24] 1945 	mov	dptr,#___memcpy_PARM_3
      0006F9 74 06            [12] 1946 	mov	a,#0x06
      0006FB F0               [24] 1947 	movx	@dptr,a
      0006FC E4               [12] 1948 	clr	a
      0006FD A3               [24] 1949 	inc	dptr
      0006FE F0               [24] 1950 	movx	@dptr,a
      0006FF 90r00r2E         [24] 1951 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0007)
      000702 F5 F0            [12] 1952 	mov	b,a
      000704 C0 07            [24] 1953 	push	ar7
      000706 C0 06            [24] 1954 	push	ar6
      000708 C0 05            [24] 1955 	push	ar5
      00070A 12r00r00         [24] 1956 	lcall	___memcpy
      00070D D0 05            [24] 1957 	pop	ar5
      00070F D0 06            [24] 1958 	pop	ar6
      000711 D0 07            [24] 1959 	pop	ar7
                                   1960 ;	tcp.c:121: uint8_t *ip_header = packet + ETHERNET_HEADER_SIZE;
      000713 74 0E            [12] 1961 	mov	a,#0x0e
      000715 2D               [12] 1962 	add	a, r5
      000716 FA               [12] 1963 	mov	r2,a
      000717 E4               [12] 1964 	clr	a
      000718 3E               [12] 1965 	addc	a, r6
      000719 FB               [12] 1966 	mov	r3,a
      00071A 8F 04            [24] 1967 	mov	ar4,r7
                                   1968 ;	tcp.c:122: uint8_t *response_ip_header = data_start + ETHERNET_HEADER_SIZE;
                                   1969 ;	tcp.c:125: memcpy(response_ip_header, ip_header, IP_HEADER_SIZE);
      00071C 90r00r00         [24] 1970 	mov	dptr,#___memcpy_PARM_2
      00071F EA               [12] 1971 	mov	a,r2
      000720 F0               [24] 1972 	movx	@dptr,a
      000721 EB               [12] 1973 	mov	a,r3
      000722 A3               [24] 1974 	inc	dptr
      000723 F0               [24] 1975 	movx	@dptr,a
      000724 EC               [12] 1976 	mov	a,r4
      000725 A3               [24] 1977 	inc	dptr
      000726 F0               [24] 1978 	movx	@dptr,a
      000727 90r00r00         [24] 1979 	mov	dptr,#___memcpy_PARM_3
      00072A 74 14            [12] 1980 	mov	a,#0x14
      00072C F0               [24] 1981 	movx	@dptr,a
      00072D E4               [12] 1982 	clr	a
      00072E A3               [24] 1983 	inc	dptr
      00072F F0               [24] 1984 	movx	@dptr,a
      000730 90r00r36         [24] 1985 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x000f)
      000733 F5 F0            [12] 1986 	mov	b,a
      000735 C0 07            [24] 1987 	push	ar7
      000737 C0 06            [24] 1988 	push	ar6
      000739 C0 05            [24] 1989 	push	ar5
      00073B 12r00r00         [24] 1990 	lcall	___memcpy
      00073E D0 05            [24] 1991 	pop	ar5
      000740 D0 06            [24] 1992 	pop	ar6
      000742 D0 07            [24] 1993 	pop	ar7
                                   1994 ;	tcp.c:126: response_ip_header[12] = ip_header[16];  // Swap Source IP
      000744 74 1E            [12] 1995 	mov	a,#0x1e
      000746 2D               [12] 1996 	add	a, r5
      000747 FA               [12] 1997 	mov	r2,a
      000748 E4               [12] 1998 	clr	a
      000749 3E               [12] 1999 	addc	a, r6
      00074A FB               [12] 2000 	mov	r3,a
      00074B 8F 04            [24] 2001 	mov	ar4,r7
      00074D 8A 82            [24] 2002 	mov	dpl,r2
      00074F 8B 83            [24] 2003 	mov	dph,r3
      000751 8C F0            [24] 2004 	mov	b,r4
      000753 12r00r00         [24] 2005 	lcall	__gptrget
      000756 FA               [12] 2006 	mov	r2,a
      000757 90r00r42         [24] 2007 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001b)
      00075A 75 F0 00         [24] 2008 	mov	b,#0x00
      00075D EA               [12] 2009 	mov	a,r2
      00075E 12r00r00         [24] 2010 	lcall	__gptrput
                                   2011 ;	tcp.c:127: response_ip_header[13] = ip_header[17];
      000761 74 1F            [12] 2012 	mov	a,#0x1f
      000763 2D               [12] 2013 	add	a, r5
      000764 FA               [12] 2014 	mov	r2,a
      000765 E4               [12] 2015 	clr	a
      000766 3E               [12] 2016 	addc	a, r6
      000767 FB               [12] 2017 	mov	r3,a
      000768 8F 04            [24] 2018 	mov	ar4,r7
      00076A 8A 82            [24] 2019 	mov	dpl,r2
      00076C 8B 83            [24] 2020 	mov	dph,r3
      00076E 8C F0            [24] 2021 	mov	b,r4
      000770 12r00r00         [24] 2022 	lcall	__gptrget
      000773 FA               [12] 2023 	mov	r2,a
      000774 90r00r43         [24] 2024 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001c)
      000777 75 F0 00         [24] 2025 	mov	b,#0x00
      00077A EA               [12] 2026 	mov	a,r2
      00077B 12r00r00         [24] 2027 	lcall	__gptrput
                                   2028 ;	tcp.c:128: response_ip_header[14] = ip_header[18];
      00077E 74 20            [12] 2029 	mov	a,#0x20
      000780 2D               [12] 2030 	add	a, r5
      000781 FA               [12] 2031 	mov	r2,a
      000782 E4               [12] 2032 	clr	a
      000783 3E               [12] 2033 	addc	a, r6
      000784 FB               [12] 2034 	mov	r3,a
      000785 8F 04            [24] 2035 	mov	ar4,r7
      000787 8A 82            [24] 2036 	mov	dpl,r2
      000789 8B 83            [24] 2037 	mov	dph,r3
      00078B 8C F0            [24] 2038 	mov	b,r4
      00078D 12r00r00         [24] 2039 	lcall	__gptrget
      000790 FA               [12] 2040 	mov	r2,a
      000791 90r00r44         [24] 2041 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001d)
      000794 75 F0 00         [24] 2042 	mov	b,#0x00
      000797 EA               [12] 2043 	mov	a,r2
      000798 12r00r00         [24] 2044 	lcall	__gptrput
                                   2045 ;	tcp.c:129: response_ip_header[15] = ip_header[19];
      00079B 74 21            [12] 2046 	mov	a,#0x21
      00079D 2D               [12] 2047 	add	a, r5
      00079E FA               [12] 2048 	mov	r2,a
      00079F E4               [12] 2049 	clr	a
      0007A0 3E               [12] 2050 	addc	a, r6
      0007A1 FB               [12] 2051 	mov	r3,a
      0007A2 8F 04            [24] 2052 	mov	ar4,r7
      0007A4 8A 82            [24] 2053 	mov	dpl,r2
      0007A6 8B 83            [24] 2054 	mov	dph,r3
      0007A8 8C F0            [24] 2055 	mov	b,r4
      0007AA 12r00r00         [24] 2056 	lcall	__gptrget
      0007AD FA               [12] 2057 	mov	r2,a
      0007AE 90r00r45         [24] 2058 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001e)
      0007B1 75 F0 00         [24] 2059 	mov	b,#0x00
      0007B4 EA               [12] 2060 	mov	a,r2
      0007B5 12r00r00         [24] 2061 	lcall	__gptrput
                                   2062 ;	tcp.c:130: response_ip_header[16] = ip_header[12];  // Swap Destination IP
      0007B8 74 1A            [12] 2063 	mov	a,#0x1a
      0007BA 2D               [12] 2064 	add	a, r5
      0007BB FA               [12] 2065 	mov	r2,a
      0007BC E4               [12] 2066 	clr	a
      0007BD 3E               [12] 2067 	addc	a, r6
      0007BE FB               [12] 2068 	mov	r3,a
      0007BF 8F 04            [24] 2069 	mov	ar4,r7
      0007C1 8A 82            [24] 2070 	mov	dpl,r2
      0007C3 8B 83            [24] 2071 	mov	dph,r3
      0007C5 8C F0            [24] 2072 	mov	b,r4
      0007C7 12r00r00         [24] 2073 	lcall	__gptrget
      0007CA FA               [12] 2074 	mov	r2,a
      0007CB 90r00r46         [24] 2075 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001f)
      0007CE 75 F0 00         [24] 2076 	mov	b,#0x00
      0007D1 EA               [12] 2077 	mov	a,r2
      0007D2 12r00r00         [24] 2078 	lcall	__gptrput
                                   2079 ;	tcp.c:131: response_ip_header[17] = ip_header[13];
      0007D5 74 1B            [12] 2080 	mov	a,#0x1b
      0007D7 2D               [12] 2081 	add	a, r5
      0007D8 FA               [12] 2082 	mov	r2,a
      0007D9 E4               [12] 2083 	clr	a
      0007DA 3E               [12] 2084 	addc	a, r6
      0007DB FB               [12] 2085 	mov	r3,a
      0007DC 8F 04            [24] 2086 	mov	ar4,r7
      0007DE 8A 82            [24] 2087 	mov	dpl,r2
      0007E0 8B 83            [24] 2088 	mov	dph,r3
      0007E2 8C F0            [24] 2089 	mov	b,r4
      0007E4 12r00r00         [24] 2090 	lcall	__gptrget
      0007E7 FA               [12] 2091 	mov	r2,a
      0007E8 90r00r47         [24] 2092 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0020)
      0007EB 75 F0 00         [24] 2093 	mov	b,#0x00
      0007EE EA               [12] 2094 	mov	a,r2
      0007EF 12r00r00         [24] 2095 	lcall	__gptrput
                                   2096 ;	tcp.c:132: response_ip_header[18] = ip_header[14];
      0007F2 74 1C            [12] 2097 	mov	a,#0x1c
      0007F4 2D               [12] 2098 	add	a, r5
      0007F5 FA               [12] 2099 	mov	r2,a
      0007F6 E4               [12] 2100 	clr	a
      0007F7 3E               [12] 2101 	addc	a, r6
      0007F8 FB               [12] 2102 	mov	r3,a
      0007F9 8F 04            [24] 2103 	mov	ar4,r7
      0007FB 8A 82            [24] 2104 	mov	dpl,r2
      0007FD 8B 83            [24] 2105 	mov	dph,r3
      0007FF 8C F0            [24] 2106 	mov	b,r4
      000801 12r00r00         [24] 2107 	lcall	__gptrget
      000804 FA               [12] 2108 	mov	r2,a
      000805 90r00r48         [24] 2109 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0021)
      000808 75 F0 00         [24] 2110 	mov	b,#0x00
      00080B EA               [12] 2111 	mov	a,r2
      00080C 12r00r00         [24] 2112 	lcall	__gptrput
                                   2113 ;	tcp.c:133: response_ip_header[19] = ip_header[15];
      00080F 74 1D            [12] 2114 	mov	a,#0x1d
      000811 2D               [12] 2115 	add	a, r5
      000812 FA               [12] 2116 	mov	r2,a
      000813 E4               [12] 2117 	clr	a
      000814 3E               [12] 2118 	addc	a, r6
      000815 FB               [12] 2119 	mov	r3,a
      000816 8F 04            [24] 2120 	mov	ar4,r7
      000818 8A 82            [24] 2121 	mov	dpl,r2
      00081A 8B 83            [24] 2122 	mov	dph,r3
      00081C 8C F0            [24] 2123 	mov	b,r4
      00081E 12r00r00         [24] 2124 	lcall	__gptrget
      000821 FA               [12] 2125 	mov	r2,a
      000822 90r00r49         [24] 2126 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0022)
      000825 75 F0 00         [24] 2127 	mov	b,#0x00
      000828 EA               [12] 2128 	mov	a,r2
      000829 12r00r00         [24] 2129 	lcall	__gptrput
                                   2130 ;	tcp.c:134: response_ip_header[10] = 0;              // Clear checksum
      00082C 90r00r40         [24] 2131 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0019)
      00082F E4               [12] 2132 	clr	a
      000830 12r00r00         [24] 2133 	lcall	__gptrput
                                   2134 ;	tcp.c:135: response_ip_header[11] = 0;
      000833 90r00r41         [24] 2135 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x001a)
      000836 F5 F0            [12] 2136 	mov	b,a
      000838 12r00r00         [24] 2137 	lcall	__gptrput
                                   2138 ;	tcp.c:138: uint8_t *tcp_header = packet + ETHERNET_HEADER_SIZE + IP_HEADER_SIZE;
      00083B 74 22            [12] 2139 	mov	a,#0x22
      00083D 2D               [12] 2140 	add	a, r5
      00083E F5*00            [12] 2141 	mov	_process_tcp_packet_sloc0_1_0,a
      000840 E4               [12] 2142 	clr	a
      000841 3E               [12] 2143 	addc	a, r6
      000842 F5*01            [12] 2144 	mov	(_process_tcp_packet_sloc0_1_0 + 1),a
      000844 8F*02            [24] 2145 	mov	(_process_tcp_packet_sloc0_1_0 + 2),r7
                                   2146 ;	tcp.c:139: uint8_t *response_tcp_header = data_start + ETHERNET_HEADER_SIZE + IP_HEADER_SIZE;
                                   2147 ;	tcp.c:142: memcpy(response_tcp_header, tcp_header, TCP_HEADER_SIZE);
      000846 A8*00            [24] 2148 	mov	r0,_process_tcp_packet_sloc0_1_0
      000848 A9*01            [24] 2149 	mov	r1,(_process_tcp_packet_sloc0_1_0 + 1)
      00084A AC*02            [24] 2150 	mov	r4,(_process_tcp_packet_sloc0_1_0 + 2)
      00084C 90r00r00         [24] 2151 	mov	dptr,#___memcpy_PARM_2
      00084F E8               [12] 2152 	mov	a,r0
      000850 F0               [24] 2153 	movx	@dptr,a
      000851 E9               [12] 2154 	mov	a,r1
      000852 A3               [24] 2155 	inc	dptr
      000853 F0               [24] 2156 	movx	@dptr,a
      000854 EC               [12] 2157 	mov	a,r4
      000855 A3               [24] 2158 	inc	dptr
      000856 F0               [24] 2159 	movx	@dptr,a
      000857 90r00r00         [24] 2160 	mov	dptr,#___memcpy_PARM_3
      00085A 74 14            [12] 2161 	mov	a,#0x14
      00085C F0               [24] 2162 	movx	@dptr,a
      00085D E4               [12] 2163 	clr	a
      00085E A3               [24] 2164 	inc	dptr
      00085F F0               [24] 2165 	movx	@dptr,a
      000860 90r00r4A         [24] 2166 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0023)
      000863 F5 F0            [12] 2167 	mov	b,a
      000865 C0 07            [24] 2168 	push	ar7
      000867 C0 06            [24] 2169 	push	ar6
      000869 C0 05            [24] 2170 	push	ar5
      00086B 12r00r00         [24] 2171 	lcall	___memcpy
      00086E D0 05            [24] 2172 	pop	ar5
      000870 D0 06            [24] 2173 	pop	ar6
      000872 D0 07            [24] 2174 	pop	ar7
                                   2175 ;	tcp.c:143: response_tcp_header[0] = tcp_header[2];  // Swap Source Port
      000874 74 24            [12] 2176 	mov	a,#0x24
      000876 2D               [12] 2177 	add	a, r5
      000877 FA               [12] 2178 	mov	r2,a
      000878 E4               [12] 2179 	clr	a
      000879 3E               [12] 2180 	addc	a, r6
      00087A FB               [12] 2181 	mov	r3,a
      00087B 8F 04            [24] 2182 	mov	ar4,r7
      00087D 8A 82            [24] 2183 	mov	dpl,r2
      00087F 8B 83            [24] 2184 	mov	dph,r3
      000881 8C F0            [24] 2185 	mov	b,r4
      000883 12r00r00         [24] 2186 	lcall	__gptrget
      000886 FA               [12] 2187 	mov	r2,a
      000887 90r00r4A         [24] 2188 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0023)
      00088A 75 F0 00         [24] 2189 	mov	b,#0x00
      00088D EA               [12] 2190 	mov	a,r2
      00088E 12r00r00         [24] 2191 	lcall	__gptrput
                                   2192 ;	tcp.c:144: response_tcp_header[1] = tcp_header[3];
      000891 74 25            [12] 2193 	mov	a,#0x25
      000893 2D               [12] 2194 	add	a, r5
      000894 FA               [12] 2195 	mov	r2,a
      000895 E4               [12] 2196 	clr	a
      000896 3E               [12] 2197 	addc	a, r6
      000897 FB               [12] 2198 	mov	r3,a
      000898 8F 04            [24] 2199 	mov	ar4,r7
      00089A 8A 82            [24] 2200 	mov	dpl,r2
      00089C 8B 83            [24] 2201 	mov	dph,r3
      00089E 8C F0            [24] 2202 	mov	b,r4
      0008A0 12r00r00         [24] 2203 	lcall	__gptrget
      0008A3 FA               [12] 2204 	mov	r2,a
      0008A4 90r00r4B         [24] 2205 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0024)
      0008A7 75 F0 00         [24] 2206 	mov	b,#0x00
      0008AA EA               [12] 2207 	mov	a,r2
      0008AB 12r00r00         [24] 2208 	lcall	__gptrput
                                   2209 ;	tcp.c:145: response_tcp_header[2] = tcp_header[0];  // Swap Destination Port
      0008AE 85*00 82         [24] 2210 	mov	dpl,_process_tcp_packet_sloc0_1_0
      0008B1 85*01 83         [24] 2211 	mov	dph,(_process_tcp_packet_sloc0_1_0 + 1)
      0008B4 85*02 F0         [24] 2212 	mov	b,(_process_tcp_packet_sloc0_1_0 + 2)
      0008B7 12r00r00         [24] 2213 	lcall	__gptrget
      0008BA FC               [12] 2214 	mov	r4,a
      0008BB 90r00r4C         [24] 2215 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0025)
      0008BE 75 F0 00         [24] 2216 	mov	b,#0x00
      0008C1 EC               [12] 2217 	mov	a,r4
      0008C2 12r00r00         [24] 2218 	lcall	__gptrput
                                   2219 ;	tcp.c:146: response_tcp_header[3] = tcp_header[1];
      0008C5 74 23            [12] 2220 	mov	a,#0x23
      0008C7 2D               [12] 2221 	add	a, r5
      0008C8 FA               [12] 2222 	mov	r2,a
      0008C9 E4               [12] 2223 	clr	a
      0008CA 3E               [12] 2224 	addc	a, r6
      0008CB FB               [12] 2225 	mov	r3,a
      0008CC 8F 04            [24] 2226 	mov	ar4,r7
      0008CE 8A 82            [24] 2227 	mov	dpl,r2
      0008D0 8B 83            [24] 2228 	mov	dph,r3
      0008D2 8C F0            [24] 2229 	mov	b,r4
      0008D4 12r00r00         [24] 2230 	lcall	__gptrget
      0008D7 FA               [12] 2231 	mov	r2,a
      0008D8 90r00r4D         [24] 2232 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0026)
      0008DB 75 F0 00         [24] 2233 	mov	b,#0x00
      0008DE EA               [12] 2234 	mov	a,r2
      0008DF 12r00r00         [24] 2235 	lcall	__gptrput
                                   2236 ;	tcp.c:148: response_tcp_header[4] = 0;
      0008E2 90r00r4E         [24] 2237 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0027)
      0008E5 E4               [12] 2238 	clr	a
      0008E6 12r00r00         [24] 2239 	lcall	__gptrput
                                   2240 ;	tcp.c:149: response_tcp_header[5] = 0;
      0008E9 90r00r4F         [24] 2241 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0028)
      0008EC F5 F0            [12] 2242 	mov	b,a
      0008EE 12r00r00         [24] 2243 	lcall	__gptrput
                                   2244 ;	tcp.c:150: response_tcp_header[6] = 0;
      0008F1 90r00r50         [24] 2245 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0029)
      0008F4 F5 F0            [12] 2246 	mov	b,a
      0008F6 12r00r00         [24] 2247 	lcall	__gptrput
                                   2248 ;	tcp.c:151: response_tcp_header[7] = 0;
      0008F9 90r00r51         [24] 2249 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002a)
      0008FC F5 F0            [12] 2250 	mov	b,a
      0008FE 12r00r00         [24] 2251 	lcall	__gptrput
                                   2252 ;	tcp.c:153: uint8_t SYN_SEQ3 = tcp_header[4];
      000901 74 26            [12] 2253 	mov	a,#0x26
      000903 2D               [12] 2254 	add	a, r5
      000904 FA               [12] 2255 	mov	r2,a
      000905 E4               [12] 2256 	clr	a
      000906 3E               [12] 2257 	addc	a, r6
      000907 FB               [12] 2258 	mov	r3,a
      000908 8F 04            [24] 2259 	mov	ar4,r7
      00090A 8A 82            [24] 2260 	mov	dpl,r2
      00090C 8B 83            [24] 2261 	mov	dph,r3
      00090E 8C F0            [24] 2262 	mov	b,r4
      000910 12r00r00         [24] 2263 	lcall	__gptrget
      000913 FA               [12] 2264 	mov	r2,a
                                   2265 ;	tcp.c:154: uint8_t SYN_SEQ2 = tcp_header[5];
      000914 74 27            [12] 2266 	mov	a,#0x27
      000916 2D               [12] 2267 	add	a, r5
      000917 F9               [12] 2268 	mov	r1,a
      000918 E4               [12] 2269 	clr	a
      000919 3E               [12] 2270 	addc	a, r6
      00091A FB               [12] 2271 	mov	r3,a
      00091B 8F 04            [24] 2272 	mov	ar4,r7
      00091D 89 82            [24] 2273 	mov	dpl,r1
      00091F 8B 83            [24] 2274 	mov	dph,r3
      000921 8C F0            [24] 2275 	mov	b,r4
      000923 12r00r00         [24] 2276 	lcall	__gptrget
      000926 F9               [12] 2277 	mov	r1,a
                                   2278 ;	tcp.c:155: uint8_t SYN_SEQ1 = tcp_header[6];
      000927 74 28            [12] 2279 	mov	a,#0x28
      000929 2D               [12] 2280 	add	a, r5
      00092A F8               [12] 2281 	mov	r0,a
      00092B E4               [12] 2282 	clr	a
      00092C 3E               [12] 2283 	addc	a, r6
      00092D FB               [12] 2284 	mov	r3,a
      00092E 8F 04            [24] 2285 	mov	ar4,r7
      000930 88 82            [24] 2286 	mov	dpl,r0
      000932 8B 83            [24] 2287 	mov	dph,r3
      000934 8C F0            [24] 2288 	mov	b,r4
      000936 12r00r00         [24] 2289 	lcall	__gptrget
      000939 F8               [12] 2290 	mov	r0,a
                                   2291 ;	tcp.c:156: uint8_t SYN_SEQ0 = tcp_header[7];
      00093A 74 29            [12] 2292 	mov	a,#0x29
      00093C 2D               [12] 2293 	add	a, r5
      00093D FD               [12] 2294 	mov	r5,a
      00093E E4               [12] 2295 	clr	a
      00093F 3E               [12] 2296 	addc	a, r6
      000940 FE               [12] 2297 	mov	r6,a
      000941 8D 82            [24] 2298 	mov	dpl,r5
      000943 8E 83            [24] 2299 	mov	dph,r6
      000945 8F F0            [24] 2300 	mov	b,r7
      000947 12r00r00         [24] 2301 	lcall	__gptrget
      00094A FD               [12] 2302 	mov	r5,a
                                   2303 ;	tcp.c:158: response_tcp_header[8] = SYN_SEQ3;
      00094B 90r00r52         [24] 2304 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002b)
      00094E 75 F0 00         [24] 2305 	mov	b,#0x00
      000951 EA               [12] 2306 	mov	a,r2
      000952 12r00r00         [24] 2307 	lcall	__gptrput
                                   2308 ;	tcp.c:159: response_tcp_header[9] = SYN_SEQ2;
      000955 90r00r53         [24] 2309 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002c)
      000958 E9               [12] 2310 	mov	a,r1
      000959 12r00r00         [24] 2311 	lcall	__gptrput
                                   2312 ;	tcp.c:160: response_tcp_header[10] = SYN_SEQ1;
      00095C 90r00r54         [24] 2313 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002d)
      00095F E8               [12] 2314 	mov	a,r0
      000960 12r00r00         [24] 2315 	lcall	__gptrput
                                   2316 ;	tcp.c:161: response_tcp_header[11] = SYN_SEQ0 + 1;
      000963 0D               [12] 2317 	inc	r5
      000964 90r00r55         [24] 2318 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002e)
      000967 ED               [12] 2319 	mov	a,r5
      000968 12r00r00         [24] 2320 	lcall	__gptrput
                                   2321 ;	tcp.c:167: response_tcp_header[12] = 0x50;  // SYN (0x02) + ACK (0x10)
      00096B 90r00r56         [24] 2322 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x002f)
      00096E 74 50            [12] 2323 	mov	a,#0x50
      000970 12r00r00         [24] 2324 	lcall	__gptrput
                                   2325 ;	tcp.c:169: response_tcp_header[13] = 0x12;  // SYN (0x02) + ACK (0x10)
      000973 90r00r57         [24] 2326 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0030)
      000976 74 12            [12] 2327 	mov	a,#0x12
      000978 12r00r00         [24] 2328 	lcall	__gptrput
                                   2329 ;	tcp.c:178: response_tcp_header[18] = 0;
      00097B 90r00r5C         [24] 2330 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0035)
      00097E E4               [12] 2331 	clr	a
      00097F 12r00r00         [24] 2332 	lcall	__gptrput
                                   2333 ;	tcp.c:179: response_tcp_header[19] = 0;
      000982 90r00r5D         [24] 2334 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0036)
      000985 F5 F0            [12] 2335 	mov	b,a
      000987 12r00r00         [24] 2336 	lcall	__gptrput
                                   2337 ;	tcp.c:185: response_ip_header[2] = (ip_total_length >> 8) & 0xFF;
      00098A 90r00r38         [24] 2338 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0011)
      00098D F5 F0            [12] 2339 	mov	b,a
      00098F 12r00r00         [24] 2340 	lcall	__gptrput
                                   2341 ;	tcp.c:186: response_ip_header[3] = ip_total_length & 0xFF;
      000992 90r00r39         [24] 2342 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0012)
      000995 F5 F0            [12] 2343 	mov	b,a
      000997 74 28            [12] 2344 	mov	a,#0x28
      000999 12r00r00         [24] 2345 	lcall	__gptrput
                                   2346 ;	tcp.c:189: calculateIPChecksum(data_start);
      00099C 90r00r28         [24] 2347 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0001)
      00099F 12r00r00         [24] 2348 	lcall	_calculateIPChecksum
                                   2349 ;	tcp.c:192: calculateTcpChecksum(data_start);
      0009A2 90r00r28         [24] 2350 	mov	dptr,#(_process_tcp_packet_response_10000_142 + 0x0001)
      0009A5 75 F0 00         [24] 2351 	mov	b, #0x00
      0009A8 12r01r6A         [24] 2352 	lcall	_calculateTcpChecksum
                                   2353 ;	tcp.c:215: *response_size = 1 + ETHERNET_HEADER_SIZE + ip_total_length; // Adding 4 for the MSS option size
      0009AB 90r00r21         [24] 2354 	mov	dptr,#_process_tcp_packet_PARM_3
      0009AE E0               [24] 2355 	movx	a,@dptr
      0009AF FD               [12] 2356 	mov	r5,a
      0009B0 A3               [24] 2357 	inc	dptr
      0009B1 E0               [24] 2358 	movx	a,@dptr
      0009B2 FE               [12] 2359 	mov	r6,a
      0009B3 A3               [24] 2360 	inc	dptr
      0009B4 E0               [24] 2361 	movx	a,@dptr
      0009B5 FF               [12] 2362 	mov	r7,a
      0009B6 8D 82            [24] 2363 	mov	dpl,r5
      0009B8 8E 83            [24] 2364 	mov	dph,r6
      0009BA 8F F0            [24] 2365 	mov	b,r7
      0009BC 74 37            [12] 2366 	mov	a,#0x37
      0009BE 12r00r00         [24] 2367 	lcall	__gptrput
      0009C1 A3               [24] 2368 	inc	dptr
      0009C2 E4               [12] 2369 	clr	a
      0009C3 12r00r00         [24] 2370 	lcall	__gptrput
                                   2371 ;	tcp.c:218: return response;
      0009C6 90r00r27         [24] 2372 	mov	dptr,#_process_tcp_packet_response_10000_142
      0009C9 F5 F0            [12] 2373 	mov	b,a
                                   2374 ;	tcp.c:219: }
      0009CB 22               [24] 2375 	ret
                                   2376 ;------------------------------------------------------------
                                   2377 ;Allocation info for local variables in function 'print_hexdump'
                                   2378 ;------------------------------------------------------------
                                   2379 ;size                      Allocated with name '_print_hexdump_PARM_2'
                                   2380 ;data                      Allocated with name '_print_hexdump_data_10000_148'
                                   2381 ;i                         Allocated with name '_print_hexdump_i_20000_150'
                                   2382 ;------------------------------------------------------------
                                   2383 ;	tcp.c:223: void print_hexdump(const uint8_t *data, uint16_t size) {
                                   2384 ;	-----------------------------------------
                                   2385 ;	 function print_hexdump
                                   2386 ;	-----------------------------------------
      0009CC                       2387 _print_hexdump:
      0009CC AF F0            [24] 2388 	mov	r7,b
      0009CE AE 83            [24] 2389 	mov	r6,dph
      0009D0 E5 82            [12] 2390 	mov	a,dpl
      0009D2 90r06r06         [24] 2391 	mov	dptr,#_print_hexdump_data_10000_148
      0009D5 F0               [24] 2392 	movx	@dptr,a
      0009D6 EE               [12] 2393 	mov	a,r6
      0009D7 A3               [24] 2394 	inc	dptr
      0009D8 F0               [24] 2395 	movx	@dptr,a
      0009D9 EF               [12] 2396 	mov	a,r7
      0009DA A3               [24] 2397 	inc	dptr
      0009DB F0               [24] 2398 	movx	@dptr,a
                                   2399 ;	tcp.c:224: printf("\nHexdump (Size: %d):\n", size);
      0009DC 90r06r04         [24] 2400 	mov	dptr,#_print_hexdump_PARM_2
      0009DF E0               [24] 2401 	movx	a,@dptr
      0009E0 FE               [12] 2402 	mov	r6,a
      0009E1 A3               [24] 2403 	inc	dptr
      0009E2 E0               [24] 2404 	movx	a,@dptr
      0009E3 FF               [12] 2405 	mov	r7,a
      0009E4 C0 07            [24] 2406 	push	ar7
      0009E6 C0 06            [24] 2407 	push	ar6
      0009E8 C0 06            [24] 2408 	push	ar6
      0009EA C0 07            [24] 2409 	push	ar7
      0009EC 74r00            [12] 2410 	mov	a,#___str_0
      0009EE C0 E0            [24] 2411 	push	acc
      0009F0 74s00            [12] 2412 	mov	a,#(___str_0 >> 8)
      0009F2 C0 E0            [24] 2413 	push	acc
      0009F4 74 80            [12] 2414 	mov	a,#0x80
      0009F6 C0 E0            [24] 2415 	push	acc
      0009F8 12r00r00         [24] 2416 	lcall	_printf
      0009FB E5 81            [12] 2417 	mov	a,sp
      0009FD 24 FB            [12] 2418 	add	a,#0xfb
      0009FF F5 81            [12] 2419 	mov	sp,a
      000A01 D0 06            [24] 2420 	pop	ar6
      000A03 D0 07            [24] 2421 	pop	ar7
                                   2422 ;	tcp.c:225: for (uint16_t i = 0; i < size; i++) {
      000A05 90r06r06         [24] 2423 	mov	dptr,#_print_hexdump_data_10000_148
      000A08 E0               [24] 2424 	movx	a,@dptr
      000A09 FB               [12] 2425 	mov	r3,a
      000A0A A3               [24] 2426 	inc	dptr
      000A0B E0               [24] 2427 	movx	a,@dptr
      000A0C FC               [12] 2428 	mov	r4,a
      000A0D A3               [24] 2429 	inc	dptr
      000A0E E0               [24] 2430 	movx	a,@dptr
      000A0F FD               [12] 2431 	mov	r5,a
      000A10 79 00            [12] 2432 	mov	r1,#0x00
      000A12 7A 00            [12] 2433 	mov	r2,#0x00
      000A14                       2434 00107$:
      000A14 C3               [12] 2435 	clr	c
      000A15 E9               [12] 2436 	mov	a,r1
      000A16 9E               [12] 2437 	subb	a,r6
      000A17 EA               [12] 2438 	mov	a,r2
      000A18 9F               [12] 2439 	subb	a,r7
      000A19 40 03            [24] 2440 	jc	00136$
      000A1B 02r0ArBC         [24] 2441 	ljmp	00103$
      000A1E                       2442 00136$:
                                   2443 ;	tcp.c:226: printf("%02X ", data[i]); // Print each byte in hexadecimal format
      000A1E C0 06            [24] 2444 	push	ar6
      000A20 C0 07            [24] 2445 	push	ar7
      000A22 E9               [12] 2446 	mov	a,r1
      000A23 2B               [12] 2447 	add	a, r3
      000A24 F8               [12] 2448 	mov	r0,a
      000A25 EA               [12] 2449 	mov	a,r2
      000A26 3C               [12] 2450 	addc	a, r4
      000A27 FE               [12] 2451 	mov	r6,a
      000A28 8D 07            [24] 2452 	mov	ar7,r5
      000A2A 88 82            [24] 2453 	mov	dpl,r0
      000A2C 8E 83            [24] 2454 	mov	dph,r6
      000A2E 8F F0            [24] 2455 	mov	b,r7
      000A30 12r00r00         [24] 2456 	lcall	__gptrget
      000A33 F8               [12] 2457 	mov	r0,a
      000A34 7F 00            [12] 2458 	mov	r7,#0x00
      000A36 C0 07            [24] 2459 	push	ar7
      000A38 C0 06            [24] 2460 	push	ar6
      000A3A C0 05            [24] 2461 	push	ar5
      000A3C C0 04            [24] 2462 	push	ar4
      000A3E C0 03            [24] 2463 	push	ar3
      000A40 C0 02            [24] 2464 	push	ar2
      000A42 C0 01            [24] 2465 	push	ar1
      000A44 C0 00            [24] 2466 	push	ar0
      000A46 C0 07            [24] 2467 	push	ar7
      000A48 74r16            [12] 2468 	mov	a,#___str_1
      000A4A C0 E0            [24] 2469 	push	acc
      000A4C 74s00            [12] 2470 	mov	a,#(___str_1 >> 8)
      000A4E C0 E0            [24] 2471 	push	acc
      000A50 74 80            [12] 2472 	mov	a,#0x80
      000A52 C0 E0            [24] 2473 	push	acc
      000A54 12r00r00         [24] 2474 	lcall	_printf
      000A57 E5 81            [12] 2475 	mov	a,sp
      000A59 24 FB            [12] 2476 	add	a,#0xfb
      000A5B F5 81            [12] 2477 	mov	sp,a
      000A5D D0 01            [24] 2478 	pop	ar1
      000A5F D0 02            [24] 2479 	pop	ar2
      000A61 D0 03            [24] 2480 	pop	ar3
      000A63 D0 04            [24] 2481 	pop	ar4
      000A65 D0 05            [24] 2482 	pop	ar5
      000A67 D0 06            [24] 2483 	pop	ar6
      000A69 D0 07            [24] 2484 	pop	ar7
                                   2485 ;	tcp.c:227: if ((i + 1) % 16 == 0) {
      000A6B 89 06            [24] 2486 	mov	ar6,r1
      000A6D 8A 07            [24] 2487 	mov	ar7,r2
      000A6F 0E               [12] 2488 	inc	r6
      000A70 BE 00 01         [24] 2489 	cjne	r6,#0x00,00137$
      000A73 0F               [12] 2490 	inc	r7
      000A74                       2491 00137$:
      000A74 EE               [12] 2492 	mov	a,r6
      000A75 54 0F            [12] 2493 	anl	a,#0x0f
      000A77 60 06            [24] 2494 	jz	00139$
      000A79 D0 07            [24] 2495 	pop	ar7
      000A7B D0 06            [24] 2496 	pop	ar6
      000A7D 80 35            [24] 2497 	sjmp	00108$
      000A7F                       2498 00139$:
      000A7F D0 07            [24] 2499 	pop	ar7
      000A81 D0 06            [24] 2500 	pop	ar6
                                   2501 ;	tcp.c:228: printf("\n"); // Newline after every 16 bytes for readability
      000A83 C0 07            [24] 2502 	push	ar7
      000A85 C0 06            [24] 2503 	push	ar6
      000A87 C0 05            [24] 2504 	push	ar5
      000A89 C0 04            [24] 2505 	push	ar4
      000A8B C0 03            [24] 2506 	push	ar3
      000A8D C0 02            [24] 2507 	push	ar2
      000A8F C0 01            [24] 2508 	push	ar1
      000A91 74r1C            [12] 2509 	mov	a,#___str_2
      000A93 C0 E0            [24] 2510 	push	acc
      000A95 74s00            [12] 2511 	mov	a,#(___str_2 >> 8)
      000A97 C0 E0            [24] 2512 	push	acc
      000A99 74 80            [12] 2513 	mov	a,#0x80
      000A9B C0 E0            [24] 2514 	push	acc
      000A9D 12r00r00         [24] 2515 	lcall	_printf
      000AA0 15 81            [12] 2516 	dec	sp
      000AA2 15 81            [12] 2517 	dec	sp
      000AA4 15 81            [12] 2518 	dec	sp
      000AA6 D0 01            [24] 2519 	pop	ar1
      000AA8 D0 02            [24] 2520 	pop	ar2
      000AAA D0 03            [24] 2521 	pop	ar3
      000AAC D0 04            [24] 2522 	pop	ar4
      000AAE D0 05            [24] 2523 	pop	ar5
      000AB0 D0 06            [24] 2524 	pop	ar6
      000AB2 D0 07            [24] 2525 	pop	ar7
      000AB4                       2526 00108$:
                                   2527 ;	tcp.c:225: for (uint16_t i = 0; i < size; i++) {
      000AB4 09               [12] 2528 	inc	r1
      000AB5 B9 00 01         [24] 2529 	cjne	r1,#0x00,00140$
      000AB8 0A               [12] 2530 	inc	r2
      000AB9                       2531 00140$:
      000AB9 02r0Ar14         [24] 2532 	ljmp	00107$
      000ABC                       2533 00103$:
                                   2534 ;	tcp.c:231: if (size % 16 != 0) {
      000ABC EE               [12] 2535 	mov	a,r6
      000ABD 54 0F            [12] 2536 	anl	a,#0x0f
      000ABF 60 15            [24] 2537 	jz	00109$
                                   2538 ;	tcp.c:232: printf("\n"); // Final newline if not already printed
      000AC1 74r1C            [12] 2539 	mov	a,#___str_2
      000AC3 C0 E0            [24] 2540 	push	acc
      000AC5 74s00            [12] 2541 	mov	a,#(___str_2 >> 8)
      000AC7 C0 E0            [24] 2542 	push	acc
      000AC9 74 80            [12] 2543 	mov	a,#0x80
      000ACB C0 E0            [24] 2544 	push	acc
      000ACD 12r00r00         [24] 2545 	lcall	_printf
      000AD0 15 81            [12] 2546 	dec	sp
      000AD2 15 81            [12] 2547 	dec	sp
      000AD4 15 81            [12] 2548 	dec	sp
      000AD6                       2549 00109$:
                                   2550 ;	tcp.c:234: }
      000AD6 22               [24] 2551 	ret
                                   2552 ;------------------------------------------------------------
                                   2553 ;Allocation info for local variables in function 'process_packet_from_buffer'
                                   2554 ;------------------------------------------------------------
                                   2555 ;sloc0                     Allocated with name '_process_packet_from_buffer_sloc0_1_0'
                                   2556 ;start_address             Allocated with name '_process_packet_from_buffer_start_address_10000_154'
                                   2557 ;next_packet_start         Allocated with name '_process_packet_from_buffer_next_packet_start_10001_157'
                                   2558 ;next_start_address        Allocated with name '_process_packet_from_buffer_next_start_address_10001_157'
                                   2559 ;packet_size               Allocated with name '_process_packet_from_buffer_packet_size_10001_157'
                                   2560 ;response_size             Allocated with name '_process_packet_from_buffer_response_size_10001_157'
                                   2561 ;packet_data               Allocated with name '_process_packet_from_buffer_packet_data_10002_160'
                                   2562 ;response                  Allocated with name '_process_packet_from_buffer_response_10003_163'
                                   2563 ;------------------------------------------------------------
                                   2564 ;	tcp.c:237: void process_packet_from_buffer(uint16_t start_address) {
                                   2565 ;	-----------------------------------------
                                   2566 ;	 function process_packet_from_buffer
                                   2567 ;	-----------------------------------------
      000AD7                       2568 _process_packet_from_buffer:
      000AD7 AF 83            [24] 2569 	mov	r7,dph
      000AD9 E5 82            [12] 2570 	mov	a,dpl
      000ADB 90r06r09         [24] 2571 	mov	dptr,#_process_packet_from_buffer_start_address_10000_154
      000ADE F0               [24] 2572 	movx	@dptr,a
      000ADF EF               [12] 2573 	mov	a,r7
      000AE0 A3               [24] 2574 	inc	dptr
      000AE1 F0               [24] 2575 	movx	@dptr,a
                                   2576 ;	tcp.c:239: if (start_address > 0x1FFF) {
      000AE2 90r06r09         [24] 2577 	mov	dptr,#_process_packet_from_buffer_start_address_10000_154
      000AE5 E0               [24] 2578 	movx	a,@dptr
      000AE6 FE               [12] 2579 	mov	r6,a
      000AE7 A3               [24] 2580 	inc	dptr
      000AE8 E0               [24] 2581 	movx	a,@dptr
      000AE9 FF               [12] 2582 	mov	r7,a
      000AEA 8E 04            [24] 2583 	mov	ar4,r6
      000AEC 8F 05            [24] 2584 	mov	ar5,r7
      000AEE C3               [12] 2585 	clr	c
      000AEF 74 FF            [12] 2586 	mov	a,#0xff
      000AF1 9C               [12] 2587 	subb	a,r4
      000AF2 74 1F            [12] 2588 	mov	a,#0x1f
      000AF4 9D               [12] 2589 	subb	a,r5
      000AF5 50 1A            [24] 2590 	jnc	00102$
                                   2591 ;	tcp.c:240: printf("\n\rInvalid start address: %04X\n\r", start_address);
      000AF7 C0 06            [24] 2592 	push	ar6
      000AF9 C0 07            [24] 2593 	push	ar7
      000AFB 74r1E            [12] 2594 	mov	a,#___str_3
      000AFD C0 E0            [24] 2595 	push	acc
      000AFF 74s00            [12] 2596 	mov	a,#(___str_3 >> 8)
      000B01 C0 E0            [24] 2597 	push	acc
      000B03 74 80            [12] 2598 	mov	a,#0x80
      000B05 C0 E0            [24] 2599 	push	acc
      000B07 12r00r00         [24] 2600 	lcall	_printf
      000B0A E5 81            [12] 2601 	mov	a,sp
      000B0C 24 FB            [12] 2602 	add	a,#0xfb
      000B0E F5 81            [12] 2603 	mov	sp,a
                                   2604 ;	tcp.c:241: return;
      000B10 22               [24] 2605 	ret
      000B11                       2606 00102$:
                                   2607 ;	tcp.c:250: if (spi_buffer_read(2, start_address, next_packet_start) != 2) {
      000B11 90r00r00         [24] 2608 	mov	dptr,#_spi_buffer_read_PARM_2
      000B14 EE               [12] 2609 	mov	a,r6
      000B15 F0               [24] 2610 	movx	@dptr,a
      000B16 EF               [12] 2611 	mov	a,r7
      000B17 A3               [24] 2612 	inc	dptr
      000B18 F0               [24] 2613 	movx	@dptr,a
      000B19 90r00r00         [24] 2614 	mov	dptr,#_spi_buffer_read_PARM_3
      000B1C 74r0B            [12] 2615 	mov	a,#_process_packet_from_buffer_next_packet_start_10001_157
      000B1E F0               [24] 2616 	movx	@dptr,a
      000B1F 74s06            [12] 2617 	mov	a,#(_process_packet_from_buffer_next_packet_start_10001_157 >> 8)
      000B21 A3               [24] 2618 	inc	dptr
      000B22 F0               [24] 2619 	movx	@dptr,a
      000B23 E4               [12] 2620 	clr	a
      000B24 A3               [24] 2621 	inc	dptr
      000B25 F0               [24] 2622 	movx	@dptr,a
      000B26 90 00 02         [24] 2623 	mov	dptr,#0x0002
      000B29 C0 07            [24] 2624 	push	ar7
      000B2B C0 06            [24] 2625 	push	ar6
      000B2D C0 05            [24] 2626 	push	ar5
      000B2F C0 04            [24] 2627 	push	ar4
      000B31 12r00r00         [24] 2628 	lcall	_spi_buffer_read
      000B34 AA 82            [24] 2629 	mov	r2, dpl
      000B36 AB 83            [24] 2630 	mov	r3, dph
      000B38 D0 04            [24] 2631 	pop	ar4
      000B3A D0 05            [24] 2632 	pop	ar5
      000B3C D0 06            [24] 2633 	pop	ar6
      000B3E D0 07            [24] 2634 	pop	ar7
      000B40 BA 02 05         [24] 2635 	cjne	r2,#0x02,00153$
      000B43 BB 00 02         [24] 2636 	cjne	r3,#0x00,00153$
      000B46 80 16            [24] 2637 	sjmp	00104$
      000B48                       2638 00153$:
                                   2639 ;	tcp.c:251: printf("\n\rFailed to read packet start address bytes\n\r");
      000B48 74r3E            [12] 2640 	mov	a,#___str_4
      000B4A C0 E0            [24] 2641 	push	acc
      000B4C 74s00            [12] 2642 	mov	a,#(___str_4 >> 8)
      000B4E C0 E0            [24] 2643 	push	acc
      000B50 74 80            [12] 2644 	mov	a,#0x80
      000B52 C0 E0            [24] 2645 	push	acc
      000B54 12r00r00         [24] 2646 	lcall	_printf
      000B57 15 81            [12] 2647 	dec	sp
      000B59 15 81            [12] 2648 	dec	sp
      000B5B 15 81            [12] 2649 	dec	sp
                                   2650 ;	tcp.c:252: return;
      000B5D 22               [24] 2651 	ret
      000B5E                       2652 00104$:
                                   2653 ;	tcp.c:256: next_start_address = ((uint16_t)next_packet_start[1] << 8) | next_packet_start[0];
      000B5E 90r06r0C         [24] 2654 	mov	dptr,#(_process_packet_from_buffer_next_packet_start_10001_157 + 0x0001)
      000B61 E0               [24] 2655 	movx	a,@dptr
      000B62 FA               [12] 2656 	mov	r2,a
      000B63 7B 00            [12] 2657 	mov	r3,#0x00
      000B65 90r06r0B         [24] 2658 	mov	dptr,#_process_packet_from_buffer_next_packet_start_10001_157
      000B68 E0               [24] 2659 	movx	a,@dptr
      000B69 79 00            [12] 2660 	mov	r1,#0x00
      000B6B 42 03            [12] 2661 	orl	ar3,a
      000B6D E9               [12] 2662 	mov	a,r1
      000B6E 42 02            [12] 2663 	orl	ar2,a
                                   2664 ;	tcp.c:259: if (next_start_address < start_address) {
      000B70 C3               [12] 2665 	clr	c
      000B71 EB               [12] 2666 	mov	a,r3
      000B72 9E               [12] 2667 	subb	a,r6
      000B73 EA               [12] 2668 	mov	a,r2
      000B74 9F               [12] 2669 	subb	a,r7
      000B75 50 1A            [24] 2670 	jnc	00106$
                                   2671 ;	tcp.c:260: printf("\n\rInvalid next start address: 0x%04X\n\r", next_start_address);
      000B77 C0 03            [24] 2672 	push	ar3
      000B79 C0 02            [24] 2673 	push	ar2
      000B7B 74r6C            [12] 2674 	mov	a,#___str_5
      000B7D C0 E0            [24] 2675 	push	acc
      000B7F 74s00            [12] 2676 	mov	a,#(___str_5 >> 8)
      000B81 C0 E0            [24] 2677 	push	acc
      000B83 74 80            [12] 2678 	mov	a,#0x80
      000B85 C0 E0            [24] 2679 	push	acc
      000B87 12r00r00         [24] 2680 	lcall	_printf
      000B8A E5 81            [12] 2681 	mov	a,sp
      000B8C 24 FB            [12] 2682 	add	a,#0xfb
      000B8E F5 81            [12] 2683 	mov	sp,a
                                   2684 ;	tcp.c:261: return;
      000B90 22               [24] 2685 	ret
      000B91                       2686 00106$:
                                   2687 ;	tcp.c:263: packet_size = next_start_address - (start_address+6);
      000B91 74 06            [12] 2688 	mov	a,#0x06
      000B93 2C               [12] 2689 	add	a, r4
      000B94 FE               [12] 2690 	mov	r6,a
      000B95 E4               [12] 2691 	clr	a
      000B96 3D               [12] 2692 	addc	a, r5
      000B97 FF               [12] 2693 	mov	r7,a
      000B98 EB               [12] 2694 	mov	a,r3
      000B99 C3               [12] 2695 	clr	c
      000B9A 9E               [12] 2696 	subb	a,r6
      000B9B FE               [12] 2697 	mov	r6,a
      000B9C EA               [12] 2698 	mov	a,r2
      000B9D 9F               [12] 2699 	subb	a,r7
      000B9E FF               [12] 2700 	mov	r7,a
                                   2701 ;	tcp.c:266: uint8_t *packet_data = (uint8_t *)malloc(packet_size);
      000B9F 8E 00            [24] 2702 	mov	ar0,r6
      000BA1 8F 01            [24] 2703 	mov	ar1,r7
      000BA3 88 82            [24] 2704 	mov	dpl, r0
      000BA5 89 83            [24] 2705 	mov	dph, r1
      000BA7 C0 07            [24] 2706 	push	ar7
      000BA9 C0 06            [24] 2707 	push	ar6
      000BAB C0 05            [24] 2708 	push	ar5
      000BAD C0 04            [24] 2709 	push	ar4
      000BAF C0 03            [24] 2710 	push	ar3
      000BB1 C0 02            [24] 2711 	push	ar2
      000BB3 12r00r00         [24] 2712 	lcall	_malloc
      000BB6 A8 82            [24] 2713 	mov	r0, dpl
      000BB8 A9 83            [24] 2714 	mov	r1, dph
      000BBA D0 02            [24] 2715 	pop	ar2
      000BBC D0 03            [24] 2716 	pop	ar3
      000BBE D0 04            [24] 2717 	pop	ar4
      000BC0 D0 05            [24] 2718 	pop	ar5
      000BC2 D0 06            [24] 2719 	pop	ar6
      000BC4 D0 07            [24] 2720 	pop	ar7
      000BC6 88*03            [24] 2721 	mov	_process_packet_from_buffer_sloc0_1_0,r0
      000BC8 89*04            [24] 2722 	mov	(_process_packet_from_buffer_sloc0_1_0 + 1),r1
      000BCA 75*05 00         [24] 2723 	mov	(_process_packet_from_buffer_sloc0_1_0 + 2),#0x00
                                   2724 ;	tcp.c:267: if (packet_data == NULL) {
      000BCD E5*03            [12] 2725 	mov	a,_process_packet_from_buffer_sloc0_1_0
      000BCF 45*04            [12] 2726 	orl	a,(_process_packet_from_buffer_sloc0_1_0 + 1)
      000BD1 70 1A            [24] 2727 	jnz	00108$
                                   2728 ;	tcp.c:268: printf("\n\rMemory allocation failed for packet size: %d\n\r", packet_size);
      000BD3 C0 06            [24] 2729 	push	ar6
      000BD5 C0 07            [24] 2730 	push	ar7
      000BD7 74r93            [12] 2731 	mov	a,#___str_6
      000BD9 C0 E0            [24] 2732 	push	acc
      000BDB 74s00            [12] 2733 	mov	a,#(___str_6 >> 8)
      000BDD C0 E0            [24] 2734 	push	acc
      000BDF 74 80            [12] 2735 	mov	a,#0x80
      000BE1 C0 E0            [24] 2736 	push	acc
      000BE3 12r00r00         [24] 2737 	lcall	_printf
      000BE6 E5 81            [12] 2738 	mov	a,sp
      000BE8 24 FB            [12] 2739 	add	a,#0xfb
      000BEA F5 81            [12] 2740 	mov	sp,a
                                   2741 ;	tcp.c:269: return;
      000BEC 22               [24] 2742 	ret
      000BED                       2743 00108$:
                                   2744 ;	tcp.c:273: if (spi_buffer_read(packet_size, start_address+6, packet_data) != packet_size) {
      000BED 8E 00            [24] 2745 	mov	ar0,r6
      000BEF 8F 01            [24] 2746 	mov	ar1,r7
      000BF1 74 06            [12] 2747 	mov	a,#0x06
      000BF3 2C               [12] 2748 	add	a, r4
      000BF4 FC               [12] 2749 	mov	r4,a
      000BF5 E4               [12] 2750 	clr	a
      000BF6 3D               [12] 2751 	addc	a, r5
      000BF7 FD               [12] 2752 	mov	r5,a
      000BF8 90r00r00         [24] 2753 	mov	dptr,#_spi_buffer_read_PARM_2
      000BFB EC               [12] 2754 	mov	a,r4
      000BFC F0               [24] 2755 	movx	@dptr,a
      000BFD ED               [12] 2756 	mov	a,r5
      000BFE A3               [24] 2757 	inc	dptr
      000BFF F0               [24] 2758 	movx	@dptr,a
      000C00 90r00r00         [24] 2759 	mov	dptr,#_spi_buffer_read_PARM_3
      000C03 E5*03            [12] 2760 	mov	a,_process_packet_from_buffer_sloc0_1_0
      000C05 F0               [24] 2761 	movx	@dptr,a
      000C06 E5*04            [12] 2762 	mov	a,(_process_packet_from_buffer_sloc0_1_0 + 1)
      000C08 A3               [24] 2763 	inc	dptr
      000C09 F0               [24] 2764 	movx	@dptr,a
      000C0A E5*05            [12] 2765 	mov	a,(_process_packet_from_buffer_sloc0_1_0 + 2)
      000C0C A3               [24] 2766 	inc	dptr
      000C0D F0               [24] 2767 	movx	@dptr,a
      000C0E 88 82            [24] 2768 	mov	dpl, r0
      000C10 89 83            [24] 2769 	mov	dph, r1
      000C12 C0 07            [24] 2770 	push	ar7
      000C14 C0 06            [24] 2771 	push	ar6
      000C16 C0 03            [24] 2772 	push	ar3
      000C18 C0 02            [24] 2773 	push	ar2
      000C1A 12r00r00         [24] 2774 	lcall	_spi_buffer_read
      000C1D AC 82            [24] 2775 	mov	r4, dpl
      000C1F AD 83            [24] 2776 	mov	r5, dph
      000C21 D0 02            [24] 2777 	pop	ar2
      000C23 D0 03            [24] 2778 	pop	ar3
      000C25 D0 06            [24] 2779 	pop	ar6
      000C27 D0 07            [24] 2780 	pop	ar7
      000C29 EC               [12] 2781 	mov	a,r4
      000C2A B5 06 06         [24] 2782 	cjne	a,ar6,00156$
      000C2D ED               [12] 2783 	mov	a,r5
      000C2E B5 07 02         [24] 2784 	cjne	a,ar7,00156$
      000C31 80 24            [24] 2785 	sjmp	00110$
      000C33                       2786 00156$:
                                   2787 ;	tcp.c:274: printf("\n\rFailed to read packet data\n\r");
      000C33 74rC4            [12] 2788 	mov	a,#___str_7
      000C35 C0 E0            [24] 2789 	push	acc
      000C37 74s00            [12] 2790 	mov	a,#(___str_7 >> 8)
      000C39 C0 E0            [24] 2791 	push	acc
      000C3B 74 80            [12] 2792 	mov	a,#0x80
      000C3D C0 E0            [24] 2793 	push	acc
      000C3F 12r00r00         [24] 2794 	lcall	_printf
      000C42 15 81            [12] 2795 	dec	sp
      000C44 15 81            [12] 2796 	dec	sp
      000C46 15 81            [12] 2797 	dec	sp
                                   2798 ;	tcp.c:275: free(packet_data);
      000C48 AC*03            [24] 2799 	mov	r4,_process_packet_from_buffer_sloc0_1_0
      000C4A A9*04            [24] 2800 	mov	r1,(_process_packet_from_buffer_sloc0_1_0 + 1)
      000C4C 7D 00            [12] 2801 	mov	r5,#0x00
      000C4E 8C 82            [24] 2802 	mov	dpl, r4
      000C50 89 83            [24] 2803 	mov	dph, r1
      000C52 8D F0            [24] 2804 	mov	b, r5
                                   2805 ;	tcp.c:276: return;
      000C54 02r00r00         [24] 2806 	ljmp	_free
      000C57                       2807 00110$:
                                   2808 ;	tcp.c:280: uint8_t *response = process_tcp_packet(packet_data, packet_size, &response_size);
      000C57 90r00r1F         [24] 2809 	mov	dptr,#_process_tcp_packet_PARM_2
      000C5A EE               [12] 2810 	mov	a,r6
      000C5B F0               [24] 2811 	movx	@dptr,a
      000C5C EF               [12] 2812 	mov	a,r7
      000C5D A3               [24] 2813 	inc	dptr
      000C5E F0               [24] 2814 	movx	@dptr,a
      000C5F 90r00r21         [24] 2815 	mov	dptr,#_process_tcp_packet_PARM_3
      000C62 74r0D            [12] 2816 	mov	a,#_process_packet_from_buffer_response_size_10001_157
      000C64 F0               [24] 2817 	movx	@dptr,a
      000C65 74s06            [12] 2818 	mov	a,#(_process_packet_from_buffer_response_size_10001_157 >> 8)
      000C67 A3               [24] 2819 	inc	dptr
      000C68 F0               [24] 2820 	movx	@dptr,a
      000C69 E4               [12] 2821 	clr	a
      000C6A A3               [24] 2822 	inc	dptr
      000C6B F0               [24] 2823 	movx	@dptr,a
      000C6C 85*03 82         [24] 2824 	mov	dpl, _process_packet_from_buffer_sloc0_1_0
      000C6F 85*04 83         [24] 2825 	mov	dph, (_process_packet_from_buffer_sloc0_1_0 + 1)
      000C72 85*05 F0         [24] 2826 	mov	b, (_process_packet_from_buffer_sloc0_1_0 + 2)
      000C75 C0 07            [24] 2827 	push	ar7
      000C77 C0 06            [24] 2828 	push	ar6
      000C79 C0 03            [24] 2829 	push	ar3
      000C7B C0 02            [24] 2830 	push	ar2
      000C7D 12r06r4D         [24] 2831 	lcall	_process_tcp_packet
      000C80 A9 82            [24] 2832 	mov	r1, dpl
      000C82 AC 83            [24] 2833 	mov	r4, dph
      000C84 AD F0            [24] 2834 	mov	r5, b
      000C86 D0 02            [24] 2835 	pop	ar2
      000C88 D0 03            [24] 2836 	pop	ar3
      000C8A D0 06            [24] 2837 	pop	ar6
      000C8C D0 07            [24] 2838 	pop	ar7
                                   2839 ;	tcp.c:283: if (response != NULL) {
      000C8E E9               [12] 2840 	mov	a,r1
      000C8F 4C               [12] 2841 	orl	a,r4
      000C90 70 03            [24] 2842 	jnz	00157$
      000C92 02r0Dr16         [24] 2843 	ljmp	00112$
      000C95                       2844 00157$:
                                   2845 ;	tcp.c:284: printf("\nProcessed response data:\n");
      000C95 C0 03            [24] 2846 	push	ar3
      000C97 C0 02            [24] 2847 	push	ar2
      000C99 C0 07            [24] 2848 	push	ar7
      000C9B C0 06            [24] 2849 	push	ar6
      000C9D C0 05            [24] 2850 	push	ar5
      000C9F C0 04            [24] 2851 	push	ar4
      000CA1 C0 03            [24] 2852 	push	ar3
      000CA3 C0 02            [24] 2853 	push	ar2
      000CA5 C0 01            [24] 2854 	push	ar1
      000CA7 74rE3            [12] 2855 	mov	a,#___str_8
      000CA9 C0 E0            [24] 2856 	push	acc
      000CAB 74s00            [12] 2857 	mov	a,#(___str_8 >> 8)
      000CAD C0 E0            [24] 2858 	push	acc
      000CAF 74 80            [12] 2859 	mov	a,#0x80
      000CB1 C0 E0            [24] 2860 	push	acc
      000CB3 12r00r00         [24] 2861 	lcall	_printf
      000CB6 15 81            [12] 2862 	dec	sp
      000CB8 15 81            [12] 2863 	dec	sp
      000CBA 15 81            [12] 2864 	dec	sp
      000CBC D0 01            [24] 2865 	pop	ar1
      000CBE D0 02            [24] 2866 	pop	ar2
      000CC0 D0 03            [24] 2867 	pop	ar3
      000CC2 D0 04            [24] 2868 	pop	ar4
      000CC4 D0 05            [24] 2869 	pop	ar5
      000CC6 D0 06            [24] 2870 	pop	ar6
      000CC8 D0 07            [24] 2871 	pop	ar7
                                   2872 ;	tcp.c:286: transmit_tcp_packet(response, response_size);
      000CCA 90r06r0D         [24] 2873 	mov	dptr,#_process_packet_from_buffer_response_size_10001_157
      000CCD E0               [24] 2874 	movx	a,@dptr
      000CCE F8               [12] 2875 	mov	r0,a
      000CCF A3               [24] 2876 	inc	dptr
      000CD0 E0               [24] 2877 	movx	a,@dptr
      000CD1 FB               [12] 2878 	mov	r3,a
      000CD2 90r06r0F         [24] 2879 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000CD5 E8               [12] 2880 	mov	a,r0
      000CD6 F0               [24] 2881 	movx	@dptr,a
      000CD7 EB               [12] 2882 	mov	a,r3
      000CD8 A3               [24] 2883 	inc	dptr
      000CD9 F0               [24] 2884 	movx	@dptr,a
      000CDA 89 82            [24] 2885 	mov	dpl, r1
      000CDC 8C 83            [24] 2886 	mov	dph, r4
      000CDE 8D F0            [24] 2887 	mov	b, r5
      000CE0 C0 07            [24] 2888 	push	ar7
      000CE2 C0 06            [24] 2889 	push	ar6
      000CE4 C0 05            [24] 2890 	push	ar5
      000CE6 C0 04            [24] 2891 	push	ar4
      000CE8 C0 03            [24] 2892 	push	ar3
      000CEA C0 02            [24] 2893 	push	ar2
      000CEC C0 01            [24] 2894 	push	ar1
      000CEE 12r0Dr87         [24] 2895 	lcall	_transmit_tcp_packet
      000CF1 D0 01            [24] 2896 	pop	ar1
      000CF3 D0 02            [24] 2897 	pop	ar2
      000CF5 D0 03            [24] 2898 	pop	ar3
      000CF7 D0 04            [24] 2899 	pop	ar4
      000CF9 D0 05            [24] 2900 	pop	ar5
                                   2901 ;	tcp.c:287: free(response); // Free response memory if allocated dynamically
      000CFB 89 82            [24] 2902 	mov	dpl, r1
      000CFD 8C 83            [24] 2903 	mov	dph, r4
      000CFF 8D F0            [24] 2904 	mov	b, r5
      000D01 C0 03            [24] 2905 	push	ar3
      000D03 C0 02            [24] 2906 	push	ar2
      000D05 12r00r00         [24] 2907 	lcall	_free
      000D08 D0 02            [24] 2908 	pop	ar2
      000D0A D0 03            [24] 2909 	pop	ar3
      000D0C D0 06            [24] 2910 	pop	ar6
      000D0E D0 07            [24] 2911 	pop	ar7
      000D10 D0 02            [24] 2912 	pop	ar2
      000D12 D0 03            [24] 2913 	pop	ar3
      000D14 80 25            [24] 2914 	sjmp	00113$
      000D16                       2915 00112$:
                                   2916 ;	tcp.c:289: printf("\nNo response generated by TCP packet processing.\n");
      000D16 C0 07            [24] 2917 	push	ar7
      000D18 C0 06            [24] 2918 	push	ar6
      000D1A C0 03            [24] 2919 	push	ar3
      000D1C C0 02            [24] 2920 	push	ar2
      000D1E 74rFE            [12] 2921 	mov	a,#___str_9
      000D20 C0 E0            [24] 2922 	push	acc
      000D22 74s00            [12] 2923 	mov	a,#(___str_9 >> 8)
      000D24 C0 E0            [24] 2924 	push	acc
      000D26 74 80            [12] 2925 	mov	a,#0x80
      000D28 C0 E0            [24] 2926 	push	acc
      000D2A 12r00r00         [24] 2927 	lcall	_printf
      000D2D 15 81            [12] 2928 	dec	sp
      000D2F 15 81            [12] 2929 	dec	sp
      000D31 15 81            [12] 2930 	dec	sp
      000D33 D0 02            [24] 2931 	pop	ar2
      000D35 D0 03            [24] 2932 	pop	ar3
      000D37 D0 06            [24] 2933 	pop	ar6
      000D39 D0 07            [24] 2934 	pop	ar7
      000D3B                       2935 00113$:
                                   2936 ;	tcp.c:293: free(packet_data);
      000D3B AC*03            [24] 2937 	mov	r4,_process_packet_from_buffer_sloc0_1_0
      000D3D A9*04            [24] 2938 	mov	r1,(_process_packet_from_buffer_sloc0_1_0 + 1)
      000D3F 7D 00            [12] 2939 	mov	r5,#0x00
      000D41 8C 82            [24] 2940 	mov	dpl, r4
      000D43 89 83            [24] 2941 	mov	dph, r1
      000D45 8D F0            [24] 2942 	mov	b, r5
      000D47 C0 07            [24] 2943 	push	ar7
      000D49 C0 06            [24] 2944 	push	ar6
      000D4B C0 03            [24] 2945 	push	ar3
      000D4D C0 02            [24] 2946 	push	ar2
      000D4F 12r00r00         [24] 2947 	lcall	_free
      000D52 D0 02            [24] 2948 	pop	ar2
      000D54 D0 03            [24] 2949 	pop	ar3
      000D56 D0 06            [24] 2950 	pop	ar6
      000D58 D0 07            [24] 2951 	pop	ar7
                                   2952 ;	tcp.c:296: packet_size, start_address, next_start_address - 1);
      000D5A 1B               [12] 2953 	dec	r3
      000D5B BB FF 01         [24] 2954 	cjne	r3,#0xff,00158$
      000D5E 1A               [12] 2955 	dec	r2
      000D5F                       2956 00158$:
                                   2957 ;	tcp.c:295: printf("\n\rSuccessfully processed packet of size %d from 0x%04X to 0x%04X\n\r",
      000D5F C0 03            [24] 2958 	push	ar3
      000D61 C0 02            [24] 2959 	push	ar2
      000D63 90r06r09         [24] 2960 	mov	dptr,#_process_packet_from_buffer_start_address_10000_154
      000D66 E0               [24] 2961 	movx	a,@dptr
      000D67 C0 E0            [24] 2962 	push	acc
      000D69 A3               [24] 2963 	inc	dptr
      000D6A E0               [24] 2964 	movx	a,@dptr
      000D6B C0 E0            [24] 2965 	push	acc
      000D6D C0 06            [24] 2966 	push	ar6
      000D6F C0 07            [24] 2967 	push	ar7
      000D71 74r30            [12] 2968 	mov	a,#___str_10
      000D73 C0 E0            [24] 2969 	push	acc
      000D75 74s01            [12] 2970 	mov	a,#(___str_10 >> 8)
      000D77 C0 E0            [24] 2971 	push	acc
      000D79 74 80            [12] 2972 	mov	a,#0x80
      000D7B C0 E0            [24] 2973 	push	acc
      000D7D 12r00r00         [24] 2974 	lcall	_printf
      000D80 E5 81            [12] 2975 	mov	a,sp
      000D82 24 F7            [12] 2976 	add	a,#0xf7
      000D84 F5 81            [12] 2977 	mov	sp,a
                                   2978 ;	tcp.c:297: }
      000D86 22               [24] 2979 	ret
                                   2980 ;------------------------------------------------------------
                                   2981 ;Allocation info for local variables in function 'transmit_tcp_packet'
                                   2982 ;------------------------------------------------------------
                                   2983 ;packet_size               Allocated with name '_transmit_tcp_packet_PARM_2'
                                   2984 ;packet                    Allocated with name '_transmit_tcp_packet_packet_10000_166'
                                   2985 ;start_address             Allocated with name '_transmit_tcp_packet_start_address_10000_167'
                                   2986 ;end_address               Allocated with name '_transmit_tcp_packet_end_address_10001_169'
                                   2987 ;------------------------------------------------------------
                                   2988 ;	tcp.c:300: void transmit_tcp_packet(uint8_t *packet, uint16_t packet_size)
                                   2989 ;	-----------------------------------------
                                   2990 ;	 function transmit_tcp_packet
                                   2991 ;	-----------------------------------------
      000D87                       2992 _transmit_tcp_packet:
      000D87 AF F0            [24] 2993 	mov	r7,b
      000D89 AE 83            [24] 2994 	mov	r6,dph
      000D8B E5 82            [12] 2995 	mov	a,dpl
      000D8D 90r06r11         [24] 2996 	mov	dptr,#_transmit_tcp_packet_packet_10000_166
      000D90 F0               [24] 2997 	movx	@dptr,a
      000D91 EE               [12] 2998 	mov	a,r6
      000D92 A3               [24] 2999 	inc	dptr
      000D93 F0               [24] 3000 	movx	@dptr,a
      000D94 EF               [12] 3001 	mov	a,r7
      000D95 A3               [24] 3002 	inc	dptr
      000D96 F0               [24] 3003 	movx	@dptr,a
                                   3004 ;	tcp.c:305: if ((start_address + packet_size - 1) > 0x1FFF) {
      000D97 90r06r0F         [24] 3005 	mov	dptr,#_transmit_tcp_packet_PARM_2
      000D9A E0               [24] 3006 	movx	a,@dptr
      000D9B FE               [12] 3007 	mov	r6,a
      000D9C A3               [24] 3008 	inc	dptr
      000D9D E0               [24] 3009 	movx	a,@dptr
      000D9E FF               [12] 3010 	mov	r7,a
      000D9F 8E 04            [24] 3011 	mov	ar4,r6
      000DA1 74 1C            [12] 3012 	mov	a,#0x1c
      000DA3 2F               [12] 3013 	add	a, r7
      000DA4 FD               [12] 3014 	mov	r5,a
      000DA5 1C               [12] 3015 	dec	r4
      000DA6 BC FF 01         [24] 3016 	cjne	r4,#0xff,00129$
      000DA9 1D               [12] 3017 	dec	r5
      000DAA                       3018 00129$:
      000DAA C3               [12] 3019 	clr	c
      000DAB 74 FF            [12] 3020 	mov	a,#0xff
      000DAD 9C               [12] 3021 	subb	a,r4
      000DAE 74 1F            [12] 3022 	mov	a,#0x1f
      000DB0 9D               [12] 3023 	subb	a,r5
      000DB1 50 16            [24] 3024 	jnc	00102$
                                   3025 ;	tcp.c:306: printf("\nInvalid Buffer Size. Buffer exceeds valid address range.\n");
      000DB3 74r73            [12] 3026 	mov	a,#___str_11
      000DB5 C0 E0            [24] 3027 	push	acc
      000DB7 74s01            [12] 3028 	mov	a,#(___str_11 >> 8)
      000DB9 C0 E0            [24] 3029 	push	acc
      000DBB 74 80            [12] 3030 	mov	a,#0x80
      000DBD C0 E0            [24] 3031 	push	acc
      000DBF 12r00r00         [24] 3032 	lcall	_printf
      000DC2 15 81            [12] 3033 	dec	sp
      000DC4 15 81            [12] 3034 	dec	sp
      000DC6 15 81            [12] 3035 	dec	sp
                                   3036 ;	tcp.c:307: return;
      000DC8 22               [24] 3037 	ret
      000DC9                       3038 00102$:
                                   3039 ;	tcp.c:309: uint16_t end_address = start_address + packet_size - 1;
      000DC9 8E 04            [24] 3040 	mov	ar4,r6
      000DCB 74 1C            [12] 3041 	mov	a,#0x1c
      000DCD 2F               [12] 3042 	add	a, r7
      000DCE FD               [12] 3043 	mov	r5,a
      000DCF 1C               [12] 3044 	dec	r4
      000DD0 BC FF 01         [24] 3045 	cjne	r4,#0xff,00131$
      000DD3 1D               [12] 3046 	dec	r5
      000DD4                       3047 00131$:
                                   3048 ;	tcp.c:310: spi_buffer_write(packet_size, start_address, packet);
      000DD4 90r06r11         [24] 3049 	mov	dptr,#_transmit_tcp_packet_packet_10000_166
      000DD7 E0               [24] 3050 	movx	a,@dptr
      000DD8 F9               [12] 3051 	mov	r1,a
      000DD9 A3               [24] 3052 	inc	dptr
      000DDA E0               [24] 3053 	movx	a,@dptr
      000DDB FA               [12] 3054 	mov	r2,a
      000DDC A3               [24] 3055 	inc	dptr
      000DDD E0               [24] 3056 	movx	a,@dptr
      000DDE FB               [12] 3057 	mov	r3,a
      000DDF 90r00r00         [24] 3058 	mov	dptr,#_spi_buffer_write_PARM_2
      000DE2 E4               [12] 3059 	clr	a
      000DE3 F0               [24] 3060 	movx	@dptr,a
      000DE4 74 1C            [12] 3061 	mov	a,#0x1c
      000DE6 A3               [24] 3062 	inc	dptr
      000DE7 F0               [24] 3063 	movx	@dptr,a
      000DE8 90r00r00         [24] 3064 	mov	dptr,#_spi_buffer_write_PARM_3
      000DEB E9               [12] 3065 	mov	a,r1
      000DEC F0               [24] 3066 	movx	@dptr,a
      000DED EA               [12] 3067 	mov	a,r2
      000DEE A3               [24] 3068 	inc	dptr
      000DEF F0               [24] 3069 	movx	@dptr,a
      000DF0 EB               [12] 3070 	mov	a,r3
      000DF1 A3               [24] 3071 	inc	dptr
      000DF2 F0               [24] 3072 	movx	@dptr,a
      000DF3 8E 82            [24] 3073 	mov	dpl, r6
      000DF5 8F 83            [24] 3074 	mov	dph, r7
      000DF7 C0 05            [24] 3075 	push	ar5
      000DF9 C0 04            [24] 3076 	push	ar4
      000DFB 12r00r00         [24] 3077 	lcall	_spi_buffer_write
      000DFE D0 04            [24] 3078 	pop	ar4
      000E00 D0 05            [24] 3079 	pop	ar5
                                   3080 ;	tcp.c:313: enc28j60_set_transmit_pointers(start_address, end_address);
      000E02 90r00r00         [24] 3081 	mov	dptr,#_enc28j60_set_transmit_pointers_PARM_2
      000E05 EC               [12] 3082 	mov	a,r4
      000E06 F0               [24] 3083 	movx	@dptr,a
      000E07 ED               [12] 3084 	mov	a,r5
      000E08 A3               [24] 3085 	inc	dptr
      000E09 F0               [24] 3086 	movx	@dptr,a
      000E0A 90 1C 00         [24] 3087 	mov	dptr,#0x1c00
      000E0D 12r00r00         [24] 3088 	lcall	_enc28j60_set_transmit_pointers
                                   3089 ;	tcp.c:316: enc28j60_start_transmission();
      000E10 12r00r00         [24] 3090 	lcall	_enc28j60_start_transmission
                                   3091 ;	tcp.c:319: if (wait_for_transmission_complete(500)) {  // Wait up to 500 ms
      000E13 90 01 F4         [24] 3092 	mov	dptr,#0x01f4
      000E16 12r00r00         [24] 3093 	lcall	_wait_for_transmission_complete
      000E19 E5 82            [12] 3094 	mov	a, dpl
      000E1B 60 38            [24] 3095 	jz	00107$
                                   3096 ;	tcp.c:321: if (enc28j60_transmission_successful()) {
      000E1D 12r00r00         [24] 3097 	lcall	_enc28j60_transmission_successful
      000E20 E5 82            [12] 3098 	mov	a, dpl
      000E22 85 83 F0         [24] 3099 	mov	b, dph
      000E25 45 F0            [12] 3100 	orl	a,b
      000E27 60 16            [24] 3101 	jz	00104$
                                   3102 ;	tcp.c:322: printf("TCP request sent successfully.\n\r");
      000E29 74rAE            [12] 3103 	mov	a,#___str_12
      000E2B C0 E0            [24] 3104 	push	acc
      000E2D 74s01            [12] 3105 	mov	a,#(___str_12 >> 8)
      000E2F C0 E0            [24] 3106 	push	acc
      000E31 74 80            [12] 3107 	mov	a,#0x80
      000E33 C0 E0            [24] 3108 	push	acc
      000E35 12r00r00         [24] 3109 	lcall	_printf
      000E38 15 81            [12] 3110 	dec	sp
      000E3A 15 81            [12] 3111 	dec	sp
      000E3C 15 81            [12] 3112 	dec	sp
      000E3E 22               [24] 3113 	ret
      000E3F                       3114 00104$:
                                   3115 ;	tcp.c:324: printf("TCP transmission failed. Check error flags.\n\r");
      000E3F 74rCF            [12] 3116 	mov	a,#___str_13
      000E41 C0 E0            [24] 3117 	push	acc
      000E43 74s01            [12] 3118 	mov	a,#(___str_13 >> 8)
      000E45 C0 E0            [24] 3119 	push	acc
      000E47 74 80            [12] 3120 	mov	a,#0x80
      000E49 C0 E0            [24] 3121 	push	acc
      000E4B 12r00r00         [24] 3122 	lcall	_printf
      000E4E 15 81            [12] 3123 	dec	sp
      000E50 15 81            [12] 3124 	dec	sp
      000E52 15 81            [12] 3125 	dec	sp
      000E54 22               [24] 3126 	ret
      000E55                       3127 00107$:
                                   3128 ;	tcp.c:328: "Transmission timeout. ENC28J60 may not be functioning correctly.\n\r");
      000E55 74rFD            [12] 3129 	mov	a,#___str_14
      000E57 C0 E0            [24] 3130 	push	acc
      000E59 74s01            [12] 3131 	mov	a,#(___str_14 >> 8)
      000E5B C0 E0            [24] 3132 	push	acc
      000E5D 74 80            [12] 3133 	mov	a,#0x80
      000E5F C0 E0            [24] 3134 	push	acc
      000E61 12r00r00         [24] 3135 	lcall	_printf
      000E64 15 81            [12] 3136 	dec	sp
      000E66 15 81            [12] 3137 	dec	sp
      000E68 15 81            [12] 3138 	dec	sp
                                   3139 ;	tcp.c:330: }
      000E6A 22               [24] 3140 	ret
                                   3141 	.area CSEG    (CODE)
                                   3142 	.area CONST   (CODE)
                                   3143 	.area CONST   (CODE)
      000000                       3144 ___str_0:
      000000 0A                    3145 	.db 0x0a
      000001 48 65 78 64 75 6D 70  3146 	.ascii "Hexdump (Size: %d):"
             20 28 53 69 7A 65 3A
             20 25 64 29 3A
      000014 0A                    3147 	.db 0x0a
      000015 00                    3148 	.db 0x00
                                   3149 	.area CSEG    (CODE)
                                   3150 	.area CONST   (CODE)
      000016                       3151 ___str_1:
      000016 25 30 32 58 20        3152 	.ascii "%02X "
      00001B 00                    3153 	.db 0x00
                                   3154 	.area CSEG    (CODE)
                                   3155 	.area CONST   (CODE)
      00001C                       3156 ___str_2:
      00001C 0A                    3157 	.db 0x0a
      00001D 00                    3158 	.db 0x00
                                   3159 	.area CSEG    (CODE)
                                   3160 	.area CONST   (CODE)
      00001E                       3161 ___str_3:
      00001E 0A                    3162 	.db 0x0a
      00001F 0D                    3163 	.db 0x0d
      000020 49 6E 76 61 6C 69 64  3164 	.ascii "Invalid start address: %04X"
             20 73 74 61 72 74 20
             61 64 64 72 65 73 73
             3A 20 25 30 34 58
      00003B 0A                    3165 	.db 0x0a
      00003C 0D                    3166 	.db 0x0d
      00003D 00                    3167 	.db 0x00
                                   3168 	.area CSEG    (CODE)
                                   3169 	.area CONST   (CODE)
      00003E                       3170 ___str_4:
      00003E 0A                    3171 	.db 0x0a
      00003F 0D                    3172 	.db 0x0d
      000040 46 61 69 6C 65 64 20  3173 	.ascii "Failed to read packet start address bytes"
             74 6F 20 72 65 61 64
             20 70 61 63 6B 65 74
             20 73 74 61 72 74 20
             61 64 64 72 65 73 73
             20 62 79 74 65 73
      000069 0A                    3174 	.db 0x0a
      00006A 0D                    3175 	.db 0x0d
      00006B 00                    3176 	.db 0x00
                                   3177 	.area CSEG    (CODE)
                                   3178 	.area CONST   (CODE)
      00006C                       3179 ___str_5:
      00006C 0A                    3180 	.db 0x0a
      00006D 0D                    3181 	.db 0x0d
      00006E 49 6E 76 61 6C 69 64  3182 	.ascii "Invalid next start address: 0x%04X"
             20 6E 65 78 74 20 73
             74 61 72 74 20 61 64
             64 72 65 73 73 3A 20
             30 78 25 30 34 58
      000090 0A                    3183 	.db 0x0a
      000091 0D                    3184 	.db 0x0d
      000092 00                    3185 	.db 0x00
                                   3186 	.area CSEG    (CODE)
                                   3187 	.area CONST   (CODE)
      000093                       3188 ___str_6:
      000093 0A                    3189 	.db 0x0a
      000094 0D                    3190 	.db 0x0d
      000095 4D 65 6D 6F 72 79 20  3191 	.ascii "Memory allocation failed for packet size: %d"
             61 6C 6C 6F 63 61 74
             69 6F 6E 20 66 61 69
             6C 65 64 20 66 6F 72
             20 70 61 63 6B 65 74
             20 73 69 7A 65 3A 20
             25 64
      0000C1 0A                    3192 	.db 0x0a
      0000C2 0D                    3193 	.db 0x0d
      0000C3 00                    3194 	.db 0x00
                                   3195 	.area CSEG    (CODE)
                                   3196 	.area CONST   (CODE)
      0000C4                       3197 ___str_7:
      0000C4 0A                    3198 	.db 0x0a
      0000C5 0D                    3199 	.db 0x0d
      0000C6 46 61 69 6C 65 64 20  3200 	.ascii "Failed to read packet data"
             74 6F 20 72 65 61 64
             20 70 61 63 6B 65 74
             20 64 61 74 61
      0000E0 0A                    3201 	.db 0x0a
      0000E1 0D                    3202 	.db 0x0d
      0000E2 00                    3203 	.db 0x00
                                   3204 	.area CSEG    (CODE)
                                   3205 	.area CONST   (CODE)
      0000E3                       3206 ___str_8:
      0000E3 0A                    3207 	.db 0x0a
      0000E4 50 72 6F 63 65 73 73  3208 	.ascii "Processed response data:"
             65 64 20 72 65 73 70
             6F 6E 73 65 20 64 61
             74 61 3A
      0000FC 0A                    3209 	.db 0x0a
      0000FD 00                    3210 	.db 0x00
                                   3211 	.area CSEG    (CODE)
                                   3212 	.area CONST   (CODE)
      0000FE                       3213 ___str_9:
      0000FE 0A                    3214 	.db 0x0a
      0000FF 4E 6F 20 72 65 73 70  3215 	.ascii "No response generated by TCP packet processing."
             6F 6E 73 65 20 67 65
             6E 65 72 61 74 65 64
             20 62 79 20 54 43 50
             20 70 61 63 6B 65 74
             20 70 72 6F 63 65 73
             73 69 6E 67 2E
      00012E 0A                    3216 	.db 0x0a
      00012F 00                    3217 	.db 0x00
                                   3218 	.area CSEG    (CODE)
                                   3219 	.area CONST   (CODE)
      000130                       3220 ___str_10:
      000130 0A                    3221 	.db 0x0a
      000131 0D                    3222 	.db 0x0d
      000132 53 75 63 63 65 73 73  3223 	.ascii "Successfully processed packet of size %d from 0x%04X to 0x%0"
             66 75 6C 6C 79 20 70
             72 6F 63 65 73 73 65
             64 20 70 61 63 6B 65
             74 20 6F 66 20 73 69
             7A 65 20 25 64 20 66
             72 6F 6D 20 30 78 25
             30 34 58 20 74 6F 20
             30 78 25 30
      00016E 34 58                 3224 	.ascii "4X"
      000170 0A                    3225 	.db 0x0a
      000171 0D                    3226 	.db 0x0d
      000172 00                    3227 	.db 0x00
                                   3228 	.area CSEG    (CODE)
                                   3229 	.area CONST   (CODE)
      000173                       3230 ___str_11:
      000173 0A                    3231 	.db 0x0a
      000174 49 6E 76 61 6C 69 64  3232 	.ascii "Invalid Buffer Size. Buffer exceeds valid address range."
             20 42 75 66 66 65 72
             20 53 69 7A 65 2E 20
             42 75 66 66 65 72 20
             65 78 63 65 65 64 73
             20 76 61 6C 69 64 20
             61 64 64 72 65 73 73
             20 72 61 6E 67 65 2E
      0001AC 0A                    3233 	.db 0x0a
      0001AD 00                    3234 	.db 0x00
                                   3235 	.area CSEG    (CODE)
                                   3236 	.area CONST   (CODE)
      0001AE                       3237 ___str_12:
      0001AE 54 43 50 20 72 65 71  3238 	.ascii "TCP request sent successfully."
             75 65 73 74 20 73 65
             6E 74 20 73 75 63 63
             65 73 73 66 75 6C 6C
             79 2E
      0001CC 0A                    3239 	.db 0x0a
      0001CD 0D                    3240 	.db 0x0d
      0001CE 00                    3241 	.db 0x00
                                   3242 	.area CSEG    (CODE)
                                   3243 	.area CONST   (CODE)
      0001CF                       3244 ___str_13:
      0001CF 54 43 50 20 74 72 61  3245 	.ascii "TCP transmission failed. Check error flags."
             6E 73 6D 69 73 73 69
             6F 6E 20 66 61 69 6C
             65 64 2E 20 43 68 65
             63 6B 20 65 72 72 6F
             72 20 66 6C 61 67 73
             2E
      0001FA 0A                    3246 	.db 0x0a
      0001FB 0D                    3247 	.db 0x0d
      0001FC 00                    3248 	.db 0x00
                                   3249 	.area CSEG    (CODE)
                                   3250 	.area CONST   (CODE)
      0001FD                       3251 ___str_14:
      0001FD 54 72 61 6E 73 6D 69  3252 	.ascii "Transmission timeout. ENC28J60 may not be functioning correc"
             73 73 69 6F 6E 20 74
             69 6D 65 6F 75 74 2E
             20 45 4E 43 32 38 4A
             36 30 20 6D 61 79 20
             6E 6F 74 20 62 65 20
             66 75 6E 63 74 69 6F
             6E 69 6E 67 20 63 6F
             72 72 65 63
      000239 74 6C 79 2E           3253 	.ascii "tly."
      00023D 0A                    3254 	.db 0x0a
      00023E 0D                    3255 	.db 0x0d
      00023F 00                    3256 	.db 0x00
                                   3257 	.area CSEG    (CODE)
                                   3258 	.area XINIT   (CODE)
                                   3259 	.area CABS    (ABS,CODE)
